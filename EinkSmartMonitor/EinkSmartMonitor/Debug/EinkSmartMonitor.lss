
EinkSmartMonitor.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000aab0  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000aab0  0000aab0  0001aab0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a08  20000000  0000aab8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00001870  20000a08  0000b4c0  00020a08  2**2
                  ALLOC
  4 .stack        00001000  20002278  0000cd30  00020a08  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00020a08  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020a32  2**0
                  CONTENTS, READONLY
  7 .debug_info   000c55af  00000000  00000000  00020a8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00005746  00000000  00000000  000e603a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00052283  00000000  00000000  000eb780  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00003568  00000000  00000000  0013da03  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00003530  00000000  00000000  00140f6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000a6f6  00000000  00000000  0014449b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000199ef  00000000  00000000  0014eb91  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0006fec2  00000000  00000000  00168580  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000bb6c  00000000  00000000  001d8444  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	78 32 00 20 09 01 00 00 05 01 00 00 05 01 00 00     x2. ............
	...
      2c:	05 01 00 00 00 00 00 00 00 00 00 00 05 01 00 00     ................
      3c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
      4c:	05 01 00 00 d1 07 00 00 05 01 00 00 05 01 00 00     ................
      5c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
	...
      74:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
      84:	05 01 00 00 05 01 00 00 00 00 00 00 00 00 00 00     ................
      94:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................

000000a4 <__do_global_dtors_aux>:
      a4:	b510      	push	{r4, lr}
      a6:	4c06      	ldr	r4, [pc, #24]	; (c0 <__do_global_dtors_aux+0x1c>)
      a8:	7823      	ldrb	r3, [r4, #0]
      aa:	2b00      	cmp	r3, #0
      ac:	d107      	bne.n	be <__do_global_dtors_aux+0x1a>
      ae:	4b05      	ldr	r3, [pc, #20]	; (c4 <__do_global_dtors_aux+0x20>)
      b0:	2b00      	cmp	r3, #0
      b2:	d002      	beq.n	ba <__do_global_dtors_aux+0x16>
      b4:	4804      	ldr	r0, [pc, #16]	; (c8 <__do_global_dtors_aux+0x24>)
      b6:	e000      	b.n	ba <__do_global_dtors_aux+0x16>
      b8:	bf00      	nop
      ba:	2301      	movs	r3, #1
      bc:	7023      	strb	r3, [r4, #0]
      be:	bd10      	pop	{r4, pc}
      c0:	20000a08 	.word	0x20000a08
      c4:	00000000 	.word	0x00000000
      c8:	0000aab8 	.word	0x0000aab8

000000cc <frame_dummy>:
      cc:	4b08      	ldr	r3, [pc, #32]	; (f0 <frame_dummy+0x24>)
      ce:	b510      	push	{r4, lr}
      d0:	2b00      	cmp	r3, #0
      d2:	d003      	beq.n	dc <frame_dummy+0x10>
      d4:	4907      	ldr	r1, [pc, #28]	; (f4 <frame_dummy+0x28>)
      d6:	4808      	ldr	r0, [pc, #32]	; (f8 <frame_dummy+0x2c>)
      d8:	e000      	b.n	dc <frame_dummy+0x10>
      da:	bf00      	nop
      dc:	4807      	ldr	r0, [pc, #28]	; (fc <frame_dummy+0x30>)
      de:	6803      	ldr	r3, [r0, #0]
      e0:	2b00      	cmp	r3, #0
      e2:	d100      	bne.n	e6 <frame_dummy+0x1a>
      e4:	bd10      	pop	{r4, pc}
      e6:	4b06      	ldr	r3, [pc, #24]	; (100 <frame_dummy+0x34>)
      e8:	2b00      	cmp	r3, #0
      ea:	d0fb      	beq.n	e4 <frame_dummy+0x18>
      ec:	4798      	blx	r3
      ee:	e7f9      	b.n	e4 <frame_dummy+0x18>
      f0:	00000000 	.word	0x00000000
      f4:	20000a0c 	.word	0x20000a0c
      f8:	0000aab8 	.word	0x0000aab8
      fc:	0000aab8 	.word	0x0000aab8
     100:	00000000 	.word	0x00000000

00000104 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     104:	e7fe      	b.n	104 <Dummy_Handler>
	...

00000108 <Reset_Handler>:
{
     108:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
     10a:	4a12      	ldr	r2, [pc, #72]	; (154 <Reset_Handler+0x4c>)
     10c:	4b12      	ldr	r3, [pc, #72]	; (158 <Reset_Handler+0x50>)
     10e:	429a      	cmp	r2, r3
     110:	d009      	beq.n	126 <Reset_Handler+0x1e>
     112:	4b11      	ldr	r3, [pc, #68]	; (158 <Reset_Handler+0x50>)
     114:	4a0f      	ldr	r2, [pc, #60]	; (154 <Reset_Handler+0x4c>)
     116:	e003      	b.n	120 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     118:	6811      	ldr	r1, [r2, #0]
     11a:	6019      	str	r1, [r3, #0]
     11c:	3304      	adds	r3, #4
     11e:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     120:	490e      	ldr	r1, [pc, #56]	; (15c <Reset_Handler+0x54>)
     122:	428b      	cmp	r3, r1
     124:	d3f8      	bcc.n	118 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     126:	4b0e      	ldr	r3, [pc, #56]	; (160 <Reset_Handler+0x58>)
     128:	e002      	b.n	130 <Reset_Handler+0x28>
                *pDest++ = 0;
     12a:	2200      	movs	r2, #0
     12c:	601a      	str	r2, [r3, #0]
     12e:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     130:	4a0c      	ldr	r2, [pc, #48]	; (164 <Reset_Handler+0x5c>)
     132:	4293      	cmp	r3, r2
     134:	d3f9      	bcc.n	12a <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     136:	4a0c      	ldr	r2, [pc, #48]	; (168 <Reset_Handler+0x60>)
     138:	21ff      	movs	r1, #255	; 0xff
     13a:	4b0c      	ldr	r3, [pc, #48]	; (16c <Reset_Handler+0x64>)
     13c:	438b      	bics	r3, r1
     13e:	6093      	str	r3, [r2, #8]
        NVMCTRL->CTRLB.bit.MANW = 1;
     140:	4a0b      	ldr	r2, [pc, #44]	; (170 <Reset_Handler+0x68>)
     142:	6851      	ldr	r1, [r2, #4]
     144:	2380      	movs	r3, #128	; 0x80
     146:	430b      	orrs	r3, r1
     148:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     14a:	4b0a      	ldr	r3, [pc, #40]	; (174 <Reset_Handler+0x6c>)
     14c:	4798      	blx	r3
        main();
     14e:	4b0a      	ldr	r3, [pc, #40]	; (178 <Reset_Handler+0x70>)
     150:	4798      	blx	r3
     152:	e7fe      	b.n	152 <Reset_Handler+0x4a>
     154:	0000aab8 	.word	0x0000aab8
     158:	20000000 	.word	0x20000000
     15c:	20000a08 	.word	0x20000a08
     160:	20000a08 	.word	0x20000a08
     164:	20002278 	.word	0x20002278
     168:	e000ed00 	.word	0xe000ed00
     16c:	00000000 	.word	0x00000000
     170:	41004000 	.word	0x41004000
     174:	00004c4d 	.word	0x00004c4d
     178:	00002c95 	.word	0x00002c95

0000017c <delay_driver_init>:
	i2c_m_sync_init(&I2C_0, SERCOM3);
	I2C_0_PORT_init();
}

void delay_driver_init(void)
{
     17c:	b510      	push	{r4, lr}
	delay_init(SysTick);
     17e:	4802      	ldr	r0, [pc, #8]	; (188 <delay_driver_init+0xc>)
     180:	4b02      	ldr	r3, [pc, #8]	; (18c <delay_driver_init+0x10>)
     182:	4798      	blx	r3
}
     184:	bd10      	pop	{r4, pc}
     186:	46c0      	nop			; (mov r8, r8)
     188:	e000e010 	.word	0xe000e010
     18c:	000001ad 	.word	0x000001ad

00000190 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     190:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
     194:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     196:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     198:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
     19c:	4770      	bx	lr

0000019e <atomic_leave_critical>:
     19e:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     1a2:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     1a4:	f383 8810 	msr	PRIMASK, r3
}
     1a8:	4770      	bx	lr
	...

000001ac <delay_init>:

/**
 * \brief Initialize Delay driver
 */
void delay_init(void *const hw)
{
     1ac:	b510      	push	{r4, lr}
	_delay_init(hardware = hw);
     1ae:	4b02      	ldr	r3, [pc, #8]	; (1b8 <delay_init+0xc>)
     1b0:	6018      	str	r0, [r3, #0]
     1b2:	4b02      	ldr	r3, [pc, #8]	; (1bc <delay_init+0x10>)
     1b4:	4798      	blx	r3
}
     1b6:	bd10      	pop	{r4, pc}
     1b8:	20000a24 	.word	0x20000a24
     1bc:	000011ed 	.word	0x000011ed

000001c0 <delay_us>:

/**
 * \brief Perform delay in us
 */
void delay_us(const uint16_t us)
{
     1c0:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_us(us));
     1c2:	4b04      	ldr	r3, [pc, #16]	; (1d4 <delay_us+0x14>)
     1c4:	681c      	ldr	r4, [r3, #0]
     1c6:	4b04      	ldr	r3, [pc, #16]	; (1d8 <delay_us+0x18>)
     1c8:	4798      	blx	r3
     1ca:	0001      	movs	r1, r0
     1cc:	0020      	movs	r0, r4
     1ce:	4b03      	ldr	r3, [pc, #12]	; (1dc <delay_us+0x1c>)
     1d0:	4798      	blx	r3
}
     1d2:	bd10      	pop	{r4, pc}
     1d4:	20000a24 	.word	0x20000a24
     1d8:	00000685 	.word	0x00000685
     1dc:	000011f9 	.word	0x000011f9

000001e0 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     1e0:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     1e2:	4b04      	ldr	r3, [pc, #16]	; (1f4 <delay_ms+0x14>)
     1e4:	681c      	ldr	r4, [r3, #0]
     1e6:	4b04      	ldr	r3, [pc, #16]	; (1f8 <delay_ms+0x18>)
     1e8:	4798      	blx	r3
     1ea:	0001      	movs	r1, r0
     1ec:	0020      	movs	r0, r4
     1ee:	4b03      	ldr	r3, [pc, #12]	; (1fc <delay_ms+0x1c>)
     1f0:	4798      	blx	r3
}
     1f2:	bd10      	pop	{r4, pc}
     1f4:	20000a24 	.word	0x20000a24
     1f8:	0000069d 	.word	0x0000069d
     1fc:	000011f9 	.word	0x000011f9

00000200 <process_ext_irq>:
 * \brief Interrupt processing routine
 *
 * \param[in] pin The pin which triggered the interrupt
 */
static void process_ext_irq(const uint32_t pin)
{
     200:	b570      	push	{r4, r5, r6, lr}
	uint8_t lower = 0, middle, upper = EXT_IRQ_AMOUNT;
     202:	2502      	movs	r5, #2
     204:	2400      	movs	r4, #0

	while (upper >= lower) {
     206:	e007      	b.n	218 <process_ext_irq+0x18>
		if (middle >= EXT_IRQ_AMOUNT) {
			return;
		}

		if (ext_irqs[middle].pin == pin) {
			if (ext_irqs[middle].cb) {
     208:	4a0d      	ldr	r2, [pc, #52]	; (240 <process_ext_irq+0x40>)
     20a:	58b3      	ldr	r3, [r6, r2]
     20c:	2b00      	cmp	r3, #0
     20e:	d000      	beq.n	212 <process_ext_irq+0x12>
				ext_irqs[middle].cb();
     210:	4798      	blx	r3
			lower = middle + 1;
		} else {
			upper = middle - 1;
		}
	}
}
     212:	bd70      	pop	{r4, r5, r6, pc}
			upper = middle - 1;
     214:	3a01      	subs	r2, #1
     216:	b2d5      	uxtb	r5, r2
	while (upper >= lower) {
     218:	42ac      	cmp	r4, r5
     21a:	d8fa      	bhi.n	212 <process_ext_irq+0x12>
		middle = (upper + lower) >> 1;
     21c:	192b      	adds	r3, r5, r4
     21e:	105b      	asrs	r3, r3, #1
     220:	b2da      	uxtb	r2, r3
		if (middle >= EXT_IRQ_AMOUNT) {
     222:	2a01      	cmp	r2, #1
     224:	d8f5      	bhi.n	212 <process_ext_irq+0x12>
     226:	21ff      	movs	r1, #255	; 0xff
     228:	400b      	ands	r3, r1
		if (ext_irqs[middle].pin == pin) {
     22a:	00de      	lsls	r6, r3, #3
     22c:	4904      	ldr	r1, [pc, #16]	; (240 <process_ext_irq+0x40>)
     22e:	1989      	adds	r1, r1, r6
     230:	6849      	ldr	r1, [r1, #4]
     232:	4281      	cmp	r1, r0
     234:	d0e8      	beq.n	208 <process_ext_irq+0x8>
		if (ext_irqs[middle].pin < pin) {
     236:	d2ed      	bcs.n	214 <process_ext_irq+0x14>
			lower = middle + 1;
     238:	3201      	adds	r2, #1
     23a:	b2d4      	uxtb	r4, r2
     23c:	e7ec      	b.n	218 <process_ext_irq+0x18>
     23e:	46c0      	nop			; (mov r8, r8)
     240:	20000a28 	.word	0x20000a28

00000244 <ext_irq_init>:
{
     244:	b510      	push	{r4, lr}
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     246:	2300      	movs	r3, #0
     248:	e009      	b.n	25e <ext_irq_init+0x1a>
		ext_irqs[i].pin = 0xFFFFFFFF;
     24a:	4a08      	ldr	r2, [pc, #32]	; (26c <ext_irq_init+0x28>)
     24c:	00d9      	lsls	r1, r3, #3
     24e:	1850      	adds	r0, r2, r1
     250:	2401      	movs	r4, #1
     252:	4264      	negs	r4, r4
     254:	6044      	str	r4, [r0, #4]
		ext_irqs[i].cb  = NULL;
     256:	2000      	movs	r0, #0
     258:	5088      	str	r0, [r1, r2]
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     25a:	3301      	adds	r3, #1
     25c:	b29b      	uxth	r3, r3
     25e:	2b01      	cmp	r3, #1
     260:	d9f3      	bls.n	24a <ext_irq_init+0x6>
	return _ext_irq_init(process_ext_irq);
     262:	4803      	ldr	r0, [pc, #12]	; (270 <ext_irq_init+0x2c>)
     264:	4b03      	ldr	r3, [pc, #12]	; (274 <ext_irq_init+0x30>)
     266:	4798      	blx	r3
}
     268:	bd10      	pop	{r4, pc}
     26a:	46c0      	nop			; (mov r8, r8)
     26c:	20000a28 	.word	0x20000a28
     270:	00000201 	.word	0x00000201
     274:	000006e1 	.word	0x000006e1

00000278 <ext_irq_register>:
{
     278:	b5f0      	push	{r4, r5, r6, r7, lr}
     27a:	46d6      	mov	lr, sl
     27c:	464f      	mov	r7, r9
     27e:	4646      	mov	r6, r8
     280:	b5c0      	push	{r6, r7, lr}
     282:	b084      	sub	sp, #16
	uint8_t i = 0, j = 0;
     284:	2300      	movs	r3, #0
	for (; i < EXT_IRQ_AMOUNT; i++) {
     286:	2b01      	cmp	r3, #1
     288:	d80c      	bhi.n	2a4 <ext_irq_register+0x2c>
		if (ext_irqs[i].pin == pin) {
     28a:	00dc      	lsls	r4, r3, #3
     28c:	4a32      	ldr	r2, [pc, #200]	; (358 <ext_irq_register+0xe0>)
     28e:	1912      	adds	r2, r2, r4
     290:	6852      	ldr	r2, [r2, #4]
     292:	4282      	cmp	r2, r0
     294:	d002      	beq.n	29c <ext_irq_register+0x24>
	for (; i < EXT_IRQ_AMOUNT; i++) {
     296:	3301      	adds	r3, #1
     298:	b2db      	uxtb	r3, r3
     29a:	e7f4      	b.n	286 <ext_irq_register+0xe>
			ext_irqs[i].cb = cb;
     29c:	4b2e      	ldr	r3, [pc, #184]	; (358 <ext_irq_register+0xe0>)
     29e:	50e1      	str	r1, [r4, r3]
			found          = true;
     2a0:	2601      	movs	r6, #1
			break;
     2a2:	e000      	b.n	2a6 <ext_irq_register+0x2e>
	bool    found = false;
     2a4:	2600      	movs	r6, #0
	if (NULL == cb) {
     2a6:	2900      	cmp	r1, #0
     2a8:	d00c      	beq.n	2c4 <ext_irq_register+0x4c>
	if (!found) {
     2aa:	2e00      	cmp	r6, #0
     2ac:	d142      	bne.n	334 <ext_irq_register+0xbc>
     2ae:	2300      	movs	r3, #0
		for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     2b0:	2b01      	cmp	r3, #1
     2b2:	d811      	bhi.n	2d8 <ext_irq_register+0x60>
			if (NULL == ext_irqs[i].cb) {
     2b4:	00da      	lsls	r2, r3, #3
     2b6:	4d28      	ldr	r5, [pc, #160]	; (358 <ext_irq_register+0xe0>)
     2b8:	5952      	ldr	r2, [r2, r5]
     2ba:	2a00      	cmp	r2, #0
     2bc:	d007      	beq.n	2ce <ext_irq_register+0x56>
		for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     2be:	3301      	adds	r3, #1
     2c0:	b2db      	uxtb	r3, r3
     2c2:	e7f5      	b.n	2b0 <ext_irq_register+0x38>
		if (!found) {
     2c4:	2e00      	cmp	r6, #0
     2c6:	d040      	beq.n	34a <ext_irq_register+0xd2>
		return _ext_irq_enable(pin, false);
     2c8:	4b24      	ldr	r3, [pc, #144]	; (35c <ext_irq_register+0xe4>)
     2ca:	4798      	blx	r3
     2cc:	e037      	b.n	33e <ext_irq_register+0xc6>
				ext_irqs[i].cb  = cb;
     2ce:	00dc      	lsls	r4, r3, #3
     2d0:	5161      	str	r1, [r4, r5]
				ext_irqs[i].pin = pin;
     2d2:	192c      	adds	r4, r5, r4
     2d4:	6060      	str	r0, [r4, #4]
				found           = true;
     2d6:	2601      	movs	r6, #1
     2d8:	2200      	movs	r2, #0
     2da:	e001      	b.n	2e0 <ext_irq_register+0x68>
		for (; (j < EXT_IRQ_AMOUNT) && (i < EXT_IRQ_AMOUNT); j++) {
     2dc:	3201      	adds	r2, #1
     2de:	b2d2      	uxtb	r2, r2
     2e0:	2a01      	cmp	r2, #1
     2e2:	d827      	bhi.n	334 <ext_irq_register+0xbc>
     2e4:	2b01      	cmp	r3, #1
     2e6:	d825      	bhi.n	334 <ext_irq_register+0xbc>
			if ((ext_irqs[i].pin < ext_irqs[j].pin) && (ext_irqs[j].pin != 0xFFFFFFFF)) {
     2e8:	9301      	str	r3, [sp, #4]
     2ea:	491b      	ldr	r1, [pc, #108]	; (358 <ext_irq_register+0xe0>)
     2ec:	00dc      	lsls	r4, r3, #3
     2ee:	190c      	adds	r4, r1, r4
     2f0:	6867      	ldr	r7, [r4, #4]
     2f2:	00d4      	lsls	r4, r2, #3
     2f4:	1909      	adds	r1, r1, r4
     2f6:	6849      	ldr	r1, [r1, #4]
     2f8:	428f      	cmp	r7, r1
     2fa:	d2ef      	bcs.n	2dc <ext_irq_register+0x64>
     2fc:	1c4c      	adds	r4, r1, #1
     2fe:	d0ed      	beq.n	2dc <ext_irq_register+0x64>
				struct ext_irq tmp = ext_irqs[j];
     300:	a902      	add	r1, sp, #8
     302:	468c      	mov	ip, r1
     304:	4c14      	ldr	r4, [pc, #80]	; (358 <ext_irq_register+0xe0>)
     306:	46a0      	mov	r8, r4
     308:	00d4      	lsls	r4, r2, #3
     30a:	46a1      	mov	r9, r4
     30c:	4644      	mov	r4, r8
     30e:	444c      	add	r4, r9
     310:	4665      	mov	r5, ip
     312:	cc82      	ldmia	r4!, {r1, r7}
     314:	c582      	stmia	r5!, {r1, r7}
				ext_irqs[j] = ext_irqs[i];
     316:	9901      	ldr	r1, [sp, #4]
     318:	00c9      	lsls	r1, r1, #3
     31a:	468a      	mov	sl, r1
     31c:	4649      	mov	r1, r9
     31e:	4441      	add	r1, r8
     320:	4644      	mov	r4, r8
     322:	4454      	add	r4, sl
     324:	cca0      	ldmia	r4!, {r5, r7}
     326:	c1a0      	stmia	r1!, {r5, r7}
				ext_irqs[i] = tmp;
     328:	4645      	mov	r5, r8
     32a:	4455      	add	r5, sl
     32c:	4661      	mov	r1, ip
     32e:	c990      	ldmia	r1!, {r4, r7}
     330:	c590      	stmia	r5!, {r4, r7}
     332:	e7d3      	b.n	2dc <ext_irq_register+0x64>
	if (!found) {
     334:	2e00      	cmp	r6, #0
     336:	d00b      	beq.n	350 <ext_irq_register+0xd8>
	return _ext_irq_enable(pin, true);
     338:	2101      	movs	r1, #1
     33a:	4b08      	ldr	r3, [pc, #32]	; (35c <ext_irq_register+0xe4>)
     33c:	4798      	blx	r3
}
     33e:	b004      	add	sp, #16
     340:	bc1c      	pop	{r2, r3, r4}
     342:	4690      	mov	r8, r2
     344:	4699      	mov	r9, r3
     346:	46a2      	mov	sl, r4
     348:	bdf0      	pop	{r4, r5, r6, r7, pc}
			return ERR_INVALID_ARG;
     34a:	200d      	movs	r0, #13
     34c:	4240      	negs	r0, r0
     34e:	e7f6      	b.n	33e <ext_irq_register+0xc6>
		return ERR_INVALID_ARG;
     350:	200d      	movs	r0, #13
     352:	4240      	negs	r0, r0
     354:	e7f3      	b.n	33e <ext_irq_register+0xc6>
     356:	46c0      	nop			; (mov r8, r8)
     358:	20000a28 	.word	0x20000a28
     35c:	0000077d 	.word	0x0000077d

00000360 <i2c_m_sync_write>:

/**
 * \brief Sync version of I2C I/O write
 */
static int32_t i2c_m_sync_write(struct io_descriptor *io, const uint8_t *buf, const uint16_t n)
{
     360:	b510      	push	{r4, lr}
     362:	b084      	sub	sp, #16
	struct i2c_m_sync_desc *i2c = CONTAINER_OF(io, struct i2c_m_sync_desc, io);
	struct _i2c_m_msg       msg;
	int32_t                 ret;

	msg.addr   = i2c->slave_addr;
     364:	3814      	subs	r0, #20
     366:	8b84      	ldrh	r4, [r0, #28]
     368:	ab01      	add	r3, sp, #4
     36a:	801c      	strh	r4, [r3, #0]
	msg.len    = n;
     36c:	0014      	movs	r4, r2
     36e:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP;
     370:	4a06      	ldr	r2, [pc, #24]	; (38c <i2c_m_sync_write+0x2c>)
     372:	805a      	strh	r2, [r3, #2]
	msg.buffer = (uint8_t *)buf;
     374:	9103      	str	r1, [sp, #12]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     376:	0019      	movs	r1, r3
     378:	4b05      	ldr	r3, [pc, #20]	; (390 <i2c_m_sync_write+0x30>)
     37a:	4798      	blx	r3

	if (ret) {
     37c:	2800      	cmp	r0, #0
     37e:	d102      	bne.n	386 <i2c_m_sync_write+0x26>
		return ret;
	}

	return n;
}
     380:	0020      	movs	r0, r4
     382:	b004      	add	sp, #16
     384:	bd10      	pop	{r4, pc}
		return ret;
     386:	0004      	movs	r4, r0
     388:	e7fa      	b.n	380 <i2c_m_sync_write+0x20>
     38a:	46c0      	nop			; (mov r8, r8)
     38c:	ffff8000 	.word	0xffff8000
     390:	00000c39 	.word	0x00000c39

00000394 <i2c_m_sync_read>:
{
     394:	b510      	push	{r4, lr}
     396:	b084      	sub	sp, #16
	msg.addr   = i2c->slave_addr;
     398:	3814      	subs	r0, #20
     39a:	8b84      	ldrh	r4, [r0, #28]
     39c:	ab01      	add	r3, sp, #4
     39e:	801c      	strh	r4, [r3, #0]
	msg.len    = n;
     3a0:	0014      	movs	r4, r2
     3a2:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     3a4:	4a06      	ldr	r2, [pc, #24]	; (3c0 <i2c_m_sync_read+0x2c>)
     3a6:	805a      	strh	r2, [r3, #2]
	msg.buffer = buf;
     3a8:	9103      	str	r1, [sp, #12]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     3aa:	0019      	movs	r1, r3
     3ac:	4b05      	ldr	r3, [pc, #20]	; (3c4 <i2c_m_sync_read+0x30>)
     3ae:	4798      	blx	r3
	if (ret) {
     3b0:	2800      	cmp	r0, #0
     3b2:	d102      	bne.n	3ba <i2c_m_sync_read+0x26>
}
     3b4:	0020      	movs	r0, r4
     3b6:	b004      	add	sp, #16
     3b8:	bd10      	pop	{r4, pc}
		return ret;
     3ba:	0004      	movs	r4, r0
     3bc:	e7fa      	b.n	3b4 <i2c_m_sync_read+0x20>
     3be:	46c0      	nop			; (mov r8, r8)
     3c0:	ffff8001 	.word	0xffff8001
     3c4:	00000c39 	.word	0x00000c39

000003c8 <i2c_m_sync_init>:

/**
 * \brief Sync version of i2c initialize
 */
int32_t i2c_m_sync_init(struct i2c_m_sync_desc *i2c, void *hw)
{
     3c8:	b570      	push	{r4, r5, r6, lr}
     3ca:	0004      	movs	r4, r0
     3cc:	000d      	movs	r5, r1
	int32_t init_status;
	ASSERT(i2c);
     3ce:	1e43      	subs	r3, r0, #1
     3d0:	4198      	sbcs	r0, r3
     3d2:	b2c0      	uxtb	r0, r0
     3d4:	225e      	movs	r2, #94	; 0x5e
     3d6:	4907      	ldr	r1, [pc, #28]	; (3f4 <i2c_m_sync_init+0x2c>)
     3d8:	4b07      	ldr	r3, [pc, #28]	; (3f8 <i2c_m_sync_init+0x30>)
     3da:	4798      	blx	r3

	init_status = _i2c_m_sync_init(&i2c->device, hw);
     3dc:	0029      	movs	r1, r5
     3de:	0020      	movs	r0, r4
     3e0:	4b06      	ldr	r3, [pc, #24]	; (3fc <i2c_m_sync_init+0x34>)
     3e2:	4798      	blx	r3
	if (init_status) {
     3e4:	2800      	cmp	r0, #0
     3e6:	d103      	bne.n	3f0 <i2c_m_sync_init+0x28>
		return init_status;
	}

	/* Init I/O */
	i2c->io.read  = i2c_m_sync_read;
     3e8:	4b05      	ldr	r3, [pc, #20]	; (400 <i2c_m_sync_init+0x38>)
     3ea:	61a3      	str	r3, [r4, #24]
	i2c->io.write = i2c_m_sync_write;
     3ec:	4b05      	ldr	r3, [pc, #20]	; (404 <i2c_m_sync_init+0x3c>)
     3ee:	6163      	str	r3, [r4, #20]

	return ERR_NONE;
}
     3f0:	bd70      	pop	{r4, r5, r6, pc}
     3f2:	46c0      	nop			; (mov r8, r8)
     3f4:	00009200 	.word	0x00009200
     3f8:	00000659 	.word	0x00000659
     3fc:	00000b15 	.word	0x00000b15
     400:	00000395 	.word	0x00000395
     404:	00000361 	.word	0x00000361

00000408 <i2c_m_sync_enable>:

/**
 * \brief Sync version of i2c enable
 */
int32_t i2c_m_sync_enable(struct i2c_m_sync_desc *i2c)
{
     408:	b510      	push	{r4, lr}
	return _i2c_m_sync_enable(&i2c->device);
     40a:	4b01      	ldr	r3, [pc, #4]	; (410 <i2c_m_sync_enable+0x8>)
     40c:	4798      	blx	r3
}
     40e:	bd10      	pop	{r4, pc}
     410:	00000bc1 	.word	0x00000bc1

00000414 <i2c_m_sync_set_slaveaddr>:
/**
 * \brief Sync version of i2c set slave address
 */
int32_t i2c_m_sync_set_slaveaddr(struct i2c_m_sync_desc *i2c, int16_t addr, int32_t addr_len)
{
	return i2c->slave_addr = (addr & 0x3ff) | (addr_len & I2C_M_TEN);
     414:	0589      	lsls	r1, r1, #22
     416:	0d89      	lsrs	r1, r1, #22
     418:	2380      	movs	r3, #128	; 0x80
     41a:	00db      	lsls	r3, r3, #3
     41c:	401a      	ands	r2, r3
     41e:	430a      	orrs	r2, r1
     420:	8382      	strh	r2, [r0, #28]
}
     422:	0010      	movs	r0, r2
     424:	4770      	bx	lr
	...

00000428 <i2c_m_sync_cmd_read>:

/**
 * \brief Sync version of i2c read command
 */
int32_t i2c_m_sync_cmd_read(struct i2c_m_sync_desc *i2c, uint8_t reg, uint8_t *buffer, uint8_t length)
{
     428:	b570      	push	{r4, r5, r6, lr}
     42a:	b086      	sub	sp, #24
     42c:	0004      	movs	r4, r0
     42e:	0016      	movs	r6, r2
     430:	001d      	movs	r5, r3
     432:	466b      	mov	r3, sp
     434:	71d9      	strb	r1, [r3, #7]
     436:	3307      	adds	r3, #7
	struct _i2c_m_msg msg;
	int32_t           ret;

	msg.addr   = i2c->slave_addr;
     438:	8b82      	ldrh	r2, [r0, #28]
     43a:	a903      	add	r1, sp, #12
     43c:	800a      	strh	r2, [r1, #0]
	msg.len    = 1;
     43e:	2201      	movs	r2, #1
     440:	604a      	str	r2, [r1, #4]
	msg.flags  = 0;
     442:	2200      	movs	r2, #0
     444:	804a      	strh	r2, [r1, #2]
	msg.buffer = &reg;
     446:	608b      	str	r3, [r1, #8]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     448:	4b07      	ldr	r3, [pc, #28]	; (468 <i2c_m_sync_cmd_read+0x40>)
     44a:	4798      	blx	r3

	if (ret != 0) {
     44c:	2800      	cmp	r0, #0
     44e:	d001      	beq.n	454 <i2c_m_sync_cmd_read+0x2c>
		/* error occurred */
		return ret;
	}

	return ERR_NONE;
}
     450:	b006      	add	sp, #24
     452:	bd70      	pop	{r4, r5, r6, pc}
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     454:	a903      	add	r1, sp, #12
     456:	4b05      	ldr	r3, [pc, #20]	; (46c <i2c_m_sync_cmd_read+0x44>)
     458:	804b      	strh	r3, [r1, #2]
	msg.buffer = buffer;
     45a:	608e      	str	r6, [r1, #8]
	msg.len    = length;
     45c:	604d      	str	r5, [r1, #4]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     45e:	0020      	movs	r0, r4
     460:	4b01      	ldr	r3, [pc, #4]	; (468 <i2c_m_sync_cmd_read+0x40>)
     462:	4798      	blx	r3
     464:	e7f4      	b.n	450 <i2c_m_sync_cmd_read+0x28>
     466:	46c0      	nop			; (mov r8, r8)
     468:	00000c39 	.word	0x00000c39
     46c:	ffff8001 	.word	0xffff8001

00000470 <i2c_m_sync_get_io_descriptor>:
/**
 * \brief Retrieve I/O descriptor
 */
int32_t i2c_m_sync_get_io_descriptor(struct i2c_m_sync_desc *const i2c, struct io_descriptor **io)
{
	*io = &i2c->io;
     470:	3014      	adds	r0, #20
     472:	6008      	str	r0, [r1, #0]
	return ERR_NONE;
}
     474:	2000      	movs	r0, #0
     476:	4770      	bx	lr

00000478 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     478:	b570      	push	{r4, r5, r6, lr}
     47a:	0004      	movs	r4, r0
     47c:	000d      	movs	r5, r1
     47e:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     480:	2800      	cmp	r0, #0
     482:	d00e      	beq.n	4a2 <io_write+0x2a>
     484:	2900      	cmp	r1, #0
     486:	d00a      	beq.n	49e <io_write+0x26>
     488:	2001      	movs	r0, #1
     48a:	2234      	movs	r2, #52	; 0x34
     48c:	4906      	ldr	r1, [pc, #24]	; (4a8 <io_write+0x30>)
     48e:	4b07      	ldr	r3, [pc, #28]	; (4ac <io_write+0x34>)
     490:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
     492:	6823      	ldr	r3, [r4, #0]
     494:	0032      	movs	r2, r6
     496:	0029      	movs	r1, r5
     498:	0020      	movs	r0, r4
     49a:	4798      	blx	r3
}
     49c:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     49e:	2000      	movs	r0, #0
     4a0:	e7f3      	b.n	48a <io_write+0x12>
     4a2:	2000      	movs	r0, #0
     4a4:	e7f1      	b.n	48a <io_write+0x12>
     4a6:	46c0      	nop			; (mov r8, r8)
     4a8:	0000921c 	.word	0x0000921c
     4ac:	00000659 	.word	0x00000659

000004b0 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     4b0:	b570      	push	{r4, r5, r6, lr}
     4b2:	0004      	movs	r4, r0
     4b4:	000d      	movs	r5, r1
     4b6:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     4b8:	2800      	cmp	r0, #0
     4ba:	d00e      	beq.n	4da <io_read+0x2a>
     4bc:	2900      	cmp	r1, #0
     4be:	d00a      	beq.n	4d6 <io_read+0x26>
     4c0:	2001      	movs	r0, #1
     4c2:	223d      	movs	r2, #61	; 0x3d
     4c4:	4906      	ldr	r1, [pc, #24]	; (4e0 <io_read+0x30>)
     4c6:	4b07      	ldr	r3, [pc, #28]	; (4e4 <io_read+0x34>)
     4c8:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
     4ca:	6863      	ldr	r3, [r4, #4]
     4cc:	0032      	movs	r2, r6
     4ce:	0029      	movs	r1, r5
     4d0:	0020      	movs	r0, r4
     4d2:	4798      	blx	r3
}
     4d4:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     4d6:	2000      	movs	r0, #0
     4d8:	e7f3      	b.n	4c2 <io_read+0x12>
     4da:	2000      	movs	r0, #0
     4dc:	e7f1      	b.n	4c2 <io_read+0x12>
     4de:	46c0      	nop			; (mov r8, r8)
     4e0:	0000921c 	.word	0x0000921c
     4e4:	00000659 	.word	0x00000659

000004e8 <spi_m_sync_init>:
	ASSERT(spi);
	spi->func = (struct _spi_m_sync_hpl_interface *)func;
}

int32_t spi_m_sync_init(struct spi_m_sync_descriptor *spi, void *const hw)
{
     4e8:	b570      	push	{r4, r5, r6, lr}
     4ea:	0004      	movs	r4, r0
     4ec:	000d      	movs	r5, r1
	int32_t rc = 0;
	ASSERT(spi && hw);
     4ee:	2800      	cmp	r0, #0
     4f0:	d017      	beq.n	522 <spi_m_sync_init+0x3a>
     4f2:	2900      	cmp	r1, #0
     4f4:	d013      	beq.n	51e <spi_m_sync_init+0x36>
     4f6:	2001      	movs	r0, #1
     4f8:	2240      	movs	r2, #64	; 0x40
     4fa:	490b      	ldr	r1, [pc, #44]	; (528 <spi_m_sync_init+0x40>)
     4fc:	4b0b      	ldr	r3, [pc, #44]	; (52c <spi_m_sync_init+0x44>)
     4fe:	4798      	blx	r3
	spi->dev.prvt = (void *)hw;
     500:	6065      	str	r5, [r4, #4]
	rc            = _spi_m_sync_init(&spi->dev, hw);
     502:	1d20      	adds	r0, r4, #4
     504:	0029      	movs	r1, r5
     506:	4b0a      	ldr	r3, [pc, #40]	; (530 <spi_m_sync_init+0x48>)
     508:	4798      	blx	r3

	if (rc < 0) {
     50a:	2800      	cmp	r0, #0
     50c:	db06      	blt.n	51c <spi_m_sync_init+0x34>
		return rc;
	}

	spi->flags    = SPI_DEACTIVATE_NEXT;
     50e:	4b09      	ldr	r3, [pc, #36]	; (534 <spi_m_sync_init+0x4c>)
     510:	82a3      	strh	r3, [r4, #20]
	spi->io.read  = _spi_m_sync_io_read;
     512:	4b09      	ldr	r3, [pc, #36]	; (538 <spi_m_sync_init+0x50>)
     514:	6123      	str	r3, [r4, #16]
	spi->io.write = _spi_m_sync_io_write;
     516:	4b09      	ldr	r3, [pc, #36]	; (53c <spi_m_sync_init+0x54>)
     518:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
     51a:	2000      	movs	r0, #0
}
     51c:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && hw);
     51e:	2000      	movs	r0, #0
     520:	e7ea      	b.n	4f8 <spi_m_sync_init+0x10>
     522:	2000      	movs	r0, #0
     524:	e7e8      	b.n	4f8 <spi_m_sync_init+0x10>
     526:	46c0      	nop			; (mov r8, r8)
     528:	00009230 	.word	0x00009230
     52c:	00000659 	.word	0x00000659
     530:	00000e55 	.word	0x00000e55
     534:	ffff8000 	.word	0xffff8000
     538:	000005ed 	.word	0x000005ed
     53c:	000005b1 	.word	0x000005b1

00000540 <spi_m_sync_enable>:
	ASSERT(spi);
	_spi_m_sync_deinit(&spi->dev);
}

void spi_m_sync_enable(struct spi_m_sync_descriptor *spi)
{
     540:	b510      	push	{r4, lr}
     542:	0004      	movs	r4, r0
	ASSERT(spi);
     544:	1e43      	subs	r3, r0, #1
     546:	4198      	sbcs	r0, r3
     548:	b2c0      	uxtb	r0, r0
     54a:	2257      	movs	r2, #87	; 0x57
     54c:	4903      	ldr	r1, [pc, #12]	; (55c <spi_m_sync_enable+0x1c>)
     54e:	4b04      	ldr	r3, [pc, #16]	; (560 <spi_m_sync_enable+0x20>)
     550:	4798      	blx	r3
	_spi_m_sync_enable(&spi->dev);
     552:	1d20      	adds	r0, r4, #4
     554:	4b03      	ldr	r3, [pc, #12]	; (564 <spi_m_sync_enable+0x24>)
     556:	4798      	blx	r3
}
     558:	bd10      	pop	{r4, pc}
     55a:	46c0      	nop			; (mov r8, r8)
     55c:	00009230 	.word	0x00009230
     560:	00000659 	.word	0x00000659
     564:	0000100d 	.word	0x0000100d

00000568 <spi_m_sync_transfer>:

	return spi_m_sync_transfer(spi, &xfer);
}

int32_t spi_m_sync_transfer(struct spi_m_sync_descriptor *spi, const struct spi_xfer *p_xfer)
{
     568:	b530      	push	{r4, r5, lr}
     56a:	b087      	sub	sp, #28
     56c:	0004      	movs	r4, r0
     56e:	000d      	movs	r5, r1
	struct spi_msg msg;

	ASSERT(spi && p_xfer);
     570:	2800      	cmp	r0, #0
     572:	d015      	beq.n	5a0 <spi_m_sync_transfer+0x38>
     574:	2900      	cmp	r1, #0
     576:	d011      	beq.n	59c <spi_m_sync_transfer+0x34>
     578:	2001      	movs	r0, #1
     57a:	22b3      	movs	r2, #179	; 0xb3
     57c:	4909      	ldr	r1, [pc, #36]	; (5a4 <spi_m_sync_transfer+0x3c>)
     57e:	4b0a      	ldr	r3, [pc, #40]	; (5a8 <spi_m_sync_transfer+0x40>)
     580:	4798      	blx	r3

	msg.txbuf = p_xfer->txbuf;
     582:	682b      	ldr	r3, [r5, #0]
     584:	9303      	str	r3, [sp, #12]
	msg.rxbuf = p_xfer->rxbuf;
     586:	686b      	ldr	r3, [r5, #4]
     588:	9304      	str	r3, [sp, #16]
	msg.size  = p_xfer->size;
     58a:	68ab      	ldr	r3, [r5, #8]
     58c:	9301      	str	r3, [sp, #4]
     58e:	9305      	str	r3, [sp, #20]
	return _spi_m_sync_trans(&spi->dev, &msg);
     590:	1d20      	adds	r0, r4, #4
     592:	a903      	add	r1, sp, #12
     594:	4b05      	ldr	r3, [pc, #20]	; (5ac <spi_m_sync_transfer+0x44>)
     596:	4798      	blx	r3
}
     598:	b007      	add	sp, #28
     59a:	bd30      	pop	{r4, r5, pc}
	ASSERT(spi && p_xfer);
     59c:	2000      	movs	r0, #0
     59e:	e7ec      	b.n	57a <spi_m_sync_transfer+0x12>
     5a0:	2000      	movs	r0, #0
     5a2:	e7ea      	b.n	57a <spi_m_sync_transfer+0x12>
     5a4:	00009230 	.word	0x00009230
     5a8:	00000659 	.word	0x00000659
     5ac:	00001045 	.word	0x00001045

000005b0 <_spi_m_sync_io_write>:
{
     5b0:	b570      	push	{r4, r5, r6, lr}
     5b2:	b084      	sub	sp, #16
     5b4:	0004      	movs	r4, r0
     5b6:	000e      	movs	r6, r1
     5b8:	0015      	movs	r5, r2
	ASSERT(io);
     5ba:	1e43      	subs	r3, r0, #1
     5bc:	4198      	sbcs	r0, r3
     5be:	b2c0      	uxtb	r0, r0
     5c0:	22a3      	movs	r2, #163	; 0xa3
     5c2:	4907      	ldr	r1, [pc, #28]	; (5e0 <_spi_m_sync_io_write+0x30>)
     5c4:	4b07      	ldr	r3, [pc, #28]	; (5e4 <_spi_m_sync_io_write+0x34>)
     5c6:	4798      	blx	r3
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     5c8:	0020      	movs	r0, r4
     5ca:	380c      	subs	r0, #12
	xfer.rxbuf = 0;
     5cc:	2300      	movs	r3, #0
     5ce:	9302      	str	r3, [sp, #8]
	xfer.txbuf = (uint8_t *)buf;
     5d0:	9601      	str	r6, [sp, #4]
	xfer.size  = length;
     5d2:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
     5d4:	a901      	add	r1, sp, #4
     5d6:	4b04      	ldr	r3, [pc, #16]	; (5e8 <_spi_m_sync_io_write+0x38>)
     5d8:	4798      	blx	r3
}
     5da:	b004      	add	sp, #16
     5dc:	bd70      	pop	{r4, r5, r6, pc}
     5de:	46c0      	nop			; (mov r8, r8)
     5e0:	00009230 	.word	0x00009230
     5e4:	00000659 	.word	0x00000659
     5e8:	00000569 	.word	0x00000569

000005ec <_spi_m_sync_io_read>:
{
     5ec:	b570      	push	{r4, r5, r6, lr}
     5ee:	b084      	sub	sp, #16
     5f0:	0004      	movs	r4, r0
     5f2:	000e      	movs	r6, r1
     5f4:	0015      	movs	r5, r2
	ASSERT(io);
     5f6:	1e43      	subs	r3, r0, #1
     5f8:	4198      	sbcs	r0, r3
     5fa:	b2c0      	uxtb	r0, r0
     5fc:	2287      	movs	r2, #135	; 0x87
     5fe:	4907      	ldr	r1, [pc, #28]	; (61c <_spi_m_sync_io_read+0x30>)
     600:	4b07      	ldr	r3, [pc, #28]	; (620 <_spi_m_sync_io_read+0x34>)
     602:	4798      	blx	r3
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     604:	0020      	movs	r0, r4
     606:	380c      	subs	r0, #12
	xfer.rxbuf = buf;
     608:	9602      	str	r6, [sp, #8]
	xfer.txbuf = 0;
     60a:	2300      	movs	r3, #0
     60c:	9301      	str	r3, [sp, #4]
	xfer.size  = length;
     60e:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
     610:	a901      	add	r1, sp, #4
     612:	4b04      	ldr	r3, [pc, #16]	; (624 <_spi_m_sync_io_read+0x38>)
     614:	4798      	blx	r3
}
     616:	b004      	add	sp, #16
     618:	bd70      	pop	{r4, r5, r6, pc}
     61a:	46c0      	nop			; (mov r8, r8)
     61c:	00009230 	.word	0x00009230
     620:	00000659 	.word	0x00000659
     624:	00000569 	.word	0x00000569

00000628 <spi_m_sync_get_io_descriptor>:

int32_t spi_m_sync_get_io_descriptor(struct spi_m_sync_descriptor *const spi, struct io_descriptor **io)
{
     628:	b570      	push	{r4, r5, r6, lr}
     62a:	0004      	movs	r4, r0
     62c:	000d      	movs	r5, r1
	ASSERT(spi && io);
     62e:	2800      	cmp	r0, #0
     630:	d00c      	beq.n	64c <spi_m_sync_get_io_descriptor+0x24>
     632:	2900      	cmp	r1, #0
     634:	d008      	beq.n	648 <spi_m_sync_get_io_descriptor+0x20>
     636:	2001      	movs	r0, #1
     638:	22bd      	movs	r2, #189	; 0xbd
     63a:	4905      	ldr	r1, [pc, #20]	; (650 <spi_m_sync_get_io_descriptor+0x28>)
     63c:	4b05      	ldr	r3, [pc, #20]	; (654 <spi_m_sync_get_io_descriptor+0x2c>)
     63e:	4798      	blx	r3
	*io = &spi->io;
     640:	340c      	adds	r4, #12
     642:	602c      	str	r4, [r5, #0]
	return 0;
}
     644:	2000      	movs	r0, #0
     646:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && io);
     648:	2000      	movs	r0, #0
     64a:	e7f5      	b.n	638 <spi_m_sync_get_io_descriptor+0x10>
     64c:	2000      	movs	r0, #0
     64e:	e7f3      	b.n	638 <spi_m_sync_get_io_descriptor+0x10>
     650:	00009230 	.word	0x00009230
     654:	00000659 	.word	0x00000659

00000658 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     658:	2800      	cmp	r0, #0
     65a:	d100      	bne.n	65e <assert+0x6>
		__asm("BKPT #0");
     65c:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     65e:	4770      	bx	lr

00000660 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
     660:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
     662:	4a06      	ldr	r2, [pc, #24]	; (67c <_sbrk+0x1c>)
     664:	6812      	ldr	r2, [r2, #0]
     666:	2a00      	cmp	r2, #0
     668:	d004      	beq.n	674 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
     66a:	4a04      	ldr	r2, [pc, #16]	; (67c <_sbrk+0x1c>)
     66c:	6810      	ldr	r0, [r2, #0]

	heap += incr;
     66e:	18c3      	adds	r3, r0, r3
     670:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
     672:	4770      	bx	lr
		heap = (unsigned char *)&_end;
     674:	4902      	ldr	r1, [pc, #8]	; (680 <_sbrk+0x20>)
     676:	4a01      	ldr	r2, [pc, #4]	; (67c <_sbrk+0x1c>)
     678:	6011      	str	r1, [r2, #0]
     67a:	e7f6      	b.n	66a <_sbrk+0xa>
     67c:	20000a38 	.word	0x20000a38
     680:	20003278 	.word	0x20003278

00000684 <_get_cycles_for_us>:

/**
 * \brief Retrieve the amount of cycles to delay for the given amount of us
 */
uint32_t _get_cycles_for_us(const uint16_t us)
{
     684:	b510      	push	{r4, lr}
		return (us * (freq / 100000) - 1) / 10 + 1;
     686:	0103      	lsls	r3, r0, #4
     688:	1a1b      	subs	r3, r3, r0
     68a:	0158      	lsls	r0, r3, #5
     68c:	3801      	subs	r0, #1
     68e:	210a      	movs	r1, #10
     690:	4b01      	ldr	r3, [pc, #4]	; (698 <_get_cycles_for_us+0x14>)
     692:	4798      	blx	r3
     694:	3001      	adds	r0, #1
	return _get_cycles_for_us_internal(us, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
     696:	bd10      	pop	{r4, pc}
     698:	00003049 	.word	0x00003049

0000069c <_get_cycles_for_ms>:
 */
static inline uint32_t _get_cycles_for_ms_internal(const uint16_t ms, const uint32_t freq, const uint8_t power)
{
	switch (power) {
	case 8:
		return (ms * (freq / 100000)) * 100;
     69c:	0103      	lsls	r3, r0, #4
     69e:	1a1b      	subs	r3, r3, r0
     6a0:	015a      	lsls	r2, r3, #5
     6a2:	2064      	movs	r0, #100	; 0x64
     6a4:	4350      	muls	r0, r2
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
     6a6:	4770      	bx	lr

000006a8 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
     6a8:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
     6aa:	4a08      	ldr	r2, [pc, #32]	; (6cc <_init_chip+0x24>)
     6ac:	6853      	ldr	r3, [r2, #4]
     6ae:	2106      	movs	r1, #6
     6b0:	430b      	orrs	r3, r1
     6b2:	6053      	str	r3, [r2, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_pm_init();
     6b4:	4b06      	ldr	r3, [pc, #24]	; (6d0 <_init_chip+0x28>)
     6b6:	4798      	blx	r3
	_sysctrl_init_sources();
     6b8:	4b06      	ldr	r3, [pc, #24]	; (6d4 <_init_chip+0x2c>)
     6ba:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
     6bc:	2008      	movs	r0, #8
     6be:	4c06      	ldr	r4, [pc, #24]	; (6d8 <_init_chip+0x30>)
     6c0:	47a0      	blx	r4
#endif
	_sysctrl_init_referenced_generators();
     6c2:	4b06      	ldr	r3, [pc, #24]	; (6dc <_init_chip+0x34>)
     6c4:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
     6c6:	20f7      	movs	r0, #247	; 0xf7
     6c8:	47a0      	blx	r4
}
     6ca:	bd10      	pop	{r4, pc}
     6cc:	41004000 	.word	0x41004000
     6d0:	000008e9 	.word	0x000008e9
     6d4:	0000112d 	.word	0x0000112d
     6d8:	0000088d 	.word	0x0000088d
     6dc:	00001161 	.word	0x00001161

000006e0 <_ext_irq_init>:
typedef uint8_t  hri_eic_nmiflag_reg_t;
typedef uint8_t  hri_eic_status_reg_t;

static inline void hri_eic_wait_for_sync(const void *const hw)
{
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     6e0:	4b23      	ldr	r3, [pc, #140]	; (770 <_ext_irq_init+0x90>)
     6e2:	785b      	ldrb	r3, [r3, #1]
     6e4:	09db      	lsrs	r3, r3, #7
     6e6:	d1fb      	bne.n	6e0 <_ext_irq_init>
     6e8:	4b21      	ldr	r3, [pc, #132]	; (770 <_ext_irq_init+0x90>)
     6ea:	785b      	ldrb	r3, [r3, #1]
     6ec:	09db      	lsrs	r3, r3, #7
     6ee:	d1fb      	bne.n	6e8 <_ext_irq_init+0x8>

static inline hri_eic_ctrl_reg_t hri_eic_get_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t mask)
{
	uint8_t tmp;
	hri_eic_wait_for_sync(hw);
	tmp = ((Eic *)hw)->CTRL.reg;
     6f0:	4b1f      	ldr	r3, [pc, #124]	; (770 <_ext_irq_init+0x90>)
     6f2:	781b      	ldrb	r3, [r3, #0]
 * \brief Initialize external interrupt module
 */
int32_t _ext_irq_init(void (*cb)(const uint32_t pin))
{
	hri_eic_wait_for_sync(EIC);
	if (hri_eic_get_CTRL_reg(EIC, EIC_CTRL_ENABLE)) {
     6f4:	079b      	lsls	r3, r3, #30
     6f6:	d50a      	bpl.n	70e <_ext_irq_init+0x2e>
}

static inline void hri_eic_write_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CTRL.reg = data;
     6f8:	2200      	movs	r2, #0
     6fa:	4b1d      	ldr	r3, [pc, #116]	; (770 <_ext_irq_init+0x90>)
     6fc:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     6fe:	4b1c      	ldr	r3, [pc, #112]	; (770 <_ext_irq_init+0x90>)
     700:	785b      	ldrb	r3, [r3, #1]
     702:	09db      	lsrs	r3, r3, #7
     704:	d1fb      	bne.n	6fe <_ext_irq_init+0x1e>
     706:	4b1a      	ldr	r3, [pc, #104]	; (770 <_ext_irq_init+0x90>)
     708:	785b      	ldrb	r3, [r3, #1]
     70a:	09db      	lsrs	r3, r3, #7
     70c:	d1fb      	bne.n	706 <_ext_irq_init+0x26>
	((Eic *)hw)->CTRL.reg = data;
     70e:	2201      	movs	r2, #1
     710:	4b17      	ldr	r3, [pc, #92]	; (770 <_ext_irq_init+0x90>)
     712:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     714:	4b16      	ldr	r3, [pc, #88]	; (770 <_ext_irq_init+0x90>)
     716:	785b      	ldrb	r3, [r3, #1]
     718:	09db      	lsrs	r3, r3, #7
     71a:	d1fb      	bne.n	714 <_ext_irq_init+0x34>
     71c:	4b14      	ldr	r3, [pc, #80]	; (770 <_ext_irq_init+0x90>)
     71e:	785b      	ldrb	r3, [r3, #1]
     720:	09db      	lsrs	r3, r3, #7
     722:	d1fb      	bne.n	71c <_ext_irq_init+0x3c>
}

static inline void hri_eic_write_NMICTRL_reg(const void *const hw, hri_eic_nmictrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->NMICTRL.reg = data;
     724:	4b12      	ldr	r3, [pc, #72]	; (770 <_ext_irq_init+0x90>)
     726:	2200      	movs	r2, #0
     728:	709a      	strb	r2, [r3, #2]
}

static inline void hri_eic_write_EVCTRL_reg(const void *const hw, hri_eic_evctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->EVCTRL.reg = data;
     72a:	605a      	str	r2, [r3, #4]
}

static inline void hri_eic_write_WAKEUP_reg(const void *const hw, hri_eic_wakeup_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->WAKEUP.reg = data;
     72c:	2282      	movs	r2, #130	; 0x82
     72e:	0192      	lsls	r2, r2, #6
     730:	615a      	str	r2, [r3, #20]
}

static inline void hri_eic_write_CONFIG_reg(const void *const hw, uint8_t index, hri_eic_config_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CONFIG[index].reg = data;
     732:	2280      	movs	r2, #128	; 0x80
     734:	0552      	lsls	r2, r2, #21
     736:	619a      	str	r2, [r3, #24]
     738:	2280      	movs	r2, #128	; 0x80
     73a:	0392      	lsls	r2, r2, #14
     73c:	61da      	str	r2, [r3, #28]
	((Eic *)hw)->CTRL.reg |= EIC_CTRL_ENABLE;
     73e:	781a      	ldrb	r2, [r3, #0]
     740:	2102      	movs	r1, #2
     742:	430a      	orrs	r2, r1
     744:	b2d2      	uxtb	r2, r2
     746:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     748:	4b09      	ldr	r3, [pc, #36]	; (770 <_ext_irq_init+0x90>)
     74a:	785b      	ldrb	r3, [r3, #1]
     74c:	09db      	lsrs	r3, r3, #7
     74e:	d1fb      	bne.n	748 <_ext_irq_init+0x68>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     750:	4b08      	ldr	r3, [pc, #32]	; (774 <_ext_irq_init+0x94>)
     752:	2210      	movs	r2, #16
     754:	2180      	movs	r1, #128	; 0x80
     756:	505a      	str	r2, [r3, r1]
  __ASM volatile ("dsb 0xF":::"memory");
     758:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
     75c:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     760:	3101      	adds	r1, #1
     762:	31ff      	adds	r1, #255	; 0xff
     764:	505a      	str	r2, [r3, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     766:	601a      	str	r2, [r3, #0]

	NVIC_DisableIRQ(EIC_IRQn);
	NVIC_ClearPendingIRQ(EIC_IRQn);
	NVIC_EnableIRQ(EIC_IRQn);

	callback = cb;
     768:	4b03      	ldr	r3, [pc, #12]	; (778 <_ext_irq_init+0x98>)
     76a:	6018      	str	r0, [r3, #0]

	return ERR_NONE;
}
     76c:	2000      	movs	r0, #0
     76e:	4770      	bx	lr
     770:	40001800 	.word	0x40001800
     774:	e000e100 	.word	0xe000e100
     778:	20000a3c 	.word	0x20000a3c

0000077c <_ext_irq_enable>:

/**
 * \brief Enable / disable external irq
 */
int32_t _ext_irq_enable(const uint32_t pin, const bool enable)
{
     77c:	b530      	push	{r4, r5, lr}
	uint8_t extint = INVALID_EXTINT_NUMBER;
	uint8_t i      = 0;
     77e:	2300      	movs	r3, #0

	for (; i < ARRAY_SIZE(_map); i++) {
     780:	2b01      	cmp	r3, #1
     782:	d80b      	bhi.n	79c <_ext_irq_enable+0x20>
		if (_map[i].pin == pin) {
     784:	00dc      	lsls	r4, r3, #3
     786:	4a10      	ldr	r2, [pc, #64]	; (7c8 <_ext_irq_enable+0x4c>)
     788:	1912      	adds	r2, r2, r4
     78a:	6852      	ldr	r2, [r2, #4]
     78c:	4282      	cmp	r2, r0
     78e:	d002      	beq.n	796 <_ext_irq_enable+0x1a>
	for (; i < ARRAY_SIZE(_map); i++) {
     790:	3301      	adds	r3, #1
     792:	b2db      	uxtb	r3, r3
     794:	e7f4      	b.n	780 <_ext_irq_enable+0x4>
			extint = _map[i].extint;
     796:	4b0c      	ldr	r3, [pc, #48]	; (7c8 <_ext_irq_enable+0x4c>)
     798:	5ce2      	ldrb	r2, [r4, r3]
			break;
     79a:	e000      	b.n	79e <_ext_irq_enable+0x22>
	uint8_t extint = INVALID_EXTINT_NUMBER;
     79c:	22ff      	movs	r2, #255	; 0xff
		}
	}
	if (INVALID_EXTINT_NUMBER == extint) {
     79e:	2aff      	cmp	r2, #255	; 0xff
     7a0:	d00e      	beq.n	7c0 <_ext_irq_enable+0x44>
		return ERR_INVALID_ARG;
	}

	if (enable) {
     7a2:	2900      	cmp	r1, #0
     7a4:	d106      	bne.n	7b4 <_ext_irq_enable+0x38>
		hri_eic_set_INTEN_reg(EIC, 1ul << extint);
	} else {
		hri_eic_clear_INTEN_reg(EIC, 1ul << extint);
     7a6:	2301      	movs	r3, #1
     7a8:	4093      	lsls	r3, r2
	((Eic *)hw)->INTENCLR.reg = mask;
     7aa:	4a08      	ldr	r2, [pc, #32]	; (7cc <_ext_irq_enable+0x50>)
     7ac:	6093      	str	r3, [r2, #8]
	((Eic *)hw)->INTFLAG.reg = mask;
     7ae:	6113      	str	r3, [r2, #16]
		hri_eic_clear_INTFLAG_reg(EIC, 1ul << extint);
	}

	return ERR_NONE;
     7b0:	2000      	movs	r0, #0
}
     7b2:	bd30      	pop	{r4, r5, pc}
		hri_eic_set_INTEN_reg(EIC, 1ul << extint);
     7b4:	2301      	movs	r3, #1
     7b6:	4093      	lsls	r3, r2
	((Eic *)hw)->INTENSET.reg = mask;
     7b8:	4a04      	ldr	r2, [pc, #16]	; (7cc <_ext_irq_enable+0x50>)
     7ba:	60d3      	str	r3, [r2, #12]
	return ERR_NONE;
     7bc:	2000      	movs	r0, #0
     7be:	e7f8      	b.n	7b2 <_ext_irq_enable+0x36>
		return ERR_INVALID_ARG;
     7c0:	200d      	movs	r0, #13
     7c2:	4240      	negs	r0, r0
     7c4:	e7f5      	b.n	7b2 <_ext_irq_enable+0x36>
     7c6:	46c0      	nop			; (mov r8, r8)
     7c8:	00009264 	.word	0x00009264
     7cc:	40001800 	.word	0x40001800

000007d0 <EIC_Handler>:

/**
 * \brief EIC interrupt handler
 */
void EIC_Handler(void)
{
     7d0:	b5f0      	push	{r4, r5, r6, r7, lr}
     7d2:	b083      	sub	sp, #12
	return ((Eic *)hw)->INTFLAG.reg;
     7d4:	4b27      	ldr	r3, [pc, #156]	; (874 <EIC_Handler+0xa4>)
     7d6:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
     7d8:	68d9      	ldr	r1, [r3, #12]
	volatile uint32_t flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
     7da:	400a      	ands	r2, r1
     7dc:	9201      	str	r2, [sp, #4]
	int8_t            pos;
	uint32_t          pin = INVALID_PIN_NUMBER;

	hri_eic_clear_INTFLAG_reg(EIC, flags);
     7de:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
     7e0:	611a      	str	r2, [r3, #16]

	ASSERT(callback);
     7e2:	4b25      	ldr	r3, [pc, #148]	; (878 <EIC_Handler+0xa8>)
     7e4:	6818      	ldr	r0, [r3, #0]
     7e6:	1e43      	subs	r3, r0, #1
     7e8:	4198      	sbcs	r0, r3
     7ea:	b2c0      	uxtb	r0, r0
     7ec:	22d2      	movs	r2, #210	; 0xd2
     7ee:	4923      	ldr	r1, [pc, #140]	; (87c <EIC_Handler+0xac>)
     7f0:	4b23      	ldr	r3, [pc, #140]	; (880 <EIC_Handler+0xb0>)
     7f2:	4798      	blx	r3
	uint32_t          pin = INVALID_PIN_NUMBER;
     7f4:	2501      	movs	r5, #1
     7f6:	426d      	negs	r5, r5

	while (flags) {
     7f8:	e031      	b.n	85e <EIC_Handler+0x8e>
			uint8_t lower = 0, middle, upper = EXT_IRQ_AMOUNT;

			while (upper >= lower) {
				middle = (upper + lower) >> 1;
				if (_map[middle].extint == pos) {
					pin = _map[middle].pin;
     7fa:	00db      	lsls	r3, r3, #3
     7fc:	4a21      	ldr	r2, [pc, #132]	; (884 <EIC_Handler+0xb4>)
     7fe:	18d3      	adds	r3, r2, r3
     800:	685d      	ldr	r5, [r3, #4]
				} else {
					upper = middle - 1;
				}
			}

			if (INVALID_PIN_NUMBER != pin) {
     802:	1c6b      	adds	r3, r5, #1
     804:	d003      	beq.n	80e <EIC_Handler+0x3e>
				callback(pin);
     806:	4b1c      	ldr	r3, [pc, #112]	; (878 <EIC_Handler+0xa8>)
     808:	681b      	ldr	r3, [r3, #0]
     80a:	0028      	movs	r0, r5
     80c:	4798      	blx	r3
			}
			flags &= ~(1ul << pos);
     80e:	2201      	movs	r2, #1
     810:	40a2      	lsls	r2, r4
     812:	9b01      	ldr	r3, [sp, #4]
     814:	4393      	bics	r3, r2
     816:	9301      	str	r3, [sp, #4]
			pos = ffs(flags) - 1;
     818:	9801      	ldr	r0, [sp, #4]
     81a:	4b1b      	ldr	r3, [pc, #108]	; (888 <EIC_Handler+0xb8>)
     81c:	4798      	blx	r3
     81e:	3801      	subs	r0, #1
     820:	b244      	sxtb	r4, r0
		while (-1 != pos) {
     822:	1c63      	adds	r3, r4, #1
     824:	d014      	beq.n	850 <EIC_Handler+0x80>
     826:	2602      	movs	r6, #2
     828:	2000      	movs	r0, #0
     82a:	e001      	b.n	830 <EIC_Handler+0x60>
					upper = middle - 1;
     82c:	3901      	subs	r1, #1
     82e:	b2ce      	uxtb	r6, r1
			while (upper >= lower) {
     830:	42b0      	cmp	r0, r6
     832:	d8e6      	bhi.n	802 <EIC_Handler+0x32>
				middle = (upper + lower) >> 1;
     834:	1833      	adds	r3, r6, r0
     836:	105b      	asrs	r3, r3, #1
     838:	b2d9      	uxtb	r1, r3
     83a:	22ff      	movs	r2, #255	; 0xff
     83c:	4013      	ands	r3, r2
				if (_map[middle].extint == pos) {
     83e:	00df      	lsls	r7, r3, #3
     840:	4a10      	ldr	r2, [pc, #64]	; (884 <EIC_Handler+0xb4>)
     842:	5cba      	ldrb	r2, [r7, r2]
     844:	42a2      	cmp	r2, r4
     846:	d0d8      	beq.n	7fa <EIC_Handler+0x2a>
				if (_map[middle].extint < pos) {
     848:	daf0      	bge.n	82c <EIC_Handler+0x5c>
					lower = middle + 1;
     84a:	3101      	adds	r1, #1
     84c:	b2c8      	uxtb	r0, r1
     84e:	e7ef      	b.n	830 <EIC_Handler+0x60>
	return ((Eic *)hw)->INTFLAG.reg;
     850:	4b08      	ldr	r3, [pc, #32]	; (874 <EIC_Handler+0xa4>)
     852:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
     854:	68d9      	ldr	r1, [r3, #12]
		}
		flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
     856:	400a      	ands	r2, r1
     858:	9201      	str	r2, [sp, #4]
		hri_eic_clear_INTFLAG_reg(EIC, flags);
     85a:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
     85c:	611a      	str	r2, [r3, #16]
	while (flags) {
     85e:	9b01      	ldr	r3, [sp, #4]
     860:	2b00      	cmp	r3, #0
     862:	d005      	beq.n	870 <EIC_Handler+0xa0>
		pos = ffs(flags) - 1;
     864:	9801      	ldr	r0, [sp, #4]
     866:	4b08      	ldr	r3, [pc, #32]	; (888 <EIC_Handler+0xb8>)
     868:	4798      	blx	r3
     86a:	3801      	subs	r0, #1
     86c:	b244      	sxtb	r4, r0
		while (-1 != pos) {
     86e:	e7d8      	b.n	822 <EIC_Handler+0x52>
	}
}
     870:	b003      	add	sp, #12
     872:	bdf0      	pop	{r4, r5, r6, r7, pc}
     874:	40001800 	.word	0x40001800
     878:	20000a3c 	.word	0x20000a3c
     87c:	0000924c 	.word	0x0000924c
     880:	00000659 	.word	0x00000659
     884:	00009264 	.word	0x00009264
     888:	00003375 	.word	0x00003375

0000088c <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
     88c:	07c3      	lsls	r3, r0, #31
     88e:	d509      	bpl.n	8a4 <_gclk_init_generators_by_fref+0x18>
}

static inline void hri_gclk_write_GENDIV_reg(const void *const hw, hri_gclk_gendiv_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->GENDIV.reg = data;
     890:	4b11      	ldr	r3, [pc, #68]	; (8d8 <_gclk_init_generators_by_fref+0x4c>)
     892:	2280      	movs	r2, #128	; 0x80
     894:	0052      	lsls	r2, r2, #1
     896:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     898:	4a10      	ldr	r2, [pc, #64]	; (8dc <_gclk_init_generators_by_fref+0x50>)
     89a:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     89c:	4b0e      	ldr	r3, [pc, #56]	; (8d8 <_gclk_init_generators_by_fref+0x4c>)
     89e:	785b      	ldrb	r3, [r3, #1]
     8a0:	09db      	lsrs	r3, r3, #7
     8a2:	d1fb      	bne.n	89c <_gclk_init_generators_by_fref+0x10>
		        | (CONF_GCLK_GENERATOR_0_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_0_SRC | GCLK_GENCTRL_ID(0));
	}
#endif

#if CONF_GCLK_GENERATOR_1_CONFIG == 1
	if (bm & (1ul << 1)) {
     8a4:	0783      	lsls	r3, r0, #30
     8a6:	d509      	bpl.n	8bc <_gclk_init_generators_by_fref+0x30>
	((Gclk *)hw)->GENDIV.reg = data;
     8a8:	4b0b      	ldr	r3, [pc, #44]	; (8d8 <_gclk_init_generators_by_fref+0x4c>)
     8aa:	2202      	movs	r2, #2
     8ac:	32ff      	adds	r2, #255	; 0xff
     8ae:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     8b0:	4a0b      	ldr	r2, [pc, #44]	; (8e0 <_gclk_init_generators_by_fref+0x54>)
     8b2:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     8b4:	4b08      	ldr	r3, [pc, #32]	; (8d8 <_gclk_init_generators_by_fref+0x4c>)
     8b6:	785b      	ldrb	r3, [r3, #1]
     8b8:	09db      	lsrs	r3, r3, #7
     8ba:	d1fb      	bne.n	8b4 <_gclk_init_generators_by_fref+0x28>
		        | (CONF_GCLK_GENERATOR_2_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_2_SRC | GCLK_GENCTRL_ID(2));
	}
#endif

#if CONF_GCLK_GENERATOR_3_CONFIG == 1
	if (bm & (1ul << 3)) {
     8bc:	0703      	lsls	r3, r0, #28
     8be:	d509      	bpl.n	8d4 <_gclk_init_generators_by_fref+0x48>
	((Gclk *)hw)->GENDIV.reg = data;
     8c0:	4b05      	ldr	r3, [pc, #20]	; (8d8 <_gclk_init_generators_by_fref+0x4c>)
     8c2:	2204      	movs	r2, #4
     8c4:	32ff      	adds	r2, #255	; 0xff
     8c6:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     8c8:	4a06      	ldr	r2, [pc, #24]	; (8e4 <_gclk_init_generators_by_fref+0x58>)
     8ca:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     8cc:	4b02      	ldr	r3, [pc, #8]	; (8d8 <_gclk_init_generators_by_fref+0x4c>)
     8ce:	785b      	ldrb	r3, [r3, #1]
     8d0:	09db      	lsrs	r3, r3, #7
     8d2:	d1fb      	bne.n	8cc <_gclk_init_generators_by_fref+0x40>
		        | (CONF_GCLK_GEN_7_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_7_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_7_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_7_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_7_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_7_SRC | GCLK_GENCTRL_ID(7));
	}
#endif
}
     8d4:	4770      	bx	lr
     8d6:	46c0      	nop			; (mov r8, r8)
     8d8:	40000c00 	.word	0x40000c00
     8dc:	00090700 	.word	0x00090700
     8e0:	00290301 	.word	0x00290301
     8e4:	00090303 	.word	0x00090303

000008e8 <_pm_init>:
}

static inline void hri_pm_set_CPUSEL_CPUDIV_bf(const void *const hw, hri_pm_cpusel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->CPUSEL.reg |= PM_CPUSEL_CPUDIV(mask);
     8e8:	4b06      	ldr	r3, [pc, #24]	; (904 <_pm_init+0x1c>)
     8ea:	7a1a      	ldrb	r2, [r3, #8]
     8ec:	b2d2      	uxtb	r2, r2
     8ee:	721a      	strb	r2, [r3, #8]
}

static inline void hri_pm_set_APBASEL_APBADIV_bf(const void *const hw, hri_pm_apbasel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBASEL.reg |= PM_APBASEL_APBADIV(mask);
     8f0:	7a5a      	ldrb	r2, [r3, #9]
     8f2:	b2d2      	uxtb	r2, r2
     8f4:	725a      	strb	r2, [r3, #9]
}

static inline void hri_pm_set_APBBSEL_APBBDIV_bf(const void *const hw, hri_pm_apbbsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBBSEL.reg |= PM_APBBSEL_APBBDIV(mask);
     8f6:	7a9a      	ldrb	r2, [r3, #10]
     8f8:	b2d2      	uxtb	r2, r2
     8fa:	729a      	strb	r2, [r3, #10]
}

static inline void hri_pm_set_APBCSEL_APBCDIV_bf(const void *const hw, hri_pm_apbcsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBCSEL.reg |= PM_APBCSEL_APBCDIV(mask);
     8fc:	7ada      	ldrb	r2, [r3, #11]
     8fe:	b2d2      	uxtb	r2, r2
     900:	72da      	strb	r2, [r3, #11]
{
	hri_pm_set_CPUSEL_CPUDIV_bf(PM, CONF_CPU_DIV);
	hri_pm_set_APBASEL_APBADIV_bf(PM, CONF_APBA_DIV);
	hri_pm_set_APBBSEL_APBBDIV_bf(PM, CONF_APBB_DIV);
	hri_pm_set_APBCSEL_APBCDIV_bf(PM, CONF_APBC_DIV);
}
     902:	4770      	bx	lr
     904:	40000400 	.word	0x40000400

00000908 <_sercom_get_hardware_index>:
{
#ifdef _UNIT_TEST_
	return ((uint32_t)hw - (uint32_t)SERCOM0) / sizeof(Sercom);
#endif

	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
     908:	4b02      	ldr	r3, [pc, #8]	; (914 <_sercom_get_hardware_index+0xc>)
     90a:	469c      	mov	ip, r3
     90c:	4460      	add	r0, ip
     90e:	0a80      	lsrs	r0, r0, #10
     910:	b2c0      	uxtb	r0, r0
}
     912:	4770      	bx	lr
     914:	bdfff800 	.word	0xbdfff800

00000918 <_spi_sync_enable>:
		;
}

static inline bool hri_sercomspi_is_syncing(const void *const hw)
{
	return ((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY;
     918:	8a03      	ldrh	r3, [r0, #16]
     91a:	0bdb      	lsrs	r3, r3, #15
 *
 * \return Enabling status
 */
static int32_t _spi_sync_enable(void *const hw)
{
	if (hri_sercomspi_is_syncing(hw)) {
     91c:	d108      	bne.n	930 <_spi_sync_enable+0x18>
}

static inline void hri_sercomspi_set_CTRLA_ENABLE_bit(const void *const hw)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
     91e:	6803      	ldr	r3, [r0, #0]
     920:	2202      	movs	r2, #2
     922:	4313      	orrs	r3, r2
     924:	6003      	str	r3, [r0, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
     926:	8a03      	ldrh	r3, [r0, #16]
     928:	0bdb      	lsrs	r3, r3, #15
     92a:	d1fc      	bne.n	926 <_spi_sync_enable+0xe>
		return ERR_BUSY;
	}

	hri_sercomspi_set_CTRLA_ENABLE_bit(hw);

	return ERR_NONE;
     92c:	2000      	movs	r0, #0
}
     92e:	4770      	bx	lr
		return ERR_BUSY;
     930:	2004      	movs	r0, #4
     932:	4240      	negs	r0, r0
     934:	e7fb      	b.n	92e <_spi_sync_enable+0x16>
	...

00000938 <_get_i2cm_index>:
{
     938:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
     93a:	4b0b      	ldr	r3, [pc, #44]	; (968 <_get_i2cm_index+0x30>)
     93c:	4798      	blx	r3
     93e:	0002      	movs	r2, r0
	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
     940:	2000      	movs	r0, #0
     942:	2800      	cmp	r0, #0
     944:	d006      	beq.n	954 <_get_i2cm_index+0x1c>
	ASSERT(false);
     946:	4a09      	ldr	r2, [pc, #36]	; (96c <_get_i2cm_index+0x34>)
     948:	4909      	ldr	r1, [pc, #36]	; (970 <_get_i2cm_index+0x38>)
     94a:	2000      	movs	r0, #0
     94c:	4b09      	ldr	r3, [pc, #36]	; (974 <_get_i2cm_index+0x3c>)
     94e:	4798      	blx	r3
	return 0;
     950:	2000      	movs	r0, #0
}
     952:	bd10      	pop	{r4, pc}
		if (_i2cms[i].number == sercom_offset) {
     954:	0043      	lsls	r3, r0, #1
     956:	181b      	adds	r3, r3, r0
     958:	00d9      	lsls	r1, r3, #3
     95a:	4b07      	ldr	r3, [pc, #28]	; (978 <_get_i2cm_index+0x40>)
     95c:	5ccb      	ldrb	r3, [r1, r3]
     95e:	429a      	cmp	r2, r3
     960:	d0f7      	beq.n	952 <_get_i2cm_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
     962:	3001      	adds	r0, #1
     964:	b2c0      	uxtb	r0, r0
     966:	e7ec      	b.n	942 <_get_i2cm_index+0xa>
     968:	00000909 	.word	0x00000909
     96c:	00000366 	.word	0x00000366
     970:	00009274 	.word	0x00009274
     974:	00000659 	.word	0x00000659
     978:	00009290 	.word	0x00009290

0000097c <_sercom_i2c_sync_send_address>:
{
     97c:	b570      	push	{r4, r5, r6, lr}
     97e:	0005      	movs	r5, r0
	void *             hw  = i2c_dev->hw;
     980:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
     982:	1e43      	subs	r3, r0, #1
     984:	4198      	sbcs	r0, r3
     986:	b2c0      	uxtb	r0, r0
     988:	4a5c      	ldr	r2, [pc, #368]	; (afc <_sercom_i2c_sync_send_address+0x180>)
     98a:	495d      	ldr	r1, [pc, #372]	; (b00 <_sercom_i2c_sync_send_address+0x184>)
     98c:	4b5d      	ldr	r3, [pc, #372]	; (b04 <_sercom_i2c_sync_send_address+0x188>)
     98e:	4798      	blx	r3
}

static inline void hri_sercomi2cm_clear_CTRLB_ACKACT_bit(const void *const hw)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     990:	6863      	ldr	r3, [r4, #4]
     992:	4a5d      	ldr	r2, [pc, #372]	; (b08 <_sercom_i2c_sync_send_address+0x18c>)
     994:	4013      	ands	r3, r2
     996:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     998:	8a23      	ldrh	r3, [r4, #16]
     99a:	0bdb      	lsrs	r3, r3, #15
     99c:	d1fc      	bne.n	998 <_sercom_i2c_sync_send_address+0x1c>
	hri_sercomi2cm_write_ADDR_reg(hw, ((msg->addr & SEVEN_ADDR_MASK) << 1) | (msg->flags & I2C_M_RD ? I2C_M_RD : 0x0));
     99e:	882a      	ldrh	r2, [r5, #0]
     9a0:	0052      	lsls	r2, r2, #1
     9a2:	886b      	ldrh	r3, [r5, #2]
     9a4:	2101      	movs	r1, #1
     9a6:	400b      	ands	r3, r1
     9a8:	4313      	orrs	r3, r2
     9aa:	b2db      	uxtb	r3, r3
}

static inline void hri_sercomi2cm_write_ADDR_reg(const void *const hw, hri_sercomi2cm_addr_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.ADDR.reg = data;
     9ac:	7523      	strb	r3, [r4, #20]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     9ae:	8a23      	ldrh	r3, [r4, #16]
     9b0:	0bdb      	lsrs	r3, r3, #15
     9b2:	d1fc      	bne.n	9ae <_sercom_i2c_sync_send_address+0x32>
	void *   hw      = i2c_dev->hw;
     9b4:	692e      	ldr	r6, [r5, #16]
	uint32_t timeout = 65535;
     9b6:	4a55      	ldr	r2, [pc, #340]	; (b0c <_sercom_i2c_sync_send_address+0x190>)
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
     9b8:	7bb3      	ldrb	r3, [r6, #14]
     9ba:	b2db      	uxtb	r3, r3
		*flags = hri_sercomi2cm_read_INTFLAG_reg(hw);
     9bc:	0018      	movs	r0, r3
		if (timeout-- == 0) {
     9be:	1e51      	subs	r1, r2, #1
     9c0:	2a00      	cmp	r2, #0
     9c2:	d002      	beq.n	9ca <_sercom_i2c_sync_send_address+0x4e>
     9c4:	000a      	movs	r2, r1
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
     9c6:	079b      	lsls	r3, r3, #30
     9c8:	d0f6      	beq.n	9b8 <_sercom_i2c_sync_send_address+0x3c>
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     9ca:	8a23      	ldrh	r3, [r4, #16]
     9cc:	0bdb      	lsrs	r3, r3, #15
     9ce:	d1fc      	bne.n	9ca <_sercom_i2c_sync_send_address+0x4e>
}

static inline hri_sercomi2cm_status_reg_t hri_sercomi2cm_read_STATUS_reg(const void *const hw)
{
	hri_sercomi2cm_wait_for_sync(hw);
	return ((Sercom *)hw)->I2CM.STATUS.reg;
     9d0:	8a23      	ldrh	r3, [r4, #16]
     9d2:	b29b      	uxth	r3, r3
	if (flags & MB_FLAG) {
     9d4:	07c2      	lsls	r2, r0, #31
     9d6:	d550      	bpl.n	a7a <_sercom_i2c_sync_send_address+0xfe>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
     9d8:	079a      	lsls	r2, r3, #30
     9da:	d510      	bpl.n	9fe <_sercom_i2c_sync_send_address+0x82>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
     9dc:	2201      	movs	r2, #1
     9de:	73a2      	strb	r2, [r4, #14]
			msg->flags |= I2C_M_FAIL;
     9e0:	886a      	ldrh	r2, [r5, #2]
     9e2:	2180      	movs	r1, #128	; 0x80
     9e4:	0149      	lsls	r1, r1, #5
     9e6:	430a      	orrs	r2, r1
     9e8:	806a      	strh	r2, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
     9ea:	886a      	ldrh	r2, [r5, #2]
     9ec:	4948      	ldr	r1, [pc, #288]	; (b10 <_sercom_i2c_sync_send_address+0x194>)
     9ee:	400a      	ands	r2, r1
     9f0:	806a      	strh	r2, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
     9f2:	07db      	lsls	r3, r3, #31
     9f4:	d400      	bmi.n	9f8 <_sercom_i2c_sync_send_address+0x7c>
     9f6:	e07c      	b.n	af2 <_sercom_i2c_sync_send_address+0x176>
				return I2C_ERR_BUS;
     9f8:	2005      	movs	r0, #5
     9fa:	4240      	negs	r0, r0
     9fc:	e063      	b.n	ac6 <_sercom_i2c_sync_send_address+0x14a>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
     9fe:	075b      	lsls	r3, r3, #29
     a00:	d40b      	bmi.n	a1a <_sercom_i2c_sync_send_address+0x9e>
			if (msg->len == 0) {
     a02:	6868      	ldr	r0, [r5, #4]
     a04:	2800      	cmp	r0, #0
     a06:	d12d      	bne.n	a64 <_sercom_i2c_sync_send_address+0xe8>
				if (msg->flags & I2C_M_STOP) {
     a08:	886b      	ldrh	r3, [r5, #2]
     a0a:	b21b      	sxth	r3, r3
     a0c:	2b00      	cmp	r3, #0
     a0e:	db20      	blt.n	a52 <_sercom_i2c_sync_send_address+0xd6>
				msg->flags &= ~I2C_M_BUSY;
     a10:	886b      	ldrh	r3, [r5, #2]
     a12:	4a3f      	ldr	r2, [pc, #252]	; (b10 <_sercom_i2c_sync_send_address+0x194>)
     a14:	4013      	ands	r3, r2
     a16:	806b      	strh	r3, [r5, #2]
     a18:	e055      	b.n	ac6 <_sercom_i2c_sync_send_address+0x14a>
				if (msg->len > 0) {
     a1a:	686b      	ldr	r3, [r5, #4]
     a1c:	2b00      	cmp	r3, #0
     a1e:	dd04      	ble.n	a2a <_sercom_i2c_sync_send_address+0xae>
					msg->flags |= I2C_M_FAIL;
     a20:	886b      	ldrh	r3, [r5, #2]
     a22:	2280      	movs	r2, #128	; 0x80
     a24:	0152      	lsls	r2, r2, #5
     a26:	4313      	orrs	r3, r2
     a28:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
     a2a:	886b      	ldrh	r3, [r5, #2]
     a2c:	b21b      	sxth	r3, r3
     a2e:	2b00      	cmp	r3, #0
     a30:	db06      	blt.n	a40 <_sercom_i2c_sync_send_address+0xc4>
				msg->flags &= ~I2C_M_BUSY;
     a32:	886b      	ldrh	r3, [r5, #2]
     a34:	4a36      	ldr	r2, [pc, #216]	; (b10 <_sercom_i2c_sync_send_address+0x194>)
     a36:	4013      	ands	r3, r2
     a38:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
     a3a:	2002      	movs	r0, #2
     a3c:	4240      	negs	r0, r0
     a3e:	e042      	b.n	ac6 <_sercom_i2c_sync_send_address+0x14a>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     a40:	6862      	ldr	r2, [r4, #4]
     a42:	23c0      	movs	r3, #192	; 0xc0
     a44:	029b      	lsls	r3, r3, #10
     a46:	4313      	orrs	r3, r2
     a48:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     a4a:	8a23      	ldrh	r3, [r4, #16]
     a4c:	0bdb      	lsrs	r3, r3, #15
     a4e:	d1fc      	bne.n	a4a <_sercom_i2c_sync_send_address+0xce>
     a50:	e7ef      	b.n	a32 <_sercom_i2c_sync_send_address+0xb6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     a52:	6862      	ldr	r2, [r4, #4]
     a54:	23c0      	movs	r3, #192	; 0xc0
     a56:	029b      	lsls	r3, r3, #10
     a58:	4313      	orrs	r3, r2
     a5a:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     a5c:	8a23      	ldrh	r3, [r4, #16]
     a5e:	0bdb      	lsrs	r3, r3, #15
     a60:	d1fc      	bne.n	a5c <_sercom_i2c_sync_send_address+0xe0>
     a62:	e7d5      	b.n	a10 <_sercom_i2c_sync_send_address+0x94>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
     a64:	68ab      	ldr	r3, [r5, #8]
     a66:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
     a68:	7623      	strb	r3, [r4, #24]
				msg->buffer++;
     a6a:	68ab      	ldr	r3, [r5, #8]
     a6c:	3301      	adds	r3, #1
     a6e:	60ab      	str	r3, [r5, #8]
				msg->len--;
     a70:	686b      	ldr	r3, [r5, #4]
     a72:	3b01      	subs	r3, #1
     a74:	606b      	str	r3, [r5, #4]
			return I2C_OK;
     a76:	2000      	movs	r0, #0
     a78:	e025      	b.n	ac6 <_sercom_i2c_sync_send_address+0x14a>
	} else if (flags & SB_FLAG) {
     a7a:	0782      	lsls	r2, r0, #30
     a7c:	d53c      	bpl.n	af8 <_sercom_i2c_sync_send_address+0x17c>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
     a7e:	686a      	ldr	r2, [r5, #4]
     a80:	2a00      	cmp	r2, #0
     a82:	d031      	beq.n	ae8 <_sercom_i2c_sync_send_address+0x16c>
     a84:	075b      	lsls	r3, r3, #29
     a86:	d42f      	bmi.n	ae8 <_sercom_i2c_sync_send_address+0x16c>
			msg->len--;
     a88:	3a01      	subs	r2, #1
     a8a:	606a      	str	r2, [r5, #4]
			if (msg->len == 0) {
     a8c:	2a00      	cmp	r2, #0
     a8e:	d107      	bne.n	aa0 <_sercom_i2c_sync_send_address+0x124>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     a90:	6862      	ldr	r2, [r4, #4]
     a92:	2380      	movs	r3, #128	; 0x80
     a94:	02db      	lsls	r3, r3, #11
     a96:	4313      	orrs	r3, r2
     a98:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     a9a:	8a23      	ldrh	r3, [r4, #16]
     a9c:	0bdb      	lsrs	r3, r3, #15
     a9e:	d1fc      	bne.n	a9a <_sercom_i2c_sync_send_address+0x11e>
			if (msg->len == 0) {
     aa0:	686b      	ldr	r3, [r5, #4]
     aa2:	2b00      	cmp	r3, #0
     aa4:	d107      	bne.n	ab6 <_sercom_i2c_sync_send_address+0x13a>
				if (msg->flags & I2C_M_STOP) {
     aa6:	886b      	ldrh	r3, [r5, #2]
     aa8:	b21b      	sxth	r3, r3
     aaa:	2b00      	cmp	r3, #0
     aac:	db0c      	blt.n	ac8 <_sercom_i2c_sync_send_address+0x14c>
				msg->flags &= ~I2C_M_BUSY;
     aae:	886b      	ldrh	r3, [r5, #2]
     ab0:	4a17      	ldr	r2, [pc, #92]	; (b10 <_sercom_i2c_sync_send_address+0x194>)
     ab2:	4013      	ands	r3, r2
     ab4:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
     ab6:	68ab      	ldr	r3, [r5, #8]
     ab8:	1c5a      	adds	r2, r3, #1
     aba:	60aa      	str	r2, [r5, #8]
	return ((Sercom *)hw)->I2CM.DATA.reg;
     abc:	7e22      	ldrb	r2, [r4, #24]
     abe:	701a      	strb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     ac0:	2302      	movs	r3, #2
     ac2:	73a3      	strb	r3, [r4, #14]
	return I2C_OK;
     ac4:	2000      	movs	r0, #0
}
     ac6:	bd70      	pop	{r4, r5, r6, pc}
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
     ac8:	6863      	ldr	r3, [r4, #4]
     aca:	4a11      	ldr	r2, [pc, #68]	; (b10 <_sercom_i2c_sync_send_address+0x194>)
     acc:	4013      	ands	r3, r2
     ace:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     ad0:	8a23      	ldrh	r3, [r4, #16]
     ad2:	0bdb      	lsrs	r3, r3, #15
     ad4:	d1fc      	bne.n	ad0 <_sercom_i2c_sync_send_address+0x154>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     ad6:	6862      	ldr	r2, [r4, #4]
     ad8:	23c0      	movs	r3, #192	; 0xc0
     ada:	029b      	lsls	r3, r3, #10
     adc:	4313      	orrs	r3, r2
     ade:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     ae0:	8a23      	ldrh	r3, [r4, #16]
     ae2:	0bdb      	lsrs	r3, r3, #15
     ae4:	d1fc      	bne.n	ae0 <_sercom_i2c_sync_send_address+0x164>
     ae6:	e7e2      	b.n	aae <_sercom_i2c_sync_send_address+0x132>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     ae8:	2302      	movs	r3, #2
     aea:	73a3      	strb	r3, [r4, #14]
			return I2C_NACK;
     aec:	2002      	movs	r0, #2
     aee:	4240      	negs	r0, r0
     af0:	e7e9      	b.n	ac6 <_sercom_i2c_sync_send_address+0x14a>
			return I2C_ERR_BAD_ADDRESS;
     af2:	2004      	movs	r0, #4
     af4:	4240      	negs	r0, r0
     af6:	e7e6      	b.n	ac6 <_sercom_i2c_sync_send_address+0x14a>
	return I2C_OK;
     af8:	2000      	movs	r0, #0
	return _sercom_i2c_sync_analyse_flags(hw, flags, msg);
     afa:	e7e4      	b.n	ac6 <_sercom_i2c_sync_send_address+0x14a>
     afc:	00000581 	.word	0x00000581
     b00:	00009274 	.word	0x00009274
     b04:	00000659 	.word	0x00000659
     b08:	fffbffff 	.word	0xfffbffff
     b0c:	0000ffff 	.word	0x0000ffff
     b10:	fffffeff 	.word	0xfffffeff

00000b14 <_i2c_m_sync_init>:
{
     b14:	b570      	push	{r4, r5, r6, lr}
     b16:	0006      	movs	r6, r0
     b18:	000c      	movs	r4, r1
	uint8_t i = _get_i2cm_index(hw);
     b1a:	0008      	movs	r0, r1
     b1c:	4b23      	ldr	r3, [pc, #140]	; (bac <_i2c_m_sync_init+0x98>)
     b1e:	4798      	blx	r3
     b20:	0005      	movs	r5, r0
	ASSERT(i2c_dev);
     b22:	0030      	movs	r0, r6
     b24:	1e43      	subs	r3, r0, #1
     b26:	4198      	sbcs	r0, r3
     b28:	b2c0      	uxtb	r0, r0
     b2a:	4a21      	ldr	r2, [pc, #132]	; (bb0 <_i2c_m_sync_init+0x9c>)
     b2c:	4921      	ldr	r1, [pc, #132]	; (bb4 <_i2c_m_sync_init+0xa0>)
     b2e:	4b22      	ldr	r3, [pc, #136]	; (bb8 <_i2c_m_sync_init+0xa4>)
     b30:	4798      	blx	r3
	i2c_dev->hw = hw;
     b32:	6134      	str	r4, [r6, #16]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     b34:	8a23      	ldrh	r3, [r4, #16]
     b36:	0bdb      	lsrs	r3, r3, #15
     b38:	d1fc      	bne.n	b34 <_i2c_m_sync_init+0x20>
     b3a:	8a23      	ldrh	r3, [r4, #16]
     b3c:	0bdb      	lsrs	r3, r3, #15
     b3e:	d1fc      	bne.n	b3a <_i2c_m_sync_init+0x26>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
     b40:	6823      	ldr	r3, [r4, #0]
	if (hri_sercomi2cm_get_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_ENABLE)) {
     b42:	079b      	lsls	r3, r3, #30
     b44:	d507      	bpl.n	b56 <_i2c_m_sync_init+0x42>
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
     b46:	2300      	movs	r3, #0
     b48:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     b4a:	8a23      	ldrh	r3, [r4, #16]
     b4c:	0bdb      	lsrs	r3, r3, #15
     b4e:	d1fc      	bne.n	b4a <_i2c_m_sync_init+0x36>
     b50:	8a23      	ldrh	r3, [r4, #16]
     b52:	0bdb      	lsrs	r3, r3, #15
     b54:	d1fc      	bne.n	b50 <_i2c_m_sync_init+0x3c>
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
     b56:	2301      	movs	r3, #1
     b58:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     b5a:	8a23      	ldrh	r3, [r4, #16]
     b5c:	0bdb      	lsrs	r3, r3, #15
     b5e:	d1fc      	bne.n	b5a <_i2c_m_sync_init+0x46>
     b60:	8a23      	ldrh	r3, [r4, #16]
     b62:	0bdb      	lsrs	r3, r3, #15
     b64:	d1fc      	bne.n	b60 <_i2c_m_sync_init+0x4c>
	hri_sercomi2cm_write_CTRLA_reg(hw, _i2cms[i].ctrl_a & ~SERCOM_I2CM_CTRLA_ENABLE);
     b66:	006b      	lsls	r3, r5, #1
     b68:	195b      	adds	r3, r3, r5
     b6a:	00da      	lsls	r2, r3, #3
     b6c:	4b13      	ldr	r3, [pc, #76]	; (bbc <_i2c_m_sync_init+0xa8>)
     b6e:	189b      	adds	r3, r3, r2
     b70:	685b      	ldr	r3, [r3, #4]
     b72:	2202      	movs	r2, #2
     b74:	4393      	bics	r3, r2
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
     b76:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     b78:	8a23      	ldrh	r3, [r4, #16]
     b7a:	0bdb      	lsrs	r3, r3, #15
     b7c:	d1fc      	bne.n	b78 <_i2c_m_sync_init+0x64>
	hri_sercomi2cm_write_CTRLB_reg(hw, _i2cms[i].ctrl_b);
     b7e:	006b      	lsls	r3, r5, #1
     b80:	195b      	adds	r3, r3, r5
     b82:	00da      	lsls	r2, r3, #3
     b84:	4b0d      	ldr	r3, [pc, #52]	; (bbc <_i2c_m_sync_init+0xa8>)
     b86:	189b      	adds	r3, r3, r2
     b88:	689b      	ldr	r3, [r3, #8]
	((Sercom *)hw)->I2CM.CTRLB.reg = data;
     b8a:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     b8c:	8a23      	ldrh	r3, [r4, #16]
     b8e:	0bdb      	lsrs	r3, r3, #15
     b90:	d1fc      	bne.n	b8c <_i2c_m_sync_init+0x78>
	hri_sercomi2cm_write_BAUD_reg(hw, _i2cms[i].baud);
     b92:	4a0a      	ldr	r2, [pc, #40]	; (bbc <_i2c_m_sync_init+0xa8>)
     b94:	006b      	lsls	r3, r5, #1
     b96:	1958      	adds	r0, r3, r5
     b98:	00c1      	lsls	r1, r0, #3
     b9a:	0008      	movs	r0, r1
     b9c:	1851      	adds	r1, r2, r1
     b9e:	8989      	ldrh	r1, [r1, #12]
	((Sercom *)hw)->I2CM.BAUD.reg = data;
     ba0:	8161      	strh	r1, [r4, #10]
	i2c_dev->service.trise = _i2cms[i].trise;
     ba2:	1812      	adds	r2, r2, r0
     ba4:	8a13      	ldrh	r3, [r2, #16]
     ba6:	81f3      	strh	r3, [r6, #14]
}
     ba8:	2000      	movs	r0, #0
     baa:	bd70      	pop	{r4, r5, r6, pc}
     bac:	00000939 	.word	0x00000939
     bb0:	000004d7 	.word	0x000004d7
     bb4:	00009274 	.word	0x00009274
     bb8:	00000659 	.word	0x00000659
     bbc:	00009290 	.word	0x00009290

00000bc0 <_i2c_m_sync_enable>:
{
     bc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     bc2:	0006      	movs	r6, r0
	void *hw              = i2c_dev->hw;
     bc4:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
     bc6:	4d18      	ldr	r5, [pc, #96]	; (c28 <_i2c_m_sync_enable+0x68>)
     bc8:	1e43      	subs	r3, r0, #1
     bca:	4198      	sbcs	r0, r3
     bcc:	b2c0      	uxtb	r0, r0
     bce:	22a1      	movs	r2, #161	; 0xa1
     bd0:	00d2      	lsls	r2, r2, #3
     bd2:	0029      	movs	r1, r5
     bd4:	4f15      	ldr	r7, [pc, #84]	; (c2c <_i2c_m_sync_enable+0x6c>)
     bd6:	47b8      	blx	r7
	ASSERT(i2c_dev->hw);
     bd8:	6930      	ldr	r0, [r6, #16]
     bda:	1e43      	subs	r3, r0, #1
     bdc:	4198      	sbcs	r0, r3
     bde:	b2c0      	uxtb	r0, r0
     be0:	4a13      	ldr	r2, [pc, #76]	; (c30 <_i2c_m_sync_enable+0x70>)
     be2:	0029      	movs	r1, r5
     be4:	47b8      	blx	r7
	((Sercom *)hw)->I2CM.CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
     be6:	6823      	ldr	r3, [r4, #0]
     be8:	2202      	movs	r2, #2
     bea:	4313      	orrs	r3, r2
     bec:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     bee:	8a23      	ldrh	r3, [r4, #16]
     bf0:	0bdb      	lsrs	r3, r3, #15
     bf2:	d1fc      	bne.n	bee <_i2c_m_sync_enable+0x2e>
     bf4:	2004      	movs	r0, #4
     bf6:	490f      	ldr	r1, [pc, #60]	; (c34 <_i2c_m_sync_enable+0x74>)
     bf8:	8a23      	ldrh	r3, [r4, #16]
     bfa:	0bdb      	lsrs	r3, r3, #15
     bfc:	d1fc      	bne.n	bf8 <_i2c_m_sync_enable+0x38>
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
     bfe:	8a22      	ldrh	r2, [r4, #16]
     c00:	0912      	lsrs	r2, r2, #4
     c02:	3303      	adds	r3, #3
     c04:	4013      	ands	r3, r2
	while (hri_sercomi2cm_read_STATUS_BUSSTATE_bf(hw) != I2C_IDLE) {
     c06:	2b01      	cmp	r3, #1
     c08:	d008      	beq.n	c1c <_i2c_m_sync_enable+0x5c>
		timeout--;
     c0a:	3901      	subs	r1, #1
		if (timeout <= 0) {
     c0c:	2900      	cmp	r1, #0
     c0e:	dcf3      	bgt.n	bf8 <_i2c_m_sync_enable+0x38>
			if (--timeout_attempt)
     c10:	3801      	subs	r0, #1
     c12:	2800      	cmp	r0, #0
     c14:	d004      	beq.n	c20 <_i2c_m_sync_enable+0x60>
			((Sercom *)hw)->I2CM.STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(I2C_IDLE);
     c16:	2310      	movs	r3, #16
     c18:	8223      	strh	r3, [r4, #16]
     c1a:	e7ec      	b.n	bf6 <_i2c_m_sync_enable+0x36>
	return ERR_NONE;
     c1c:	2000      	movs	r0, #0
}
     c1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				return I2C_ERR_BUSY;
     c20:	2006      	movs	r0, #6
     c22:	4240      	negs	r0, r0
     c24:	e7fb      	b.n	c1e <_i2c_m_sync_enable+0x5e>
     c26:	46c0      	nop			; (mov r8, r8)
     c28:	00009274 	.word	0x00009274
     c2c:	00000659 	.word	0x00000659
     c30:	00000509 	.word	0x00000509
     c34:	0000ffff 	.word	0x0000ffff

00000c38 <_i2c_m_sync_transfer>:
{
     c38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c3a:	0005      	movs	r5, r0
     c3c:	000e      	movs	r6, r1
	void *   hw = i2c_dev->hw;
     c3e:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
     c40:	1e43      	subs	r3, r0, #1
     c42:	4198      	sbcs	r0, r3
     c44:	b2c0      	uxtb	r0, r0
     c46:	4a7b      	ldr	r2, [pc, #492]	; (e34 <_i2c_m_sync_transfer+0x1fc>)
     c48:	497b      	ldr	r1, [pc, #492]	; (e38 <_i2c_m_sync_transfer+0x200>)
     c4a:	4f7c      	ldr	r7, [pc, #496]	; (e3c <_i2c_m_sync_transfer+0x204>)
     c4c:	47b8      	blx	r7
	ASSERT(i2c_dev->hw);
     c4e:	6928      	ldr	r0, [r5, #16]
     c50:	1e43      	subs	r3, r0, #1
     c52:	4198      	sbcs	r0, r3
     c54:	b2c0      	uxtb	r0, r0
     c56:	4a7a      	ldr	r2, [pc, #488]	; (e40 <_i2c_m_sync_transfer+0x208>)
     c58:	4977      	ldr	r1, [pc, #476]	; (e38 <_i2c_m_sync_transfer+0x200>)
     c5a:	47b8      	blx	r7
	ASSERT(msg);
     c5c:	0030      	movs	r0, r6
     c5e:	1e43      	subs	r3, r0, #1
     c60:	4198      	sbcs	r0, r3
     c62:	b2c0      	uxtb	r0, r0
     c64:	4a77      	ldr	r2, [pc, #476]	; (e44 <_i2c_m_sync_transfer+0x20c>)
     c66:	4974      	ldr	r1, [pc, #464]	; (e38 <_i2c_m_sync_transfer+0x200>)
     c68:	47b8      	blx	r7
	if (i2c_dev->service.msg.flags & I2C_M_BUSY) {
     c6a:	886b      	ldrh	r3, [r5, #2]
     c6c:	05db      	lsls	r3, r3, #23
     c6e:	d500      	bpl.n	c72 <_i2c_m_sync_transfer+0x3a>
     c70:	e0dc      	b.n	e2c <_i2c_m_sync_transfer+0x1f4>
	msg->flags |= I2C_M_BUSY;
     c72:	8872      	ldrh	r2, [r6, #2]
     c74:	2380      	movs	r3, #128	; 0x80
     c76:	005b      	lsls	r3, r3, #1
     c78:	469c      	mov	ip, r3
     c7a:	431a      	orrs	r2, r3
     c7c:	8072      	strh	r2, [r6, #2]
	i2c_dev->service.msg = *msg;
     c7e:	002a      	movs	r2, r5
     c80:	0031      	movs	r1, r6
     c82:	c989      	ldmia	r1!, {r0, r3, r7}
     c84:	c289      	stmia	r2!, {r0, r3, r7}
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_SMEN;
     c86:	6862      	ldr	r2, [r4, #4]
     c88:	4663      	mov	r3, ip
     c8a:	4313      	orrs	r3, r2
     c8c:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     c8e:	8a23      	ldrh	r3, [r4, #16]
     c90:	0bdb      	lsrs	r3, r3, #15
     c92:	d1fc      	bne.n	c8e <_i2c_m_sync_transfer+0x56>
	ret = _sercom_i2c_sync_send_address(i2c_dev);
     c94:	0028      	movs	r0, r5
     c96:	4b6c      	ldr	r3, [pc, #432]	; (e48 <_i2c_m_sync_transfer+0x210>)
     c98:	4798      	blx	r3
	if (ret) {
     c9a:	2800      	cmp	r0, #0
     c9c:	d100      	bne.n	ca0 <_i2c_m_sync_transfer+0x68>
     c9e:	e07d      	b.n	d9c <_i2c_m_sync_transfer+0x164>
		i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
     ca0:	886b      	ldrh	r3, [r5, #2]
     ca2:	4a6a      	ldr	r2, [pc, #424]	; (e4c <_i2c_m_sync_transfer+0x214>)
     ca4:	4013      	ands	r3, r2
     ca6:	806b      	strh	r3, [r5, #2]
}
     ca8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return I2C_ERR_BUS;
     caa:	2005      	movs	r0, #5
     cac:	4240      	negs	r0, r0
     cae:	e086      	b.n	dbe <_i2c_m_sync_transfer+0x186>
			if (msg->flags & I2C_M_STOP) {
     cb0:	8873      	ldrh	r3, [r6, #2]
     cb2:	b21b      	sxth	r3, r3
     cb4:	2b00      	cmp	r3, #0
     cb6:	db04      	blt.n	cc2 <_i2c_m_sync_transfer+0x8a>
			i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
     cb8:	886b      	ldrh	r3, [r5, #2]
     cba:	4a64      	ldr	r2, [pc, #400]	; (e4c <_i2c_m_sync_transfer+0x214>)
     cbc:	4013      	ands	r3, r2
     cbe:	806b      	strh	r3, [r5, #2]
			return ret;
     cc0:	e7f2      	b.n	ca8 <_i2c_m_sync_transfer+0x70>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     cc2:	6862      	ldr	r2, [r4, #4]
     cc4:	23c0      	movs	r3, #192	; 0xc0
     cc6:	029b      	lsls	r3, r3, #10
     cc8:	4313      	orrs	r3, r2
     cca:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     ccc:	8a23      	ldrh	r3, [r4, #16]
     cce:	0bdb      	lsrs	r3, r3, #15
     cd0:	d1fc      	bne.n	ccc <_i2c_m_sync_transfer+0x94>
     cd2:	e7f1      	b.n	cb8 <_i2c_m_sync_transfer+0x80>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
     cd4:	075b      	lsls	r3, r3, #29
     cd6:	d40b      	bmi.n	cf0 <_i2c_m_sync_transfer+0xb8>
			if (msg->len == 0) {
     cd8:	6868      	ldr	r0, [r5, #4]
     cda:	2800      	cmp	r0, #0
     cdc:	d12d      	bne.n	d3a <_i2c_m_sync_transfer+0x102>
				if (msg->flags & I2C_M_STOP) {
     cde:	886b      	ldrh	r3, [r5, #2]
     ce0:	b21b      	sxth	r3, r3
     ce2:	2b00      	cmp	r3, #0
     ce4:	db20      	blt.n	d28 <_i2c_m_sync_transfer+0xf0>
				msg->flags &= ~I2C_M_BUSY;
     ce6:	886b      	ldrh	r3, [r5, #2]
     ce8:	4a58      	ldr	r2, [pc, #352]	; (e4c <_i2c_m_sync_transfer+0x214>)
     cea:	4013      	ands	r3, r2
     cec:	806b      	strh	r3, [r5, #2]
     cee:	e055      	b.n	d9c <_i2c_m_sync_transfer+0x164>
				if (msg->len > 0) {
     cf0:	686b      	ldr	r3, [r5, #4]
     cf2:	2b00      	cmp	r3, #0
     cf4:	dd04      	ble.n	d00 <_i2c_m_sync_transfer+0xc8>
					msg->flags |= I2C_M_FAIL;
     cf6:	886b      	ldrh	r3, [r5, #2]
     cf8:	2280      	movs	r2, #128	; 0x80
     cfa:	0152      	lsls	r2, r2, #5
     cfc:	4313      	orrs	r3, r2
     cfe:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
     d00:	886b      	ldrh	r3, [r5, #2]
     d02:	b21b      	sxth	r3, r3
     d04:	2b00      	cmp	r3, #0
     d06:	db06      	blt.n	d16 <_i2c_m_sync_transfer+0xde>
				msg->flags &= ~I2C_M_BUSY;
     d08:	886b      	ldrh	r3, [r5, #2]
     d0a:	4a50      	ldr	r2, [pc, #320]	; (e4c <_i2c_m_sync_transfer+0x214>)
     d0c:	4013      	ands	r3, r2
     d0e:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
     d10:	2002      	movs	r0, #2
     d12:	4240      	negs	r0, r0
     d14:	e042      	b.n	d9c <_i2c_m_sync_transfer+0x164>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     d16:	6862      	ldr	r2, [r4, #4]
     d18:	23c0      	movs	r3, #192	; 0xc0
     d1a:	029b      	lsls	r3, r3, #10
     d1c:	4313      	orrs	r3, r2
     d1e:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     d20:	8a23      	ldrh	r3, [r4, #16]
     d22:	0bdb      	lsrs	r3, r3, #15
     d24:	d1fc      	bne.n	d20 <_i2c_m_sync_transfer+0xe8>
     d26:	e7ef      	b.n	d08 <_i2c_m_sync_transfer+0xd0>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     d28:	6862      	ldr	r2, [r4, #4]
     d2a:	23c0      	movs	r3, #192	; 0xc0
     d2c:	029b      	lsls	r3, r3, #10
     d2e:	4313      	orrs	r3, r2
     d30:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     d32:	8a23      	ldrh	r3, [r4, #16]
     d34:	0bdb      	lsrs	r3, r3, #15
     d36:	d1fc      	bne.n	d32 <_i2c_m_sync_transfer+0xfa>
     d38:	e7d5      	b.n	ce6 <_i2c_m_sync_transfer+0xae>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
     d3a:	68ab      	ldr	r3, [r5, #8]
     d3c:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
     d3e:	7623      	strb	r3, [r4, #24]
				msg->buffer++;
     d40:	68ab      	ldr	r3, [r5, #8]
     d42:	3301      	adds	r3, #1
     d44:	60ab      	str	r3, [r5, #8]
				msg->len--;
     d46:	686b      	ldr	r3, [r5, #4]
     d48:	3b01      	subs	r3, #1
     d4a:	606b      	str	r3, [r5, #4]
			return I2C_OK;
     d4c:	2000      	movs	r0, #0
     d4e:	e025      	b.n	d9c <_i2c_m_sync_transfer+0x164>
	} else if (flags & SB_FLAG) {
     d50:	078a      	lsls	r2, r1, #30
     d52:	d569      	bpl.n	e28 <_i2c_m_sync_transfer+0x1f0>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
     d54:	686a      	ldr	r2, [r5, #4]
     d56:	2a00      	cmp	r2, #0
     d58:	d05e      	beq.n	e18 <_i2c_m_sync_transfer+0x1e0>
     d5a:	075b      	lsls	r3, r3, #29
     d5c:	d45c      	bmi.n	e18 <_i2c_m_sync_transfer+0x1e0>
			msg->len--;
     d5e:	3a01      	subs	r2, #1
     d60:	606a      	str	r2, [r5, #4]
			if (msg->len == 0) {
     d62:	2a00      	cmp	r2, #0
     d64:	d107      	bne.n	d76 <_i2c_m_sync_transfer+0x13e>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     d66:	6862      	ldr	r2, [r4, #4]
     d68:	2380      	movs	r3, #128	; 0x80
     d6a:	02db      	lsls	r3, r3, #11
     d6c:	4313      	orrs	r3, r2
     d6e:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     d70:	8a23      	ldrh	r3, [r4, #16]
     d72:	0bdb      	lsrs	r3, r3, #15
     d74:	d1fc      	bne.n	d70 <_i2c_m_sync_transfer+0x138>
			if (msg->len == 0) {
     d76:	686b      	ldr	r3, [r5, #4]
     d78:	2b00      	cmp	r3, #0
     d7a:	d107      	bne.n	d8c <_i2c_m_sync_transfer+0x154>
				if (msg->flags & I2C_M_STOP) {
     d7c:	886b      	ldrh	r3, [r5, #2]
     d7e:	b21b      	sxth	r3, r3
     d80:	2b00      	cmp	r3, #0
     d82:	db39      	blt.n	df8 <_i2c_m_sync_transfer+0x1c0>
				msg->flags &= ~I2C_M_BUSY;
     d84:	886b      	ldrh	r3, [r5, #2]
     d86:	4a31      	ldr	r2, [pc, #196]	; (e4c <_i2c_m_sync_transfer+0x214>)
     d88:	4013      	ands	r3, r2
     d8a:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
     d8c:	68ab      	ldr	r3, [r5, #8]
     d8e:	1c5a      	adds	r2, r3, #1
     d90:	60aa      	str	r2, [r5, #8]
	return ((Sercom *)hw)->I2CM.DATA.reg;
     d92:	7e22      	ldrb	r2, [r4, #24]
     d94:	701a      	strb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     d96:	2302      	movs	r3, #2
     d98:	73a3      	strb	r3, [r4, #14]
	return I2C_OK;
     d9a:	2000      	movs	r0, #0
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
     d9c:	886b      	ldrh	r3, [r5, #2]
     d9e:	05db      	lsls	r3, r3, #23
     da0:	d400      	bmi.n	da4 <_i2c_m_sync_transfer+0x16c>
     da2:	e781      	b.n	ca8 <_i2c_m_sync_transfer+0x70>
	void *   hw      = i2c_dev->hw;
     da4:	692f      	ldr	r7, [r5, #16]
	uint32_t timeout = 65535;
     da6:	4a2a      	ldr	r2, [pc, #168]	; (e50 <_i2c_m_sync_transfer+0x218>)
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
     da8:	7bbb      	ldrb	r3, [r7, #14]
     daa:	b2db      	uxtb	r3, r3
		*flags = hri_sercomi2cm_read_INTFLAG_reg(hw);
     dac:	0019      	movs	r1, r3
		if (timeout-- == 0) {
     dae:	1e50      	subs	r0, r2, #1
     db0:	2a00      	cmp	r2, #0
     db2:	d100      	bne.n	db6 <_i2c_m_sync_transfer+0x17e>
     db4:	e779      	b.n	caa <_i2c_m_sync_transfer+0x72>
     db6:	0002      	movs	r2, r0
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
     db8:	079b      	lsls	r3, r3, #30
     dba:	d0f5      	beq.n	da8 <_i2c_m_sync_transfer+0x170>
	return I2C_OK;
     dbc:	2000      	movs	r0, #0
		if (ret) {
     dbe:	2800      	cmp	r0, #0
     dc0:	d000      	beq.n	dc4 <_i2c_m_sync_transfer+0x18c>
     dc2:	e775      	b.n	cb0 <_i2c_m_sync_transfer+0x78>
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     dc4:	8a23      	ldrh	r3, [r4, #16]
     dc6:	0bdb      	lsrs	r3, r3, #15
     dc8:	d1fc      	bne.n	dc4 <_i2c_m_sync_transfer+0x18c>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
     dca:	8a23      	ldrh	r3, [r4, #16]
     dcc:	b29b      	uxth	r3, r3
	if (flags & MB_FLAG) {
     dce:	07ca      	lsls	r2, r1, #31
     dd0:	d5be      	bpl.n	d50 <_i2c_m_sync_transfer+0x118>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
     dd2:	079a      	lsls	r2, r3, #30
     dd4:	d400      	bmi.n	dd8 <_i2c_m_sync_transfer+0x1a0>
     dd6:	e77d      	b.n	cd4 <_i2c_m_sync_transfer+0x9c>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
     dd8:	2201      	movs	r2, #1
     dda:	73a2      	strb	r2, [r4, #14]
			msg->flags |= I2C_M_FAIL;
     ddc:	886a      	ldrh	r2, [r5, #2]
     dde:	2180      	movs	r1, #128	; 0x80
     de0:	0149      	lsls	r1, r1, #5
     de2:	430a      	orrs	r2, r1
     de4:	806a      	strh	r2, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
     de6:	886a      	ldrh	r2, [r5, #2]
     de8:	4918      	ldr	r1, [pc, #96]	; (e4c <_i2c_m_sync_transfer+0x214>)
     dea:	400a      	ands	r2, r1
     dec:	806a      	strh	r2, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
     dee:	07db      	lsls	r3, r3, #31
     df0:	d517      	bpl.n	e22 <_i2c_m_sync_transfer+0x1ea>
				return I2C_ERR_BUS;
     df2:	2005      	movs	r0, #5
     df4:	4240      	negs	r0, r0
     df6:	e7d1      	b.n	d9c <_i2c_m_sync_transfer+0x164>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
     df8:	6863      	ldr	r3, [r4, #4]
     dfa:	4a14      	ldr	r2, [pc, #80]	; (e4c <_i2c_m_sync_transfer+0x214>)
     dfc:	4013      	ands	r3, r2
     dfe:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     e00:	8a23      	ldrh	r3, [r4, #16]
     e02:	0bdb      	lsrs	r3, r3, #15
     e04:	d1fc      	bne.n	e00 <_i2c_m_sync_transfer+0x1c8>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     e06:	6862      	ldr	r2, [r4, #4]
     e08:	23c0      	movs	r3, #192	; 0xc0
     e0a:	029b      	lsls	r3, r3, #10
     e0c:	4313      	orrs	r3, r2
     e0e:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     e10:	8a23      	ldrh	r3, [r4, #16]
     e12:	0bdb      	lsrs	r3, r3, #15
     e14:	d1fc      	bne.n	e10 <_i2c_m_sync_transfer+0x1d8>
     e16:	e7b5      	b.n	d84 <_i2c_m_sync_transfer+0x14c>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     e18:	2302      	movs	r3, #2
     e1a:	73a3      	strb	r3, [r4, #14]
			return I2C_NACK;
     e1c:	2002      	movs	r0, #2
     e1e:	4240      	negs	r0, r0
     e20:	e7bc      	b.n	d9c <_i2c_m_sync_transfer+0x164>
			return I2C_ERR_BAD_ADDRESS;
     e22:	2004      	movs	r0, #4
     e24:	4240      	negs	r0, r0
     e26:	e7b9      	b.n	d9c <_i2c_m_sync_transfer+0x164>
	return I2C_OK;
     e28:	2000      	movs	r0, #0
     e2a:	e7b7      	b.n	d9c <_i2c_m_sync_transfer+0x164>
		return I2C_ERR_BUSY;
     e2c:	2006      	movs	r0, #6
     e2e:	4240      	negs	r0, r0
     e30:	e73a      	b.n	ca8 <_i2c_m_sync_transfer+0x70>
     e32:	46c0      	nop			; (mov r8, r8)
     e34:	0000059b 	.word	0x0000059b
     e38:	00009274 	.word	0x00009274
     e3c:	00000659 	.word	0x00000659
     e40:	0000059c 	.word	0x0000059c
     e44:	0000059d 	.word	0x0000059d
     e48:	0000097d 	.word	0x0000097d
     e4c:	fffffeff 	.word	0xfffffeff
     e50:	0000ffff 	.word	0x0000ffff

00000e54 <_spi_m_sync_init>:

	return NULL;
}

int32_t _spi_m_sync_init(struct _spi_m_sync_dev *dev, void *const hw)
{
     e54:	b570      	push	{r4, r5, r6, lr}
     e56:	0006      	movs	r6, r0
     e58:	000c      	movs	r4, r1
	uint8_t n = _sercom_get_hardware_index((const void *)hw_addr);
     e5a:	0008      	movs	r0, r1
     e5c:	4b61      	ldr	r3, [pc, #388]	; (fe4 <_spi_m_sync_init+0x190>)
     e5e:	4798      	blx	r3
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
     e60:	2300      	movs	r3, #0
     e62:	2b00      	cmp	r3, #0
     e64:	d100      	bne.n	e68 <_spi_m_sync_init+0x14>
     e66:	e06c      	b.n	f42 <_spi_m_sync_init+0xee>
	return NULL;
     e68:	2500      	movs	r5, #0
	const struct sercomspi_regs_cfg *regs = _spi_get_regs((uint32_t)hw);

	ASSERT(dev && hw);
     e6a:	2e00      	cmp	r6, #0
     e6c:	d100      	bne.n	e70 <_spi_m_sync_init+0x1c>
     e6e:	e073      	b.n	f58 <_spi_m_sync_init+0x104>
     e70:	2c00      	cmp	r4, #0
     e72:	d100      	bne.n	e76 <_spi_m_sync_init+0x22>
     e74:	e06e      	b.n	f54 <_spi_m_sync_init+0x100>
     e76:	2001      	movs	r0, #1
     e78:	4a5b      	ldr	r2, [pc, #364]	; (fe8 <_spi_m_sync_init+0x194>)
     e7a:	495c      	ldr	r1, [pc, #368]	; (fec <_spi_m_sync_init+0x198>)
     e7c:	4b5c      	ldr	r3, [pc, #368]	; (ff0 <_spi_m_sync_init+0x19c>)
     e7e:	4798      	blx	r3

	if (regs == NULL) {
     e80:	2d00      	cmp	r5, #0
     e82:	d100      	bne.n	e86 <_spi_m_sync_init+0x32>
     e84:	e0ab      	b.n	fde <_spi_m_sync_init+0x18a>
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
     e86:	8a23      	ldrh	r3, [r4, #16]
     e88:	0bdb      	lsrs	r3, r3, #15
     e8a:	d1fc      	bne.n	e86 <_spi_m_sync_init+0x32>
     e8c:	8a23      	ldrh	r3, [r4, #16]
     e8e:	0bdb      	lsrs	r3, r3, #15
     e90:	d1fc      	bne.n	e8c <_spi_m_sync_init+0x38>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
     e92:	6823      	ldr	r3, [r4, #0]
		return ERR_INVALID_ARG;
	}

	hri_sercomspi_wait_for_sync(hw);
	if (hri_sercomspi_get_CTRLA_reg(hw, SERCOM_SPI_CTRLA_ENABLE)) {
     e94:	079b      	lsls	r3, r3, #30
     e96:	d507      	bpl.n	ea8 <_spi_m_sync_init+0x54>
	((Sercom *)hw)->SPI.CTRLA.reg = data;
     e98:	2300      	movs	r3, #0
     e9a:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
     e9c:	8a23      	ldrh	r3, [r4, #16]
     e9e:	0bdb      	lsrs	r3, r3, #15
     ea0:	d1fc      	bne.n	e9c <_spi_m_sync_init+0x48>
     ea2:	8a23      	ldrh	r3, [r4, #16]
     ea4:	0bdb      	lsrs	r3, r3, #15
     ea6:	d1fc      	bne.n	ea2 <_spi_m_sync_init+0x4e>
	((Sercom *)hw)->SPI.CTRLA.reg = data;
     ea8:	2301      	movs	r3, #1
     eaa:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
     eac:	8a23      	ldrh	r3, [r4, #16]
     eae:	0bdb      	lsrs	r3, r3, #15
     eb0:	d1fc      	bne.n	eac <_spi_m_sync_init+0x58>
     eb2:	8a23      	ldrh	r3, [r4, #16]
     eb4:	0bdb      	lsrs	r3, r3, #15
     eb6:	d1fc      	bne.n	eb2 <_spi_m_sync_init+0x5e>
		hri_sercomspi_wait_for_sync(hw);
	}
	hri_sercomspi_write_CTRLA_reg(hw, SERCOM_SPI_CTRLA_SWRST);
	hri_sercomspi_wait_for_sync(hw);

	dev->prvt = hw;
     eb8:	6034      	str	r4, [r6, #0]

	if ((regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk) == SERCOM_USART_CTRLA_MODE_SPI_SLAVE) {
     eba:	782b      	ldrb	r3, [r5, #0]
     ebc:	786a      	ldrb	r2, [r5, #1]
     ebe:	0212      	lsls	r2, r2, #8
     ec0:	431a      	orrs	r2, r3
     ec2:	78ab      	ldrb	r3, [r5, #2]
     ec4:	041b      	lsls	r3, r3, #16
     ec6:	431a      	orrs	r2, r3
     ec8:	78eb      	ldrb	r3, [r5, #3]
     eca:	061b      	lsls	r3, r3, #24
     ecc:	4313      	orrs	r3, r2
     ece:	221c      	movs	r2, #28
     ed0:	4013      	ands	r3, r2
     ed2:	2b08      	cmp	r3, #8
     ed4:	d042      	beq.n	f5c <_spi_m_sync_init+0x108>
	ASSERT(hw && regs);
     ed6:	2c00      	cmp	r4, #0
     ed8:	d100      	bne.n	edc <_spi_m_sync_init+0x88>
     eda:	e07c      	b.n	fd6 <_spi_m_sync_init+0x182>
     edc:	2d00      	cmp	r5, #0
     ede:	d100      	bne.n	ee2 <_spi_m_sync_init+0x8e>
     ee0:	e077      	b.n	fd2 <_spi_m_sync_init+0x17e>
     ee2:	2001      	movs	r0, #1
     ee4:	4a43      	ldr	r2, [pc, #268]	; (ff4 <_spi_m_sync_init+0x1a0>)
     ee6:	4941      	ldr	r1, [pc, #260]	; (fec <_spi_m_sync_init+0x198>)
     ee8:	4b41      	ldr	r3, [pc, #260]	; (ff0 <_spi_m_sync_init+0x19c>)
     eea:	4798      	blx	r3
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
     eec:	782b      	ldrb	r3, [r5, #0]
     eee:	786a      	ldrb	r2, [r5, #1]
     ef0:	0212      	lsls	r2, r2, #8
     ef2:	431a      	orrs	r2, r3
     ef4:	78ab      	ldrb	r3, [r5, #2]
     ef6:	041b      	lsls	r3, r3, #16
     ef8:	431a      	orrs	r2, r3
     efa:	78eb      	ldrb	r3, [r5, #3]
     efc:	061b      	lsls	r3, r3, #24
     efe:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
     f00:	4a3d      	ldr	r2, [pc, #244]	; (ff8 <_spi_m_sync_init+0x1a4>)
     f02:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
     f04:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
     f06:	8a23      	ldrh	r3, [r4, #16]
     f08:	0bdb      	lsrs	r3, r3, #15
     f0a:	d1fc      	bne.n	f06 <_spi_m_sync_init+0xb2>
	    hw, (regs->ctrlb & ~(SERCOM_SPI_CTRLB_AMODE_Msk | SERCOM_SPI_CTRLB_PLOADEN)) | (SERCOM_SPI_CTRLB_RXEN));
     f0c:	792b      	ldrb	r3, [r5, #4]
     f0e:	796a      	ldrb	r2, [r5, #5]
     f10:	0212      	lsls	r2, r2, #8
     f12:	431a      	orrs	r2, r3
     f14:	79ab      	ldrb	r3, [r5, #6]
     f16:	041b      	lsls	r3, r3, #16
     f18:	431a      	orrs	r2, r3
     f1a:	79eb      	ldrb	r3, [r5, #7]
     f1c:	061b      	lsls	r3, r3, #24
     f1e:	4313      	orrs	r3, r2
     f20:	4a36      	ldr	r2, [pc, #216]	; (ffc <_spi_m_sync_init+0x1a8>)
     f22:	4013      	ands	r3, r2
	hri_sercomspi_write_CTRLB_reg(
     f24:	2280      	movs	r2, #128	; 0x80
     f26:	0292      	lsls	r2, r2, #10
     f28:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
     f2a:	6063      	str	r3, [r4, #4]
	hri_sercomspi_write_BAUD_reg(hw, regs->baud);
     f2c:	7b2b      	ldrb	r3, [r5, #12]
	((Sercom *)hw)->SPI.BAUD.reg = data;
     f2e:	72a3      	strb	r3, [r4, #10]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
     f30:	7b6b      	ldrb	r3, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
     f32:	7223      	strb	r3, [r4, #8]
	} else {
		_spi_load_regs_master(hw, regs);
	}

	/* Load character size from default hardware configuration */
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
     f34:	792b      	ldrb	r3, [r5, #4]
     f36:	075b      	lsls	r3, r3, #29
     f38:	d14f      	bne.n	fda <_spi_m_sync_init+0x186>
     f3a:	2301      	movs	r3, #1
     f3c:	7133      	strb	r3, [r6, #4]

	return ERR_NONE;
     f3e:	2000      	movs	r0, #0
}
     f40:	bd70      	pop	{r4, r5, r6, pc}
		if (sercomspi_regs[i].n == n) {
     f42:	2800      	cmp	r0, #0
     f44:	d002      	beq.n	f4c <_spi_m_sync_init+0xf8>
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
     f46:	3301      	adds	r3, #1
     f48:	b2db      	uxtb	r3, r3
     f4a:	e78a      	b.n	e62 <_spi_m_sync_init+0xe>
			return &sercomspi_regs[i];
     f4c:	011d      	lsls	r5, r3, #4
     f4e:	4b2c      	ldr	r3, [pc, #176]	; (1000 <STACK_SIZE>)
     f50:	195d      	adds	r5, r3, r5
     f52:	e78a      	b.n	e6a <_spi_m_sync_init+0x16>
	ASSERT(dev && hw);
     f54:	2000      	movs	r0, #0
     f56:	e78f      	b.n	e78 <_spi_m_sync_init+0x24>
     f58:	2000      	movs	r0, #0
     f5a:	e78d      	b.n	e78 <_spi_m_sync_init+0x24>
	ASSERT(hw && regs);
     f5c:	2c00      	cmp	r4, #0
     f5e:	d036      	beq.n	fce <_spi_m_sync_init+0x17a>
     f60:	2d00      	cmp	r5, #0
     f62:	d032      	beq.n	fca <_spi_m_sync_init+0x176>
     f64:	2001      	movs	r0, #1
     f66:	4a27      	ldr	r2, [pc, #156]	; (1004 <STACK_SIZE+0x4>)
     f68:	4920      	ldr	r1, [pc, #128]	; (fec <_spi_m_sync_init+0x198>)
     f6a:	4b21      	ldr	r3, [pc, #132]	; (ff0 <_spi_m_sync_init+0x19c>)
     f6c:	4798      	blx	r3
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
     f6e:	782b      	ldrb	r3, [r5, #0]
     f70:	786a      	ldrb	r2, [r5, #1]
     f72:	0212      	lsls	r2, r2, #8
     f74:	431a      	orrs	r2, r3
     f76:	78ab      	ldrb	r3, [r5, #2]
     f78:	041b      	lsls	r3, r3, #16
     f7a:	431a      	orrs	r2, r3
     f7c:	78eb      	ldrb	r3, [r5, #3]
     f7e:	061b      	lsls	r3, r3, #24
     f80:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
     f82:	4a1d      	ldr	r2, [pc, #116]	; (ff8 <_spi_m_sync_init+0x1a4>)
     f84:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
     f86:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
     f88:	8a23      	ldrh	r3, [r4, #16]
     f8a:	0bdb      	lsrs	r3, r3, #15
     f8c:	d1fc      	bne.n	f88 <_spi_m_sync_init+0x134>
	hri_sercomspi_write_CTRLB_reg(hw, regs->ctrlb | (SERCOM_SPI_CTRLB_RXEN | SERCOM_SPI_CTRLB_PLOADEN));
     f8e:	792b      	ldrb	r3, [r5, #4]
     f90:	796a      	ldrb	r2, [r5, #5]
     f92:	0212      	lsls	r2, r2, #8
     f94:	431a      	orrs	r2, r3
     f96:	79ab      	ldrb	r3, [r5, #6]
     f98:	041b      	lsls	r3, r3, #16
     f9a:	431a      	orrs	r2, r3
     f9c:	79eb      	ldrb	r3, [r5, #7]
     f9e:	061b      	lsls	r3, r3, #24
     fa0:	4313      	orrs	r3, r2
     fa2:	4a19      	ldr	r2, [pc, #100]	; (1008 <STACK_SIZE+0x8>)
     fa4:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
     fa6:	6063      	str	r3, [r4, #4]
	hri_sercomspi_write_ADDR_reg(hw, regs->addr);
     fa8:	7a2b      	ldrb	r3, [r5, #8]
     faa:	7a6a      	ldrb	r2, [r5, #9]
     fac:	0212      	lsls	r2, r2, #8
     fae:	431a      	orrs	r2, r3
     fb0:	7aab      	ldrb	r3, [r5, #10]
     fb2:	041b      	lsls	r3, r3, #16
     fb4:	431a      	orrs	r2, r3
     fb6:	7aeb      	ldrb	r3, [r5, #11]
     fb8:	061b      	lsls	r3, r3, #24
     fba:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.ADDR.reg = data;
     fbc:	6163      	str	r3, [r4, #20]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
     fbe:	7b6b      	ldrb	r3, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
     fc0:	7223      	strb	r3, [r4, #8]
	return ((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY;
     fc2:	8a23      	ldrh	r3, [r4, #16]
     fc4:	0bdb      	lsrs	r3, r3, #15
	while (hri_sercomspi_is_syncing(hw))
     fc6:	d1fc      	bne.n	fc2 <_spi_m_sync_init+0x16e>
     fc8:	e7b4      	b.n	f34 <_spi_m_sync_init+0xe0>
	ASSERT(hw && regs);
     fca:	2000      	movs	r0, #0
     fcc:	e7cb      	b.n	f66 <_spi_m_sync_init+0x112>
     fce:	2000      	movs	r0, #0
     fd0:	e7c9      	b.n	f66 <_spi_m_sync_init+0x112>
	ASSERT(hw && regs);
     fd2:	2000      	movs	r0, #0
     fd4:	e786      	b.n	ee4 <_spi_m_sync_init+0x90>
     fd6:	2000      	movs	r0, #0
     fd8:	e784      	b.n	ee4 <_spi_m_sync_init+0x90>
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
     fda:	2302      	movs	r3, #2
     fdc:	e7ae      	b.n	f3c <_spi_m_sync_init+0xe8>
		return ERR_INVALID_ARG;
     fde:	200d      	movs	r0, #13
     fe0:	4240      	negs	r0, r0
     fe2:	e7ad      	b.n	f40 <_spi_m_sync_init+0xec>
     fe4:	00000909 	.word	0x00000909
     fe8:	000008a3 	.word	0x000008a3
     fec:	00009274 	.word	0x00009274
     ff0:	00000659 	.word	0x00000659
     ff4:	00000872 	.word	0x00000872
     ff8:	fffffefc 	.word	0xfffffefc
     ffc:	fffd3fbf 	.word	0xfffd3fbf
    1000:	000092a8 	.word	0x000092a8
    1004:	00000883 	.word	0x00000883
    1008:	00020040 	.word	0x00020040

0000100c <_spi_m_sync_enable>:

	return _spi_deinit(hw);
}

int32_t _spi_m_sync_enable(struct _spi_m_sync_dev *dev)
{
    100c:	b510      	push	{r4, lr}
    100e:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->prvt);
    1010:	d00d      	beq.n	102e <_spi_m_sync_enable+0x22>
    1012:	6803      	ldr	r3, [r0, #0]
    1014:	2b00      	cmp	r3, #0
    1016:	d008      	beq.n	102a <_spi_m_sync_enable+0x1e>
    1018:	2001      	movs	r0, #1
    101a:	4a06      	ldr	r2, [pc, #24]	; (1034 <_spi_m_sync_enable+0x28>)
    101c:	4906      	ldr	r1, [pc, #24]	; (1038 <_spi_m_sync_enable+0x2c>)
    101e:	4b07      	ldr	r3, [pc, #28]	; (103c <_spi_m_sync_enable+0x30>)
    1020:	4798      	blx	r3

	return _spi_sync_enable(dev->prvt);
    1022:	6820      	ldr	r0, [r4, #0]
    1024:	4b06      	ldr	r3, [pc, #24]	; (1040 <_spi_m_sync_enable+0x34>)
    1026:	4798      	blx	r3
}
    1028:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->prvt);
    102a:	2000      	movs	r0, #0
    102c:	e7f5      	b.n	101a <_spi_m_sync_enable+0xe>
    102e:	2000      	movs	r0, #0
    1030:	e7f3      	b.n	101a <_spi_m_sync_enable+0xe>
    1032:	46c0      	nop			; (mov r8, r8)
    1034:	0000090a 	.word	0x0000090a
    1038:	00009274 	.word	0x00009274
    103c:	00000659 	.word	0x00000659
    1040:	00000919 	.word	0x00000919

00001044 <_spi_m_sync_trans>:
	ctrl->txcnt++;
	hri_sercomspi_write_DATA_reg(hw, data);
}

int32_t _spi_m_sync_trans(struct _spi_m_sync_dev *dev, const struct spi_msg *msg)
{
    1044:	b570      	push	{r4, r5, r6, lr}
    1046:	b088      	sub	sp, #32
    1048:	000d      	movs	r5, r1
	void *                 hw   = dev->prvt;
    104a:	6804      	ldr	r4, [r0, #0]
	int32_t                rc   = 0;
	struct _spi_trans_ctrl ctrl = {msg->txbuf, msg->rxbuf, 0, 0, dev->char_size};
    104c:	680b      	ldr	r3, [r1, #0]
    104e:	9303      	str	r3, [sp, #12]
    1050:	684b      	ldr	r3, [r1, #4]
    1052:	9304      	str	r3, [sp, #16]
    1054:	2300      	movs	r3, #0
    1056:	9305      	str	r3, [sp, #20]
    1058:	9306      	str	r3, [sp, #24]
    105a:	7906      	ldrb	r6, [r0, #4]

	ASSERT(dev && hw);
    105c:	2800      	cmp	r0, #0
    105e:	d014      	beq.n	108a <_spi_m_sync_trans+0x46>
    1060:	2c00      	cmp	r4, #0
    1062:	d010      	beq.n	1086 <_spi_m_sync_trans+0x42>
    1064:	2001      	movs	r0, #1
    1066:	4a2d      	ldr	r2, [pc, #180]	; (111c <_spi_m_sync_trans+0xd8>)
    1068:	492d      	ldr	r1, [pc, #180]	; (1120 <_spi_m_sync_trans+0xdc>)
    106a:	4b2e      	ldr	r3, [pc, #184]	; (1124 <_spi_m_sync_trans+0xe0>)
    106c:	4798      	blx	r3
    106e:	8a23      	ldrh	r3, [r4, #16]
    1070:	0bdb      	lsrs	r3, r3, #15

	/* If settings are not applied (pending), we can not go on */
	if (hri_sercomspi_is_syncing(hw)) {
    1072:	d14f      	bne.n	1114 <_spi_m_sync_trans+0xd0>
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    1074:	8a23      	ldrh	r3, [r4, #16]
    1076:	0bdb      	lsrs	r3, r3, #15
    1078:	d1fc      	bne.n	1074 <_spi_m_sync_trans+0x30>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    107a:	6823      	ldr	r3, [r4, #0]
		return ERR_BUSY;
	}

	/* SPI must be enabled to start synchronous transfer */
	if (!hri_sercomspi_get_CTRLA_ENABLE_bit(hw)) {
    107c:	079b      	lsls	r3, r3, #30
    107e:	d418      	bmi.n	10b2 <_spi_m_sync_trans+0x6e>
		return ERR_NOT_INITIALIZED;
    1080:	2014      	movs	r0, #20
    1082:	4240      	negs	r0, r0
    1084:	e044      	b.n	1110 <_spi_m_sync_trans+0xcc>
	ASSERT(dev && hw);
    1086:	2000      	movs	r0, #0
    1088:	e7ed      	b.n	1066 <_spi_m_sync_trans+0x22>
    108a:	2000      	movs	r0, #0
    108c:	e7eb      	b.n	1066 <_spi_m_sync_trans+0x22>
		return false;
    108e:	2200      	movs	r2, #0
    1090:	e026      	b.n	10e0 <_spi_m_sync_trans+0x9c>
			data |= (*ctrl->txbuf) << 8;
    1092:	7858      	ldrb	r0, [r3, #1]
    1094:	0200      	lsls	r0, r0, #8
    1096:	4301      	orrs	r1, r0
			ctrl->txbuf++;
    1098:	3302      	adds	r3, #2
    109a:	9303      	str	r3, [sp, #12]
	ctrl->txcnt++;
    109c:	3201      	adds	r2, #1
    109e:	9205      	str	r2, [sp, #20]
	hri_sercomspi_write_DATA_reg(hw, data);
    10a0:	b289      	uxth	r1, r1
	((Sercom *)hw)->SPI.DATA.reg = data;
    10a2:	8321      	strh	r1, [r4, #24]
			if (ctrl.rxcnt >= ctrl.txcnt) {
				_spi_tx_check(hw, iflag, &ctrl);
			}
		}

		if (ctrl.txcnt >= msg->size && ctrl.rxcnt >= msg->size) {
    10a4:	9805      	ldr	r0, [sp, #20]
    10a6:	68ab      	ldr	r3, [r5, #8]
    10a8:	4298      	cmp	r0, r3
    10aa:	d302      	bcc.n	10b2 <_spi_m_sync_trans+0x6e>
    10ac:	9a06      	ldr	r2, [sp, #24]
    10ae:	4293      	cmp	r3, r2
    10b0:	d929      	bls.n	1106 <_spi_m_sync_trans+0xc2>
	return ((Sercom *)hw)->SPI.INTFLAG.reg;
    10b2:	7ba3      	ldrb	r3, [r4, #14]
    10b4:	b2db      	uxtb	r3, r3
	if (!(iflag & SERCOM_SPI_INTFLAG_RXC)) {
    10b6:	075a      	lsls	r2, r3, #29
    10b8:	d5e9      	bpl.n	108e <_spi_m_sync_trans+0x4a>
	return ((Sercom *)hw)->SPI.DATA.reg;
    10ba:	8b22      	ldrh	r2, [r4, #24]
    10bc:	b292      	uxth	r2, r2
	if (ctrl->rxbuf) {
    10be:	9904      	ldr	r1, [sp, #16]
    10c0:	2900      	cmp	r1, #0
    10c2:	d008      	beq.n	10d6 <_spi_m_sync_trans+0x92>
		*ctrl->rxbuf++ = (uint8_t)data;
    10c4:	1c48      	adds	r0, r1, #1
    10c6:	9004      	str	r0, [sp, #16]
    10c8:	700a      	strb	r2, [r1, #0]
		if (ctrl->char_size > 1) {
    10ca:	2e01      	cmp	r6, #1
    10cc:	d903      	bls.n	10d6 <_spi_m_sync_trans+0x92>
			*ctrl->rxbuf++ = (uint8_t)(data >> 8);
    10ce:	1c88      	adds	r0, r1, #2
    10d0:	9004      	str	r0, [sp, #16]
    10d2:	0a12      	lsrs	r2, r2, #8
    10d4:	704a      	strb	r2, [r1, #1]
	ctrl->rxcnt++;
    10d6:	9a06      	ldr	r2, [sp, #24]
    10d8:	9201      	str	r2, [sp, #4]
    10da:	3201      	adds	r2, #1
    10dc:	9206      	str	r2, [sp, #24]
	return true;
    10de:	2201      	movs	r2, #1
		if (!_spi_rx_check(hw, iflag, &ctrl)) {
    10e0:	2a00      	cmp	r2, #0
    10e2:	d1df      	bne.n	10a4 <_spi_m_sync_trans+0x60>
			if (ctrl.rxcnt >= ctrl.txcnt) {
    10e4:	9906      	ldr	r1, [sp, #24]
    10e6:	9a05      	ldr	r2, [sp, #20]
    10e8:	4291      	cmp	r1, r2
    10ea:	d3db      	bcc.n	10a4 <_spi_m_sync_trans+0x60>
	if (!(SERCOM_SPI_INTFLAG_DRE & iflag)) {
    10ec:	07db      	lsls	r3, r3, #31
    10ee:	d5d9      	bpl.n	10a4 <_spi_m_sync_trans+0x60>
	if (ctrl->txbuf) {
    10f0:	9b03      	ldr	r3, [sp, #12]
    10f2:	2b00      	cmp	r3, #0
    10f4:	d005      	beq.n	1102 <_spi_m_sync_trans+0xbe>
		data = *ctrl->txbuf++;
    10f6:	1c59      	adds	r1, r3, #1
    10f8:	9103      	str	r1, [sp, #12]
    10fa:	7819      	ldrb	r1, [r3, #0]
		if (ctrl->char_size > 1) {
    10fc:	2e01      	cmp	r6, #1
    10fe:	d8c8      	bhi.n	1092 <_spi_m_sync_trans+0x4e>
    1100:	e7cc      	b.n	109c <_spi_m_sync_trans+0x58>
		data = SPI_DUMMY_CHAR;
    1102:	4909      	ldr	r1, [pc, #36]	; (1128 <_spi_m_sync_trans+0xe4>)
    1104:	e7ca      	b.n	109c <_spi_m_sync_trans+0x58>
	tmp = ((Sercom *)hw)->SPI.INTFLAG.reg;
    1106:	7ba3      	ldrb	r3, [r4, #14]
	while (!(hri_sercomspi_get_INTFLAG_reg(hw, SERCOM_SPI_INTFLAG_TXC | SERCOM_SPI_INTFLAG_DRE))) {
    1108:	079b      	lsls	r3, r3, #30
    110a:	d0fc      	beq.n	1106 <_spi_m_sync_trans+0xc2>
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    110c:	2303      	movs	r3, #3
    110e:	73a3      	strb	r3, [r4, #14]
	}
	/* Wait until SPI bus idle */
	_spi_wait_bus_idle(hw);

	return rc;
}
    1110:	b008      	add	sp, #32
    1112:	bd70      	pop	{r4, r5, r6, pc}
		return ERR_BUSY;
    1114:	2004      	movs	r0, #4
    1116:	4240      	negs	r0, r0
    1118:	e7fa      	b.n	1110 <_spi_m_sync_trans+0xcc>
    111a:	46c0      	nop			; (mov r8, r8)
    111c:	00000a01 	.word	0x00000a01
    1120:	00009274 	.word	0x00009274
    1124:	00000659 	.word	0x00000659
    1128:	000001ff 	.word	0x000001ff

0000112c <_sysctrl_init_sources>:
}

static inline hri_sysctrl_osc32k_reg_t hri_sysctrl_read_OSC32K_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC32K.reg;
    112c:	4a0b      	ldr	r2, [pc, #44]	; (115c <_sysctrl_init_sources+0x30>)
    112e:	6993      	ldr	r3, [r2, #24]
	tmp = (tmp & SYSCTRL_OSC32K_CALIB_Msk) >> SYSCTRL_OSC32K_CALIB_Pos;
    1130:	0c1b      	lsrs	r3, r3, #16
	hri_sysctrl_write_OSC32K_reg(
	    hw,
#if CONF_OSC32K_OVERWRITE_CALIBRATION == 1
	    SYSCTRL_OSC32K_CALIB(CONF_OSC32K_CALIB) |
#else
	    SYSCTRL_OSC32K_CALIB(calib) |
    1132:	041b      	lsls	r3, r3, #16
    1134:	21fe      	movs	r1, #254	; 0xfe
    1136:	03c9      	lsls	r1, r1, #15
    1138:	400b      	ands	r3, r1
#endif
	        (CONF_OSC32K_WRTLOCK << SYSCTRL_OSC32K_WRTLOCK_Pos) | SYSCTRL_OSC32K_STARTUP(CONF_OSC32K_STARTUP)
	        | (CONF_OSC32K_RUNSTDBY << SYSCTRL_OSC32K_RUNSTDBY_Pos) | (CONF_OSC32K_EN1K << SYSCTRL_OSC32K_EN1K_Pos)
	        | (CONF_OSC32K_EN32K << SYSCTRL_OSC32K_EN32K_Pos) | (1 << SYSCTRL_OSC32K_ENABLE_Pos));
    113a:	210e      	movs	r1, #14
    113c:	430b      	orrs	r3, r1
}

static inline void hri_sysctrl_write_OSC32K_reg(const void *const hw, hri_sysctrl_osc32k_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC32K.reg = data;
    113e:	6193      	str	r3, [r2, #24]
}

static inline hri_sysctrl_osculp32k_reg_t hri_sysctrl_read_OSCULP32K_CALIB_bf(const void *const hw)
{
	uint8_t tmp;
	tmp = ((Sysctrl *)hw)->OSCULP32K.reg;
    1140:	7f13      	ldrb	r3, [r2, #28]
	tmp = (tmp & SYSCTRL_OSCULP32K_CALIB_Msk) >> SYSCTRL_OSCULP32K_CALIB_Pos;
    1142:	3111      	adds	r1, #17
    1144:	400b      	ands	r3, r1
}

static inline void hri_sysctrl_write_OSCULP32K_reg(const void *const hw, hri_sysctrl_osculp32k_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSCULP32K.reg = data;
    1146:	7713      	strb	r3, [r2, #28]
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_OSC32KRDY) >> SYSCTRL_PCLKSR_OSC32KRDY_Pos;
    1148:	4b04      	ldr	r3, [pc, #16]	; (115c <_sysctrl_init_sources+0x30>)
    114a:	68db      	ldr	r3, [r3, #12]
#endif
#endif

#if CONF_OSC32K_CONFIG == 1
#if CONF_OSC32K_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_OSC32KRDY_bit(hw))
    114c:	075b      	lsls	r3, r3, #29
    114e:	d5fb      	bpl.n	1148 <_sysctrl_init_sources+0x1c>
	((Sysctrl *)hw)->OSC32K.reg |= SYSCTRL_OSC32K_ONDEMAND;
    1150:	4a02      	ldr	r2, [pc, #8]	; (115c <_sysctrl_init_sources+0x30>)
    1152:	6993      	ldr	r3, [r2, #24]
    1154:	2180      	movs	r1, #128	; 0x80
    1156:	430b      	orrs	r3, r1
    1158:	6193      	str	r3, [r2, #24]
	hri_sysctrl_set_OSC8M_ONDEMAND_bit(hw);
#endif
#endif

	(void)calib, (void)hw;
}
    115a:	4770      	bx	lr
    115c:	40000800 	.word	0x40000800

00001160 <_sysctrl_init_referenced_generators>:
}

static inline void hri_sysctrl_write_DFLLCTRL_reg(const void *const hw, hri_sysctrl_dfllctrl_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DFLLCTRL.reg = data;
    1160:	2202      	movs	r2, #2
    1162:	4b19      	ldr	r3, [pc, #100]	; (11c8 <_sysctrl_init_referenced_generators+0x68>)
    1164:	849a      	strh	r2, [r3, #36]	; 0x24
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) >> SYSCTRL_PCLKSR_DFLLRDY_Pos;
    1166:	4b18      	ldr	r3, [pc, #96]	; (11c8 <_sysctrl_init_referenced_generators+0x68>)
    1168:	68db      	ldr	r3, [r3, #12]
	hri_gclk_write_CLKCTRL_reg(GCLK,
	                           GCLK_CLKCTRL_ID(0) | GCLK_CLKCTRL_GEN(CONF_DFLL_GCLK) | (1 << GCLK_CLKCTRL_CLKEN_Pos));
#endif

	hri_sysctrl_write_DFLLCTRL_reg(hw, SYSCTRL_DFLLCTRL_ENABLE);
	while (!hri_sysctrl_get_PCLKSR_DFLLRDY_bit(hw))
    116a:	06db      	lsls	r3, r3, #27
    116c:	d5fb      	bpl.n	1166 <_sysctrl_init_referenced_generators+0x6>
}

static inline void hri_sysctrl_write_DFLLMUL_reg(const void *const hw, hri_sysctrl_dfllmul_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DFLLMUL.reg = data;
    116e:	4a17      	ldr	r2, [pc, #92]	; (11cc <_sysctrl_init_referenced_generators+0x6c>)
    1170:	4b15      	ldr	r3, [pc, #84]	; (11c8 <_sysctrl_init_referenced_generators+0x68>)
    1172:	62da      	str	r2, [r3, #44]	; 0x2c
		;

	hri_sysctrl_write_DFLLMUL_reg(hw,
	                              SYSCTRL_DFLLMUL_CSTEP(CONF_DFLL_CSTEP) | SYSCTRL_DFLLMUL_FSTEP(CONF_DFLL_FSTEP)
	                                  | SYSCTRL_DFLLMUL_MUL(CONF_DFLL_MUL));
	hri_sysctrl_write_DFLLVAL_reg(hw, CONF_DFLLVAL);
    1174:	4b16      	ldr	r3, [pc, #88]	; (11d0 <_sysctrl_init_referenced_generators+0x70>)
    1176:	681b      	ldr	r3, [r3, #0]
    1178:	0e9b      	lsrs	r3, r3, #26
    117a:	2b3f      	cmp	r3, #63	; 0x3f
    117c:	d01b      	beq.n	11b6 <_sysctrl_init_referenced_generators+0x56>
    117e:	029b      	lsls	r3, r3, #10
    1180:	2280      	movs	r2, #128	; 0x80
    1182:	0092      	lsls	r2, r2, #2
    1184:	4313      	orrs	r3, r2
	((Sysctrl *)hw)->DFLLVAL.reg = data;
    1186:	4a10      	ldr	r2, [pc, #64]	; (11c8 <_sysctrl_init_referenced_generators+0x68>)
    1188:	6293      	str	r3, [r2, #40]	; 0x28
	((Sysctrl *)hw)->DFLLCTRL.reg = data;
    118a:	2302      	movs	r3, #2
    118c:	8493      	strh	r3, [r2, #36]	; 0x24
	tmp = ((Sysctrl *)hw)->DFLLCTRL.reg;
    118e:	8c93      	ldrh	r3, [r2, #36]	; 0x24
	hri_sysctrl_write_DFLLCTRL_reg(hw, tmp);
#endif

#if CONF_DFLL_CONFIG == 1
#if CONF_DFLL_ENABLE == 1
	if (hri_sysctrl_get_DFLLCTRL_MODE_bit(hw)) {
    1190:	075b      	lsls	r3, r3, #29
    1192:	d513      	bpl.n	11bc <_sysctrl_init_referenced_generators+0x5c>
	tmp = ((Sysctrl *)hw)->PCLKSR.reg;
    1194:	4b0c      	ldr	r3, [pc, #48]	; (11c8 <_sysctrl_init_referenced_generators+0x68>)
    1196:	68da      	ldr	r2, [r3, #12]
	tmp &= mask;
    1198:	23d0      	movs	r3, #208	; 0xd0
    119a:	4013      	ands	r3, r2
		hri_sysctrl_pclksr_reg_t status_mask
		    = SYSCTRL_PCLKSR_DFLLRDY | SYSCTRL_PCLKSR_DFLLLCKF | SYSCTRL_PCLKSR_DFLLLCKC;

		while (hri_sysctrl_get_PCLKSR_reg(hw, status_mask) != status_mask)
    119c:	2bd0      	cmp	r3, #208	; 0xd0
    119e:	d1f9      	bne.n	1194 <_sysctrl_init_referenced_generators+0x34>
	((Sysctrl *)hw)->DFLLCTRL.reg |= SYSCTRL_DFLLCTRL_ONDEMAND;
    11a0:	4a09      	ldr	r2, [pc, #36]	; (11c8 <_sysctrl_init_referenced_generators+0x68>)
    11a2:	8c93      	ldrh	r3, [r2, #36]	; 0x24
    11a4:	2180      	movs	r1, #128	; 0x80
    11a6:	430b      	orrs	r3, r1
    11a8:	b29b      	uxth	r3, r3
    11aa:	8493      	strh	r3, [r2, #36]	; 0x24
	return (((Gclk *)hw)->STATUS.reg & GCLK_STATUS_SYNCBUSY) >> GCLK_STATUS_SYNCBUSY_Pos;
    11ac:	4b09      	ldr	r3, [pc, #36]	; (11d4 <_sysctrl_init_referenced_generators+0x74>)
    11ae:	785b      	ldrb	r3, [r3, #1]
	hri_sysctrl_set_DFLLCTRL_ONDEMAND_bit(hw);
#endif
#endif

#if CONF_DFLL_CONFIG == 1
	while (hri_gclk_get_STATUS_SYNCBUSY_bit(GCLK))
    11b0:	09db      	lsrs	r3, r3, #7
    11b2:	d1fb      	bne.n	11ac <_sysctrl_init_referenced_generators+0x4c>
	/* Disable after all possible configurations needs sync written. */
	hri_sysctrl_clear_OSC32K_ENABLE_bit(hw);
#endif

	(void)hw;
}
    11b4:	4770      	bx	lr
	hri_sysctrl_write_DFLLVAL_reg(hw, CONF_DFLLVAL);
    11b6:	23fc      	movs	r3, #252	; 0xfc
    11b8:	01db      	lsls	r3, r3, #7
    11ba:	e7e4      	b.n	1186 <_sysctrl_init_referenced_generators+0x26>
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) >> SYSCTRL_PCLKSR_DFLLRDY_Pos;
    11bc:	4b02      	ldr	r3, [pc, #8]	; (11c8 <_sysctrl_init_referenced_generators+0x68>)
    11be:	68db      	ldr	r3, [r3, #12]
		while (!hri_sysctrl_get_PCLKSR_DFLLRDY_bit(hw))
    11c0:	06db      	lsls	r3, r3, #27
    11c2:	d5fb      	bpl.n	11bc <_sysctrl_init_referenced_generators+0x5c>
    11c4:	e7ec      	b.n	11a0 <_sysctrl_init_referenced_generators+0x40>
    11c6:	46c0      	nop			; (mov r8, r8)
    11c8:	40000800 	.word	0x40000800
    11cc:	04010000 	.word	0x04010000
    11d0:	00806024 	.word	0x00806024
    11d4:	40000c00 	.word	0x40000c00

000011d8 <_system_time_init>:
 * \brief Initialize system time module
 */
void _system_time_init(void *const hw)
{
	(void)hw;
	SysTick->LOAD = (0xFFFFFF << SysTick_LOAD_RELOAD_Pos);
    11d8:	4b02      	ldr	r3, [pc, #8]	; (11e4 <_system_time_init+0xc>)
    11da:	4a03      	ldr	r2, [pc, #12]	; (11e8 <_system_time_init+0x10>)
    11dc:	605a      	str	r2, [r3, #4]
	SysTick->CTRL = (1 << SysTick_CTRL_ENABLE_Pos) | (CONF_SYSTICK_TICKINT << SysTick_CTRL_TICKINT_Pos)
    11de:	2205      	movs	r2, #5
    11e0:	601a      	str	r2, [r3, #0]
	                | (1 << SysTick_CTRL_CLKSOURCE_Pos);
}
    11e2:	4770      	bx	lr
    11e4:	e000e010 	.word	0xe000e010
    11e8:	00ffffff 	.word	0x00ffffff

000011ec <_delay_init>:
/**
 * \brief Initialize delay functionality
 */
void _delay_init(void *const hw)
{
    11ec:	b510      	push	{r4, lr}
	_system_time_init(hw);
    11ee:	4b01      	ldr	r3, [pc, #4]	; (11f4 <_delay_init+0x8>)
    11f0:	4798      	blx	r3
}
    11f2:	bd10      	pop	{r4, pc}
    11f4:	000011d9 	.word	0x000011d9

000011f8 <_delay_cycles>:
 * \brief Delay loop to delay n number of cycles
 */
void _delay_cycles(void *const hw, uint32_t cycles)
{
	(void)hw;
	uint8_t  n   = cycles >> 24;
    11f8:	0e08      	lsrs	r0, r1, #24
	uint32_t buf = cycles;

	while (n--) {
    11fa:	e00b      	b.n	1214 <_delay_cycles+0x1c>
		SysTick->LOAD = 0xFFFFFF;
    11fc:	4b0b      	ldr	r3, [pc, #44]	; (122c <_delay_cycles+0x34>)
    11fe:	480c      	ldr	r0, [pc, #48]	; (1230 <_delay_cycles+0x38>)
    1200:	6058      	str	r0, [r3, #4]
		SysTick->VAL  = 0xFFFFFF;
    1202:	6098      	str	r0, [r3, #8]
		while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
    1204:	4b09      	ldr	r3, [pc, #36]	; (122c <_delay_cycles+0x34>)
    1206:	681b      	ldr	r3, [r3, #0]
    1208:	03db      	lsls	r3, r3, #15
    120a:	d5fb      	bpl.n	1204 <_delay_cycles+0xc>
			;
		buf -= 0xFFFFFF;
    120c:	4b09      	ldr	r3, [pc, #36]	; (1234 <_delay_cycles+0x3c>)
    120e:	469c      	mov	ip, r3
    1210:	4461      	add	r1, ip
	while (n--) {
    1212:	0010      	movs	r0, r2
    1214:	1e42      	subs	r2, r0, #1
    1216:	b2d2      	uxtb	r2, r2
    1218:	2800      	cmp	r0, #0
    121a:	d1ef      	bne.n	11fc <_delay_cycles+0x4>
	}

	SysTick->LOAD = buf;
    121c:	4b03      	ldr	r3, [pc, #12]	; (122c <_delay_cycles+0x34>)
    121e:	6059      	str	r1, [r3, #4]
	SysTick->VAL  = buf;
    1220:	6099      	str	r1, [r3, #8]
	while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
    1222:	4b02      	ldr	r3, [pc, #8]	; (122c <_delay_cycles+0x34>)
    1224:	681b      	ldr	r3, [r3, #0]
    1226:	03db      	lsls	r3, r3, #15
    1228:	d5fb      	bpl.n	1222 <_delay_cycles+0x2a>
		;
}
    122a:	4770      	bx	lr
    122c:	e000e010 	.word	0xe000e010
    1230:	00ffffff 	.word	0x00ffffff
    1234:	ff000001 	.word	0xff000001

00001238 <I2C_RTC_Handler>:
uint8_t rfIntCount = 0;
rfHeader* ptr_rfHeader;


static void I2C_RTC_Handler(void){
	if (rtcIntCount < 255) {
    1238:	4b03      	ldr	r3, [pc, #12]	; (1248 <I2C_RTC_Handler+0x10>)
    123a:	781b      	ldrb	r3, [r3, #0]
    123c:	2bff      	cmp	r3, #255	; 0xff
    123e:	d002      	beq.n	1246 <I2C_RTC_Handler+0xe>
		rtcIntCount++;
    1240:	3301      	adds	r3, #1
    1242:	4a01      	ldr	r2, [pc, #4]	; (1248 <I2C_RTC_Handler+0x10>)
    1244:	7013      	strb	r3, [r2, #0]
	}
}
    1246:	4770      	bx	lr
    1248:	20000a41 	.word	0x20000a41

0000124c <RF_int_Handler>:
	return res;
}


static void RF_int_Handler(void){
	if(rfIntCount < 255){
    124c:	4b03      	ldr	r3, [pc, #12]	; (125c <RF_int_Handler+0x10>)
    124e:	781b      	ldrb	r3, [r3, #0]
    1250:	2bff      	cmp	r3, #255	; 0xff
    1252:	d002      	beq.n	125a <RF_int_Handler+0xe>
		rfIntCount++;
    1254:	3301      	adds	r3, #1
    1256:	4a01      	ldr	r2, [pc, #4]	; (125c <RF_int_Handler+0x10>)
    1258:	7013      	strb	r3, [r2, #0]
	}	
}
    125a:	4770      	bx	lr
    125c:	20000a40 	.word	0x20000a40

00001260 <RTC_IRQ_Ready>:
	uint8_t res = rtcIntCount;
    1260:	4b02      	ldr	r3, [pc, #8]	; (126c <RTC_IRQ_Ready+0xc>)
    1262:	7818      	ldrb	r0, [r3, #0]
	rtcIntCount = 0;
    1264:	2200      	movs	r2, #0
    1266:	701a      	strb	r2, [r3, #0]
}
    1268:	4770      	bx	lr
    126a:	46c0      	nop			; (mov r8, r8)
    126c:	20000a41 	.word	0x20000a41

00001270 <RF_Select>:
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = ~data;
}

static inline void hri_port_clear_OUT_reg(const void *const hw, uint8_t submodule_index, hri_port_out_reg_t mask)
{
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1270:	2280      	movs	r2, #128	; 0x80
    1272:	01d2      	lsls	r2, r2, #7
    1274:	23c0      	movs	r3, #192	; 0xc0
    1276:	05db      	lsls	r3, r3, #23
    1278:	615a      	str	r2, [r3, #20]
void EP_Unselect(void){
	gpio_set_pin_level(EP_CS, true);
}
void RF_Select(void){
	gpio_set_pin_level(RF_CS, false);
}
    127a:	4770      	bx	lr

0000127c <RF_Unselect>:
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    127c:	2280      	movs	r2, #128	; 0x80
    127e:	01d2      	lsls	r2, r2, #7
    1280:	23c0      	movs	r3, #192	; 0xc0
    1282:	05db      	lsls	r3, r3, #23
    1284:	619a      	str	r2, [r3, #24]
void RF_Unselect(void){
	gpio_set_pin_level(RF_CS, true);
}
    1286:	4770      	bx	lr

00001288 <RF_Reset>:

void RF_Reset(void){
    1288:	b570      	push	{r4, r5, r6, lr}
    128a:	25c0      	movs	r5, #192	; 0xc0
    128c:	05ed      	lsls	r5, r5, #23
    128e:	2680      	movs	r6, #128	; 0x80
    1290:	0336      	lsls	r6, r6, #12
    1292:	61ae      	str	r6, [r5, #24]
	gpio_set_pin_level(RF_RST, true);
	delay_ms(20);
    1294:	2014      	movs	r0, #20
    1296:	4c03      	ldr	r4, [pc, #12]	; (12a4 <RF_Reset+0x1c>)
    1298:	47a0      	blx	r4
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    129a:	616e      	str	r6, [r5, #20]
	gpio_set_pin_level(RF_RST, false);
	delay_ms(20);
    129c:	2014      	movs	r0, #20
    129e:	47a0      	blx	r4
}
    12a0:	bd70      	pop	{r4, r5, r6, pc}
    12a2:	46c0      	nop			; (mov r8, r8)
    12a4:	000001e1 	.word	0x000001e1

000012a8 <SPI0_WriteBuff>:

void SPI0_ReadBuff(uint8_t* buff, uint16_t len){
	io_read(spi0,buff,len);
}
void SPI0_WriteBuff(uint8_t* buff, uint16_t len){
    12a8:	b510      	push	{r4, lr}
    12aa:	0003      	movs	r3, r0
    12ac:	000a      	movs	r2, r1
	io_write(spi0,buff,len);
    12ae:	4903      	ldr	r1, [pc, #12]	; (12bc <SPI0_WriteBuff+0x14>)
    12b0:	6808      	ldr	r0, [r1, #0]
    12b2:	0019      	movs	r1, r3
    12b4:	4b02      	ldr	r3, [pc, #8]	; (12c0 <SPI0_WriteBuff+0x18>)
    12b6:	4798      	blx	r3
}
    12b8:	bd10      	pop	{r4, pc}
    12ba:	46c0      	nop			; (mov r8, r8)
    12bc:	20002190 	.word	0x20002190
    12c0:	00000479 	.word	0x00000479

000012c4 <SPI0_Read_byte>:
uint8_t SPI0_Read_byte(void){
    12c4:	b510      	push	{r4, lr}
    12c6:	b082      	sub	sp, #8
	uint8_t data_byte = 0;
    12c8:	466b      	mov	r3, sp
    12ca:	1ddc      	adds	r4, r3, #7
    12cc:	2300      	movs	r3, #0
    12ce:	7023      	strb	r3, [r4, #0]
	io_read(spi0,&data_byte,1);
    12d0:	4b04      	ldr	r3, [pc, #16]	; (12e4 <SPI0_Read_byte+0x20>)
    12d2:	6818      	ldr	r0, [r3, #0]
    12d4:	2201      	movs	r2, #1
    12d6:	0021      	movs	r1, r4
    12d8:	4b03      	ldr	r3, [pc, #12]	; (12e8 <SPI0_Read_byte+0x24>)
    12da:	4798      	blx	r3
	return data_byte;
    12dc:	7820      	ldrb	r0, [r4, #0]
}
    12de:	b002      	add	sp, #8
    12e0:	bd10      	pop	{r4, pc}
    12e2:	46c0      	nop			; (mov r8, r8)
    12e4:	20002190 	.word	0x20002190
    12e8:	000004b1 	.word	0x000004b1

000012ec <SPI0_Write_byte>:
void SPI0_Write_byte(uint8_t byte){
    12ec:	b500      	push	{lr}
    12ee:	b083      	sub	sp, #12
    12f0:	466b      	mov	r3, sp
    12f2:	1dd9      	adds	r1, r3, #7
    12f4:	7008      	strb	r0, [r1, #0]
	io_write(spi0, &byte, 1);
    12f6:	4b03      	ldr	r3, [pc, #12]	; (1304 <SPI0_Write_byte+0x18>)
    12f8:	6818      	ldr	r0, [r3, #0]
    12fa:	2201      	movs	r2, #1
    12fc:	4b02      	ldr	r3, [pc, #8]	; (1308 <SPI0_Write_byte+0x1c>)
    12fe:	4798      	blx	r3
}
    1300:	b003      	add	sp, #12
    1302:	bd00      	pop	{pc}
    1304:	20002190 	.word	0x20002190
    1308:	00000479 	.word	0x00000479

0000130c <RTC_write_batch>:


bool RTC_write_batch(uint8_t addres, uint8_t *data, uint8_t data_len){
    130c:	b570      	push	{r4, r5, r6, lr}
    130e:	000d      	movs	r5, r1
    1310:	0014      	movs	r4, r2
	i2c_m_sync_set_slaveaddr(&I2C_0, addres, I2C_M_SEVEN);
    1312:	b201      	sxth	r1, r0
    1314:	2280      	movs	r2, #128	; 0x80
    1316:	0112      	lsls	r2, r2, #4
    1318:	4805      	ldr	r0, [pc, #20]	; (1330 <RTC_write_batch+0x24>)
    131a:	4b06      	ldr	r3, [pc, #24]	; (1334 <RTC_write_batch+0x28>)
    131c:	4798      	blx	r3
	//i2c_m_sync_cmd_write(&EXT_I2C, 0x00, data, data_len);	
	return (io_write(i2c0, (uint8_t *)data, data_len) >= 0) ? true : false;
    131e:	b2a2      	uxth	r2, r4
    1320:	4b05      	ldr	r3, [pc, #20]	; (1338 <RTC_write_batch+0x2c>)
    1322:	6818      	ldr	r0, [r3, #0]
    1324:	0029      	movs	r1, r5
    1326:	4b05      	ldr	r3, [pc, #20]	; (133c <RTC_write_batch+0x30>)
    1328:	4798      	blx	r3
    132a:	43c0      	mvns	r0, r0
    132c:	0fc0      	lsrs	r0, r0, #31
}
    132e:	bd70      	pop	{r4, r5, r6, pc}
    1330:	20002110 	.word	0x20002110
    1334:	00000415 	.word	0x00000415
    1338:	2000214c 	.word	0x2000214c
    133c:	00000479 	.word	0x00000479

00001340 <RTC_read_batch>:

bool RTC_read_batch(uint8_t addres ,uint8_t *data, uint8_t data_len){
    1340:	b570      	push	{r4, r5, r6, lr}
    1342:	000c      	movs	r4, r1
    1344:	0015      	movs	r5, r2
	i2c_m_sync_set_slaveaddr(&I2C_0, addres, I2C_M_SEVEN);
    1346:	b201      	sxth	r1, r0
    1348:	4e06      	ldr	r6, [pc, #24]	; (1364 <RTC_read_batch+0x24>)
    134a:	2280      	movs	r2, #128	; 0x80
    134c:	0112      	lsls	r2, r2, #4
    134e:	0030      	movs	r0, r6
    1350:	4b05      	ldr	r3, [pc, #20]	; (1368 <RTC_read_batch+0x28>)
    1352:	4798      	blx	r3
	i2c_m_sync_cmd_read(&I2C_0, 0x00, data, data_len);
    1354:	002b      	movs	r3, r5
    1356:	0022      	movs	r2, r4
    1358:	2100      	movs	r1, #0
    135a:	0030      	movs	r0, r6
    135c:	4c03      	ldr	r4, [pc, #12]	; (136c <RTC_read_batch+0x2c>)
    135e:	47a0      	blx	r4
	//return (io_read(I2C_io, (uint8_t *)data, data_len) >= 0) ? true : false;
}
    1360:	bd70      	pop	{r4, r5, r6, pc}
    1362:	46c0      	nop			; (mov r8, r8)
    1364:	20002110 	.word	0x20002110
    1368:	00000415 	.word	0x00000415
    136c:	00000429 	.word	0x00000429

00001370 <GPIO_init>:
	i2c_m_sync_set_slaveaddr(&I2C_0, addres, I2C_M_SEVEN);
	i2c_m_sync_cmd_read(&I2C_0, reg, data, data_len);
}


void GPIO_init(void){
    1370:	b5f0      	push	{r4, r5, r6, r7, lr}
    1372:	46ce      	mov	lr, r9
    1374:	4647      	mov	r7, r8
    1376:	b580      	push	{r7, lr}
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1378:	22c0      	movs	r2, #192	; 0xc0
    137a:	05d2      	lsls	r2, r2, #23
    137c:	2380      	movs	r3, #128	; 0x80
    137e:	031b      	lsls	r3, r3, #12
    1380:	6193      	str	r3, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1382:	6093      	str	r3, [r2, #8]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1384:	4b35      	ldr	r3, [pc, #212]	; (145c <GPIO_init+0xec>)
    1386:	2480      	movs	r4, #128	; 0x80
    1388:	05e4      	lsls	r4, r4, #23
    138a:	629c      	str	r4, [r3, #40]	; 0x28
    138c:	4934      	ldr	r1, [pc, #208]	; (1460 <GPIO_init+0xf0>)
    138e:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1390:	2553      	movs	r5, #83	; 0x53
    1392:	5d58      	ldrb	r0, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1394:	2101      	movs	r1, #1
    1396:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1398:	5558      	strb	r0, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    139a:	2080      	movs	r0, #128	; 0x80
    139c:	01c0      	lsls	r0, r0, #7
    139e:	6190      	str	r0, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    13a0:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    13a2:	4830      	ldr	r0, [pc, #192]	; (1464 <GPIO_init+0xf4>)
    13a4:	6298      	str	r0, [r3, #40]	; 0x28
    13a6:	20c0      	movs	r0, #192	; 0xc0
    13a8:	0600      	lsls	r0, r0, #24
    13aa:	4681      	mov	r9, r0
    13ac:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    13ae:	3d05      	subs	r5, #5
    13b0:	5d58      	ldrb	r0, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
    13b2:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    13b4:	5558      	strb	r0, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    13b6:	2080      	movs	r0, #128	; 0x80
    13b8:	0200      	lsls	r0, r0, #8
    13ba:	6190      	str	r0, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    13bc:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    13be:	482a      	ldr	r0, [pc, #168]	; (1468 <GPIO_init+0xf8>)
    13c0:	6298      	str	r0, [r3, #40]	; 0x28
    13c2:	4648      	mov	r0, r9
    13c4:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    13c6:	3501      	adds	r5, #1
    13c8:	5d58      	ldrb	r0, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
    13ca:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    13cc:	5558      	strb	r0, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    13ce:	2080      	movs	r0, #128	; 0x80
    13d0:	0240      	lsls	r0, r0, #9
    13d2:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    13d4:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    13d6:	629c      	str	r4, [r3, #40]	; 0x28
    13d8:	4824      	ldr	r0, [pc, #144]	; (146c <GPIO_init+0xfc>)
    13da:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    13dc:	3501      	adds	r5, #1
    13de:	5d58      	ldrb	r0, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
    13e0:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    13e2:	5558      	strb	r0, [r3, r5]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    13e4:	2780      	movs	r7, #128	; 0x80
    13e6:	02bf      	lsls	r7, r7, #10
    13e8:	6057      	str	r7, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    13ea:	4821      	ldr	r0, [pc, #132]	; (1470 <GPIO_init+0x100>)
    13ec:	6298      	str	r0, [r3, #40]	; 0x28
    13ee:	4821      	ldr	r0, [pc, #132]	; (1474 <GPIO_init+0x104>)
    13f0:	6298      	str	r0, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    13f2:	6057      	str	r7, [r2, #4]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg |= PORT_PINCFG_PULLEN;
    13f4:	3501      	adds	r5, #1
    13f6:	5d58      	ldrb	r0, [r3, r5]
    13f8:	4680      	mov	r8, r0
    13fa:	2004      	movs	r0, #4
    13fc:	4684      	mov	ip, r0
    13fe:	4660      	mov	r0, ip
    1400:	4646      	mov	r6, r8
    1402:	4306      	orrs	r6, r0
    1404:	b2f0      	uxtb	r0, r6
    1406:	5558      	strb	r0, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1408:	6197      	str	r7, [r2, #24]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    140a:	5d58      	ldrb	r0, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
    140c:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    140e:	5558      	strb	r0, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1410:	2080      	movs	r0, #128	; 0x80
    1412:	02c0      	lsls	r0, r0, #11
    1414:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1416:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1418:	629c      	str	r4, [r3, #40]	; 0x28
    141a:	4817      	ldr	r0, [pc, #92]	; (1478 <GPIO_init+0x108>)
    141c:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    141e:	3501      	adds	r5, #1
    1420:	5d58      	ldrb	r0, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1422:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1424:	5558      	strb	r0, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1426:	2080      	movs	r0, #128	; 0x80
    1428:	0500      	lsls	r0, r0, #20
    142a:	6190      	str	r0, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    142c:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    142e:	629c      	str	r4, [r3, #40]	; 0x28
    1430:	4812      	ldr	r0, [pc, #72]	; (147c <GPIO_init+0x10c>)
    1432:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1434:	245b      	movs	r4, #91	; 0x5b
    1436:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1438:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    143a:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    143c:	2080      	movs	r0, #128	; 0x80
    143e:	0100      	lsls	r0, r0, #4
    1440:	6190      	str	r0, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1442:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1444:	4a0e      	ldr	r2, [pc, #56]	; (1480 <GPIO_init+0x110>)
    1446:	629a      	str	r2, [r3, #40]	; 0x28
    1448:	464a      	mov	r2, r9
    144a:	629a      	str	r2, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    144c:	204b      	movs	r0, #75	; 0x4b
    144e:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1450:	438a      	bics	r2, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1452:	541a      	strb	r2, [r3, r0]
	gpio_set_pin_function(EP_EN, GPIO_PIN_FUNCTION_OFF);
	
	gpio_set_pin_level(EP_RST, true);
	gpio_set_pin_direction(EP_RST, GPIO_DIRECTION_OUT);
	gpio_set_pin_function(EP_RST, GPIO_PIN_FUNCTION_OFF);	
}
    1454:	bc0c      	pop	{r2, r3}
    1456:	4690      	mov	r8, r2
    1458:	4699      	mov	r9, r3
    145a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    145c:	41004400 	.word	0x41004400
    1460:	c0000008 	.word	0xc0000008
    1464:	40004000 	.word	0x40004000
    1468:	40008000 	.word	0x40008000
    146c:	c0000001 	.word	0xc0000001
    1470:	40020000 	.word	0x40020000
    1474:	c0020002 	.word	0xc0020002
    1478:	c0000004 	.word	0xc0000004
    147c:	c0000800 	.word	0xc0000800
    1480:	40000800 	.word	0x40000800

00001484 <SPI_init>:


void SPI_init(void){
    1484:	b5f0      	push	{r4, r5, r6, r7, lr}
    1486:	46c6      	mov	lr, r8
    1488:	b500      	push	{lr}
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    148a:	21c0      	movs	r1, #192	; 0xc0
    148c:	05c9      	lsls	r1, r1, #23
    148e:	2380      	movs	r3, #128	; 0x80
    1490:	005b      	lsls	r3, r3, #1
    1492:	614b      	str	r3, [r1, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1494:	608b      	str	r3, [r1, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1496:	4b30      	ldr	r3, [pc, #192]	; (1558 <SPI_init+0xd4>)
    1498:	4a30      	ldr	r2, [pc, #192]	; (155c <SPI_init+0xd8>)
    149a:	629a      	str	r2, [r3, #40]	; 0x28
    149c:	22c0      	movs	r2, #192	; 0xc0
    149e:	0612      	lsls	r2, r2, #24
    14a0:	4694      	mov	ip, r2
    14a2:	629a      	str	r2, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    14a4:	2448      	movs	r4, #72	; 0x48
    14a6:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    14a8:	2601      	movs	r6, #1
    14aa:	43b0      	bics	r0, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    14ac:	2201      	movs	r2, #1
    14ae:	4310      	orrs	r0, r2
    14b0:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    14b2:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    14b4:	2734      	movs	r7, #52	; 0x34
    14b6:	5dd8      	ldrb	r0, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    14b8:	250f      	movs	r5, #15
    14ba:	43a8      	bics	r0, r5
	tmp |= PORT_PMUX_PMUXE(data);
    14bc:	2402      	movs	r4, #2
    14be:	46a0      	mov	r8, r4
    14c0:	4644      	mov	r4, r8
    14c2:	4320      	orrs	r0, r4
    14c4:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    14c6:	55d8      	strb	r0, [r3, r7]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    14c8:	2080      	movs	r0, #128	; 0x80
    14ca:	0080      	lsls	r0, r0, #2
    14cc:	6148      	str	r0, [r1, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    14ce:	6088      	str	r0, [r1, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    14d0:	4823      	ldr	r0, [pc, #140]	; (1560 <SPI_init+0xdc>)
    14d2:	6298      	str	r0, [r3, #40]	; 0x28
    14d4:	4660      	mov	r0, ip
    14d6:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    14d8:	2049      	movs	r0, #73	; 0x49
    14da:	4684      	mov	ip, r0
    14dc:	5c18      	ldrb	r0, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    14de:	43b0      	bics	r0, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    14e0:	4310      	orrs	r0, r2
    14e2:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    14e4:	4664      	mov	r4, ip
    14e6:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    14e8:	5dd8      	ldrb	r0, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    14ea:	3c3a      	subs	r4, #58	; 0x3a
    14ec:	4020      	ands	r0, r4
	tmp |= PORT_PMUX_PMUXO(data);
    14ee:	2420      	movs	r4, #32
    14f0:	46a4      	mov	ip, r4
    14f2:	4664      	mov	r4, ip
    14f4:	4320      	orrs	r0, r4
    14f6:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    14f8:	55d8      	strb	r0, [r3, r7]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    14fa:	2080      	movs	r0, #128	; 0x80
    14fc:	00c0      	lsls	r0, r0, #3
    14fe:	6048      	str	r0, [r1, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1500:	4918      	ldr	r1, [pc, #96]	; (1564 <SPI_init+0xe0>)
    1502:	6299      	str	r1, [r3, #40]	; 0x28
    1504:	4918      	ldr	r1, [pc, #96]	; (1568 <SPI_init+0xe4>)
    1506:	6299      	str	r1, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1508:	3716      	adds	r7, #22
    150a:	5dd9      	ldrb	r1, [r3, r7]
    150c:	2004      	movs	r0, #4
    150e:	4381      	bics	r1, r0
    1510:	55d9      	strb	r1, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1512:	5dd9      	ldrb	r1, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1514:	43b1      	bics	r1, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1516:	4311      	orrs	r1, r2
    1518:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    151a:	55d9      	strb	r1, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    151c:	2135      	movs	r1, #53	; 0x35
    151e:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1520:	43aa      	bics	r2, r5
	tmp |= PORT_PMUX_PMUXE(data);
    1522:	4644      	mov	r4, r8
    1524:	4322      	orrs	r2, r4
    1526:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1528:	545a      	strb	r2, [r3, r1]
			peripheral = (uint32_t)_pm_get_apbb_index(module);
			PM->APBBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBC:
		PM->APBCMASK.reg |= 1 << peripheral;
    152a:	4a10      	ldr	r2, [pc, #64]	; (156c <SPI_init+0xe8>)
    152c:	6a13      	ldr	r3, [r2, #32]
    152e:	4318      	orrs	r0, r3
    1530:	6210      	str	r0, [r2, #32]
	((Gclk *)hw)->CLKCTRL.reg = data;
    1532:	4a0f      	ldr	r2, [pc, #60]	; (1570 <SPI_init+0xec>)
    1534:	4b0f      	ldr	r3, [pc, #60]	; (1574 <SPI_init+0xf0>)
    1536:	805a      	strh	r2, [r3, #2]
	gpio_set_pin_function(PA10, PINMUX_PA10C_SERCOM0_PAD2);
	
	_pm_enable_bus_clock(PM_BUS_APBC, SERCOM0);
	_gclk_enable_channel(SERCOM0_GCLK_ID_CORE, CONF_GCLK_SERCOM0_CORE_SRC);
	
	spi_m_sync_init(&SPI_0, SERCOM0);
    1538:	4c0f      	ldr	r4, [pc, #60]	; (1578 <SPI_init+0xf4>)
    153a:	4910      	ldr	r1, [pc, #64]	; (157c <SPI_init+0xf8>)
    153c:	0020      	movs	r0, r4
    153e:	4b10      	ldr	r3, [pc, #64]	; (1580 <SPI_init+0xfc>)
    1540:	4798      	blx	r3
	spi_m_sync_get_io_descriptor(&SPI_0, &spi0);
    1542:	4910      	ldr	r1, [pc, #64]	; (1584 <SPI_init+0x100>)
    1544:	0020      	movs	r0, r4
    1546:	4b10      	ldr	r3, [pc, #64]	; (1588 <SPI_init+0x104>)
    1548:	4798      	blx	r3
	spi_m_sync_enable(&SPI_0);
    154a:	0020      	movs	r0, r4
    154c:	4b0f      	ldr	r3, [pc, #60]	; (158c <SPI_init+0x108>)
    154e:	4798      	blx	r3
	
}
    1550:	bc04      	pop	{r2}
    1552:	4690      	mov	r8, r2
    1554:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1556:	46c0      	nop			; (mov r8, r8)
    1558:	41004400 	.word	0x41004400
    155c:	40000100 	.word	0x40000100
    1560:	40000200 	.word	0x40000200
    1564:	40020400 	.word	0x40020400
    1568:	c0020000 	.word	0xc0020000
    156c:	40000400 	.word	0x40000400
    1570:	0000400d 	.word	0x0000400d
    1574:	40000c00 	.word	0x40000c00
    1578:	20002134 	.word	0x20002134
    157c:	42000800 	.word	0x42000800
    1580:	000004e9 	.word	0x000004e9
    1584:	20002190 	.word	0x20002190
    1588:	00000629 	.word	0x00000629
    158c:	00000541 	.word	0x00000541

00001590 <I2C_init>:



void I2C_init(void){
    1590:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1592:	4a1e      	ldr	r2, [pc, #120]	; (160c <I2C_init+0x7c>)
    1594:	6a13      	ldr	r3, [r2, #32]
    1596:	2120      	movs	r1, #32
    1598:	430b      	orrs	r3, r1
    159a:	6213      	str	r3, [r2, #32]
    159c:	4b1c      	ldr	r3, [pc, #112]	; (1610 <I2C_init+0x80>)
    159e:	4a1d      	ldr	r2, [pc, #116]	; (1614 <I2C_init+0x84>)
    15a0:	805a      	strh	r2, [r3, #2]
    15a2:	4a1d      	ldr	r2, [pc, #116]	; (1618 <I2C_init+0x88>)
    15a4:	805a      	strh	r2, [r3, #2]
	_pm_enable_bus_clock(PM_BUS_APBC, SERCOM3);
	_gclk_enable_channel(SERCOM3_GCLK_ID_CORE, CONF_GCLK_SERCOM3_CORE_SRC);
	_gclk_enable_channel(SERCOM3_GCLK_ID_SLOW, CONF_GCLK_SERCOM3_SLOW_SRC);
	
	i2c_m_sync_init(&I2C_0, SERCOM3);
    15a6:	4c1d      	ldr	r4, [pc, #116]	; (161c <I2C_init+0x8c>)
    15a8:	491d      	ldr	r1, [pc, #116]	; (1620 <I2C_init+0x90>)
    15aa:	0020      	movs	r0, r4
    15ac:	4b1d      	ldr	r3, [pc, #116]	; (1624 <I2C_init+0x94>)
    15ae:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    15b0:	4b1d      	ldr	r3, [pc, #116]	; (1628 <I2C_init+0x98>)
    15b2:	2056      	movs	r0, #86	; 0x56
    15b4:	5c19      	ldrb	r1, [r3, r0]
    15b6:	2204      	movs	r2, #4
    15b8:	4391      	bics	r1, r2
    15ba:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    15bc:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    15be:	2601      	movs	r6, #1
    15c0:	43b1      	bics	r1, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    15c2:	2501      	movs	r5, #1
    15c4:	4329      	orrs	r1, r5
    15c6:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    15c8:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    15ca:	381b      	subs	r0, #27
    15cc:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    15ce:	270f      	movs	r7, #15
    15d0:	43b9      	bics	r1, r7
	tmp |= PORT_PMUX_PMUXE(data);
    15d2:	2702      	movs	r7, #2
    15d4:	4339      	orrs	r1, r7
    15d6:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    15d8:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    15da:	2157      	movs	r1, #87	; 0x57
    15dc:	5c5f      	ldrb	r7, [r3, r1]
    15de:	4397      	bics	r7, r2
    15e0:	545f      	strb	r7, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    15e2:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    15e4:	43b2      	bics	r2, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    15e6:	432a      	orrs	r2, r5
    15e8:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    15ea:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    15ec:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    15ee:	3948      	subs	r1, #72	; 0x48
    15f0:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
    15f2:	2120      	movs	r1, #32
    15f4:	430a      	orrs	r2, r1
    15f6:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    15f8:	541a      	strb	r2, [r3, r0]
	gpio_set_pin_function(PA22, PINMUX_PA22C_SERCOM3_PAD0);

	gpio_set_pin_pull_mode(PA23, GPIO_PULL_OFF);
	gpio_set_pin_function(PA23, PINMUX_PA23C_SERCOM3_PAD1);

	i2c_m_sync_get_io_descriptor(&I2C_0, &i2c0);
    15fa:	490c      	ldr	r1, [pc, #48]	; (162c <I2C_init+0x9c>)
    15fc:	0020      	movs	r0, r4
    15fe:	4b0c      	ldr	r3, [pc, #48]	; (1630 <I2C_init+0xa0>)
    1600:	4798      	blx	r3
	i2c_m_sync_enable(&I2C_0);
    1602:	0020      	movs	r0, r4
    1604:	4b0b      	ldr	r3, [pc, #44]	; (1634 <I2C_init+0xa4>)
    1606:	4798      	blx	r3
	
}
    1608:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    160a:	46c0      	nop			; (mov r8, r8)
    160c:	40000400 	.word	0x40000400
    1610:	40000c00 	.word	0x40000c00
    1614:	00004010 	.word	0x00004010
    1618:	0000430c 	.word	0x0000430c
    161c:	20002110 	.word	0x20002110
    1620:	42001400 	.word	0x42001400
    1624:	000003c9 	.word	0x000003c9
    1628:	41004400 	.word	0x41004400
    162c:	2000214c 	.word	0x2000214c
    1630:	00000471 	.word	0x00000471
    1634:	00000409 	.word	0x00000409

00001638 <IRQ_init>:

void IRQ_init(void){
    1638:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    163a:	4a1a      	ldr	r2, [pc, #104]	; (16a4 <IRQ_init+0x6c>)
    163c:	4b1a      	ldr	r3, [pc, #104]	; (16a8 <IRQ_init+0x70>)
    163e:	805a      	strh	r2, [r3, #2]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1640:	27c0      	movs	r7, #192	; 0xc0
    1642:	05ff      	lsls	r7, r7, #23
    1644:	2380      	movs	r3, #128	; 0x80
    1646:	607b      	str	r3, [r7, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1648:	4b18      	ldr	r3, [pc, #96]	; (16ac <IRQ_init+0x74>)
    164a:	4a19      	ldr	r2, [pc, #100]	; (16b0 <IRQ_init+0x78>)
    164c:	629a      	str	r2, [r3, #40]	; 0x28
    164e:	4a19      	ldr	r2, [pc, #100]	; (16b4 <IRQ_init+0x7c>)
    1650:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1652:	2047      	movs	r0, #71	; 0x47
    1654:	5c19      	ldrb	r1, [r3, r0]
    1656:	2204      	movs	r2, #4
    1658:	4391      	bics	r1, r2
    165a:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    165c:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    165e:	2501      	movs	r5, #1
    1660:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1662:	2401      	movs	r4, #1
    1664:	4321      	orrs	r1, r4
    1666:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1668:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    166a:	3814      	subs	r0, #20
    166c:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    166e:	260f      	movs	r6, #15
    1670:	4031      	ands	r1, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1672:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1674:	2180      	movs	r1, #128	; 0x80
    1676:	0489      	lsls	r1, r1, #18
    1678:	6079      	str	r1, [r7, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    167a:	490f      	ldr	r1, [pc, #60]	; (16b8 <IRQ_init+0x80>)
    167c:	6299      	str	r1, [r3, #40]	; 0x28
    167e:	490f      	ldr	r1, [pc, #60]	; (16bc <IRQ_init+0x84>)
    1680:	6299      	str	r1, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1682:	2159      	movs	r1, #89	; 0x59
    1684:	5c58      	ldrb	r0, [r3, r1]
    1686:	4390      	bics	r0, r2
    1688:	5458      	strb	r0, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    168a:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    168c:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    168e:	4322      	orrs	r2, r4
    1690:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1692:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1694:	391d      	subs	r1, #29
    1696:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1698:	4032      	ands	r2, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    169a:	545a      	strb	r2, [r3, r1]
	
	gpio_set_pin_direction(RTC_INT, GPIO_DIRECTION_IN);
	gpio_set_pin_pull_mode(RTC_INT, GPIO_PULL_OFF);
	gpio_set_pin_function(RTC_INT, PINMUX_PA25A_EIC_EXTINT13);

	ext_irq_init();
    169c:	4b08      	ldr	r3, [pc, #32]	; (16c0 <IRQ_init+0x88>)
    169e:	4798      	blx	r3
}
    16a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    16a2:	46c0      	nop			; (mov r8, r8)
    16a4:	00004103 	.word	0x00004103
    16a8:	40000c00 	.word	0x40000c00
    16ac:	41004400 	.word	0x41004400
    16b0:	40020080 	.word	0x40020080
    16b4:	c0020000 	.word	0xc0020000
    16b8:	40020000 	.word	0x40020000
    16bc:	c0020200 	.word	0xc0020200
    16c0:	00000245 	.word	0x00000245

000016c4 <mcu_init>:



void mcu_init(void)
{
    16c4:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
    16c6:	4b0a      	ldr	r3, [pc, #40]	; (16f0 <mcu_init+0x2c>)
    16c8:	4798      	blx	r3
	init_mcu();
	GPIO_init();
    16ca:	4b0a      	ldr	r3, [pc, #40]	; (16f4 <mcu_init+0x30>)
    16cc:	4798      	blx	r3
	SPI_init();
    16ce:	4b0a      	ldr	r3, [pc, #40]	; (16f8 <mcu_init+0x34>)
    16d0:	4798      	blx	r3
	I2C_init();
    16d2:	4b0a      	ldr	r3, [pc, #40]	; (16fc <mcu_init+0x38>)
    16d4:	4798      	blx	r3
	IRQ_init();
    16d6:	4b0a      	ldr	r3, [pc, #40]	; (1700 <mcu_init+0x3c>)
    16d8:	4798      	blx	r3
	
	
	ext_irq_register(RTC_INT, I2C_RTC_Handler);
    16da:	490a      	ldr	r1, [pc, #40]	; (1704 <mcu_init+0x40>)
    16dc:	2019      	movs	r0, #25
    16de:	4c0a      	ldr	r4, [pc, #40]	; (1708 <mcu_init+0x44>)
    16e0:	47a0      	blx	r4
	ext_irq_register(RF_INT, RF_int_Handler);	
    16e2:	490a      	ldr	r1, [pc, #40]	; (170c <mcu_init+0x48>)
    16e4:	2007      	movs	r0, #7
    16e6:	47a0      	blx	r4
	
	delay_driver_init();
    16e8:	4b09      	ldr	r3, [pc, #36]	; (1710 <mcu_init+0x4c>)
    16ea:	4798      	blx	r3
	//...Peripherial init
	
    16ec:	bd10      	pop	{r4, pc}
    16ee:	46c0      	nop			; (mov r8, r8)
    16f0:	000006a9 	.word	0x000006a9
    16f4:	00001371 	.word	0x00001371
    16f8:	00001485 	.word	0x00001485
    16fc:	00001591 	.word	0x00001591
    1700:	00001639 	.word	0x00001639
    1704:	00001239 	.word	0x00001239
    1708:	00000279 	.word	0x00000279
    170c:	0000124d 	.word	0x0000124d
    1710:	0000017d 	.word	0x0000017d

00001714 <epdReset>:
/**
 * \brief Set output level on port with mask
 */
static inline void _gpio_set_level(const enum gpio_port port, const uint32_t mask, const bool level)
{
	if (level) {
    1714:	2800      	cmp	r0, #0
    1716:	d105      	bne.n	1724 <epdReset+0x10>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1718:	2280      	movs	r2, #128	; 0x80
    171a:	0112      	lsls	r2, r2, #4
    171c:	23c0      	movs	r3, #192	; 0xc0
    171e:	05db      	lsls	r3, r3, #23
    1720:	615a      	str	r2, [r3, #20]
	
}

void epdReset(bool arg){
	gpio_set_pin_level(EP_RST, arg);
}
    1722:	4770      	bx	lr
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1724:	2280      	movs	r2, #128	; 0x80
    1726:	0112      	lsls	r2, r2, #4
    1728:	23c0      	movs	r3, #192	; 0xc0
    172a:	05db      	lsls	r3, r3, #23
    172c:	619a      	str	r2, [r3, #24]
    172e:	e7f8      	b.n	1722 <epdReset+0xe>

00001730 <epdSelect>:
    1730:	2800      	cmp	r0, #0
    1732:	d105      	bne.n	1740 <epdSelect+0x10>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1734:	2280      	movs	r2, #128	; 0x80
    1736:	0212      	lsls	r2, r2, #8
    1738:	23c0      	movs	r3, #192	; 0xc0
    173a:	05db      	lsls	r3, r3, #23
    173c:	615a      	str	r2, [r3, #20]

void epdSelect(bool arg){
	gpio_set_pin_level(EP_CS, arg);
}
    173e:	4770      	bx	lr
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1740:	2280      	movs	r2, #128	; 0x80
    1742:	0212      	lsls	r2, r2, #8
    1744:	23c0      	movs	r3, #192	; 0xc0
    1746:	05db      	lsls	r3, r3, #23
    1748:	619a      	str	r2, [r3, #24]
    174a:	e7f8      	b.n	173e <epdSelect+0xe>

0000174c <epdCommand>:
    174c:	2800      	cmp	r0, #0
    174e:	d105      	bne.n	175c <epdCommand+0x10>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1750:	2280      	movs	r2, #128	; 0x80
    1752:	0252      	lsls	r2, r2, #9
    1754:	23c0      	movs	r3, #192	; 0xc0
    1756:	05db      	lsls	r3, r3, #23
    1758:	615a      	str	r2, [r3, #20]

void epdCommand(bool arg){
	gpio_set_pin_level(EP_CMD, arg);
}
    175a:	4770      	bx	lr
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    175c:	2280      	movs	r2, #128	; 0x80
    175e:	0252      	lsls	r2, r2, #9
    1760:	23c0      	movs	r3, #192	; 0xc0
    1762:	05db      	lsls	r3, r3, #23
    1764:	619a      	str	r2, [r3, #24]
    1766:	e7f8      	b.n	175a <epdCommand+0xe>

00001768 <epdWriteBuff>:

void epdWriteByte(uint8_t arg){
	SPI0_WriteBuff(arg);
}

void epdWriteBuff(uint8_t* buff, uint16_t len){
    1768:	b510      	push	{r4, lr}
	SPI0_WriteBuff(buff, len);
    176a:	4b01      	ldr	r3, [pc, #4]	; (1770 <epdWriteBuff+0x8>)
    176c:	4798      	blx	r3
}
    176e:	bd10      	pop	{r4, pc}
    1770:	000012a9 	.word	0x000012a9

00001774 <screenSpi>:

uint8_t screenSpi(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    1774:	b510      	push	{r4, lr}
	
	switch(msg)
    1776:	3914      	subs	r1, #20
    1778:	b2cc      	uxtb	r4, r1
    177a:	2c37      	cmp	r4, #55	; 0x37
    177c:	d803      	bhi.n	1786 <screenSpi+0x12>
    177e:	00a1      	lsls	r1, r4, #2
    1780:	4819      	ldr	r0, [pc, #100]	; (17e8 <screenSpi+0x74>)
    1782:	5841      	ldr	r1, [r0, r1]
    1784:	468f      	mov	pc, r1
		case U8X8_MSG_BYTE_END_TRANSFER:
			epdSelect(true);
			epdCommand(true);
			break;
		default:
			return 0;
    1786:	2000      	movs	r0, #0
    1788:	e02c      	b.n	17e4 <screenSpi+0x70>
			epdReset((arg_int != 1) ?  false : true);
    178a:	3a01      	subs	r2, #1
    178c:	4250      	negs	r0, r2
    178e:	4150      	adcs	r0, r2
    1790:	b2c0      	uxtb	r0, r0
    1792:	4b16      	ldr	r3, [pc, #88]	; (17ec <screenSpi+0x78>)
    1794:	4798      	blx	r3
	}
	return 1;
    1796:	2001      	movs	r0, #1
			break;
    1798:	e024      	b.n	17e4 <screenSpi+0x70>
			delay_ms(arg_int);
    179a:	b290      	uxth	r0, r2
    179c:	4b14      	ldr	r3, [pc, #80]	; (17f0 <screenSpi+0x7c>)
    179e:	4798      	blx	r3
	return 1;
    17a0:	2001      	movs	r0, #1
			break;
    17a2:	e01f      	b.n	17e4 <screenSpi+0x70>
			epdWriteBuff(arg_ptr, arg_int);
    17a4:	b291      	uxth	r1, r2
    17a6:	0018      	movs	r0, r3
    17a8:	4b12      	ldr	r3, [pc, #72]	; (17f4 <screenSpi+0x80>)
    17aa:	4798      	blx	r3
	return 1;
    17ac:	2001      	movs	r0, #1
			break;
    17ae:	e019      	b.n	17e4 <screenSpi+0x70>
			epdSelect(false);
    17b0:	2000      	movs	r0, #0
    17b2:	4b11      	ldr	r3, [pc, #68]	; (17f8 <screenSpi+0x84>)
    17b4:	4798      	blx	r3
	return 1;
    17b6:	2001      	movs	r0, #1
			break;
    17b8:	e014      	b.n	17e4 <screenSpi+0x70>
			epdCommand(arg_int);
    17ba:	1e50      	subs	r0, r2, #1
    17bc:	4182      	sbcs	r2, r0
    17be:	b2d0      	uxtb	r0, r2
    17c0:	4b0e      	ldr	r3, [pc, #56]	; (17fc <screenSpi+0x88>)
    17c2:	4798      	blx	r3
	return 1;
    17c4:	2001      	movs	r0, #1
			break;
    17c6:	e00d      	b.n	17e4 <screenSpi+0x70>
			epdSelect(false);
    17c8:	2000      	movs	r0, #0
    17ca:	4b0b      	ldr	r3, [pc, #44]	; (17f8 <screenSpi+0x84>)
    17cc:	4798      	blx	r3
	return 1;
    17ce:	2001      	movs	r0, #1
			break;
    17d0:	e008      	b.n	17e4 <screenSpi+0x70>
			epdSelect(true);
    17d2:	2001      	movs	r0, #1
    17d4:	4b08      	ldr	r3, [pc, #32]	; (17f8 <screenSpi+0x84>)
    17d6:	4798      	blx	r3
			epdCommand(true);
    17d8:	2001      	movs	r0, #1
    17da:	4b08      	ldr	r3, [pc, #32]	; (17fc <screenSpi+0x88>)
    17dc:	4798      	blx	r3
	return 1;
    17de:	2001      	movs	r0, #1
			break;
    17e0:	e000      	b.n	17e4 <screenSpi+0x70>
	return 1;
    17e2:	2001      	movs	r0, #1
}
    17e4:	bd10      	pop	{r4, pc}
    17e6:	46c0      	nop			; (mov r8, r8)
    17e8:	000092b8 	.word	0x000092b8
    17ec:	00001715 	.word	0x00001715
    17f0:	000001e1 	.word	0x000001e1
    17f4:	00001769 	.word	0x00001769
    17f8:	00001731 	.word	0x00001731
    17fc:	0000174d 	.word	0x0000174d

00001800 <u8g2_send_tile_row>:
}

/*============================================*/

static void u8g2_send_tile_row(u8g2_t *u8g2, uint8_t src_tile_row, uint8_t dest_tile_row)
{
    1800:	b510      	push	{r4, lr}
    1802:	b082      	sub	sp, #8
  uint8_t *ptr;
  uint16_t offset;
  uint8_t w;
  
  w = u8g2_GetU8x8(u8g2)->display_info->tile_width;
    1804:	6803      	ldr	r3, [r0, #0]
    1806:	7c1b      	ldrb	r3, [r3, #16]
  offset = src_tile_row;
  ptr = u8g2->tile_buf_ptr;
  offset *= w;
    1808:	4359      	muls	r1, r3
  offset *= 8;
    180a:	00c9      	lsls	r1, r1, #3
    180c:	b289      	uxth	r1, r1
  ptr += offset;
    180e:	6b44      	ldr	r4, [r0, #52]	; 0x34
    1810:	46a4      	mov	ip, r4
    1812:	4461      	add	r1, ip
  u8x8_DrawTile(u8g2_GetU8x8(u8g2), 0, dest_tile_row, w, ptr);
    1814:	9100      	str	r1, [sp, #0]
    1816:	2100      	movs	r1, #0
    1818:	4c01      	ldr	r4, [pc, #4]	; (1820 <u8g2_send_tile_row+0x20>)
    181a:	47a0      	blx	r4
}
    181c:	b002      	add	sp, #8
    181e:	bd10      	pop	{r4, pc}
    1820:	000025e9 	.word	0x000025e9

00001824 <u8g2_send_buffer>:
  For most displays, this will make the content visible to the user.
  Some displays (like the SSD1606) require a u8x8_RefreshDisplay()
*/
static void u8g2_send_buffer(u8g2_t *u8g2) U8X8_NOINLINE;
static void u8g2_send_buffer(u8g2_t *u8g2)
{
    1824:	b5f0      	push	{r4, r5, r6, r7, lr}
    1826:	46c6      	mov	lr, r8
    1828:	b500      	push	{lr}
    182a:	0006      	movs	r6, r0
  uint8_t src_max;
  uint8_t dest_row;
  uint8_t dest_max;

  src_row = 0;
  src_max = u8g2->tile_buf_height;
    182c:	2338      	movs	r3, #56	; 0x38
    182e:	5cc7      	ldrb	r7, [r0, r3]
  dest_row = u8g2->tile_curr_row;
    1830:	3301      	adds	r3, #1
    1832:	5cc5      	ldrb	r5, [r0, r3]
  dest_max = u8g2_GetU8x8(u8g2)->display_info->tile_height;
    1834:	6803      	ldr	r3, [r0, #0]
    1836:	7c5b      	ldrb	r3, [r3, #17]
    1838:	4698      	mov	r8, r3
  src_row = 0;
    183a:	2400      	movs	r4, #0
  
  do
  {
    u8g2_send_tile_row(u8g2, src_row, dest_row);
    183c:	002a      	movs	r2, r5
    183e:	0021      	movs	r1, r4
    1840:	0030      	movs	r0, r6
    1842:	4b06      	ldr	r3, [pc, #24]	; (185c <u8g2_send_buffer+0x38>)
    1844:	4798      	blx	r3
    src_row++;
    1846:	3401      	adds	r4, #1
    1848:	b2e4      	uxtb	r4, r4
    dest_row++;
    184a:	3501      	adds	r5, #1
    184c:	b2ed      	uxtb	r5, r5
  } while( src_row < src_max && dest_row < dest_max );
    184e:	42a7      	cmp	r7, r4
    1850:	d901      	bls.n	1856 <u8g2_send_buffer+0x32>
    1852:	45a8      	cmp	r8, r5
    1854:	d8f2      	bhi.n	183c <u8g2_send_buffer+0x18>
}
    1856:	bc04      	pop	{r2}
    1858:	4690      	mov	r8, r2
    185a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    185c:	00001801 	.word	0x00001801

00001860 <u8g2_ClearBuffer>:
{
    1860:	b510      	push	{r4, lr}
  cnt = u8g2_GetU8x8(u8g2)->display_info->tile_width;
    1862:	6803      	ldr	r3, [r0, #0]
    1864:	7c1b      	ldrb	r3, [r3, #16]
  cnt *= u8g2->tile_buf_height;
    1866:	2238      	movs	r2, #56	; 0x38
    1868:	5c82      	ldrb	r2, [r0, r2]
    186a:	435a      	muls	r2, r3
  cnt *= 8;
    186c:	00d2      	lsls	r2, r2, #3
  memset(u8g2->tile_buf_ptr, 0, cnt);
    186e:	6b40      	ldr	r0, [r0, #52]	; 0x34
    1870:	2100      	movs	r1, #0
    1872:	4b01      	ldr	r3, [pc, #4]	; (1878 <u8g2_ClearBuffer+0x18>)
    1874:	4798      	blx	r3
}
    1876:	bd10      	pop	{r4, pc}
    1878:	00004c95 	.word	0x00004c95

0000187c <u8g2_SendBuffer>:

/* same as u8g2_send_buffer but also send the DISPLAY_REFRESH message (used by SSD1606) */
void u8g2_SendBuffer(u8g2_t *u8g2)
{
    187c:	b510      	push	{r4, lr}
    187e:	0004      	movs	r4, r0
  u8g2_send_buffer(u8g2);
    1880:	4b02      	ldr	r3, [pc, #8]	; (188c <u8g2_SendBuffer+0x10>)
    1882:	4798      	blx	r3
  u8x8_RefreshDisplay( u8g2_GetU8x8(u8g2) );  
    1884:	0020      	movs	r0, r4
    1886:	4b02      	ldr	r3, [pc, #8]	; (1890 <u8g2_SendBuffer+0x14>)
    1888:	4798      	blx	r3
}
    188a:	bd10      	pop	{r4, pc}
    188c:	00001825 	.word	0x00001825
    1890:	00002623 	.word	0x00002623

00001894 <u8g2_m_19_304_f>:
	#ifdef U8G2_USE_DYNAMIC_ALLOC
	*page_cnt = 19;
	return 0;
	#else
	static uint8_t buf[5776];
	*page_cnt = 19;
    1894:	2313      	movs	r3, #19
    1896:	7003      	strb	r3, [r0, #0]
	return buf;
	#endif
}
    1898:	4800      	ldr	r0, [pc, #0]	; (189c <u8g2_m_19_304_f+0x8>)
    189a:	4770      	bx	lr
    189c:	20000a44 	.word	0x20000a44

000018a0 <u8g2_Setup_GDEY0154_152x304_f>:
  buf = u8g2_m_48_30_f(&tile_buf_height);
  u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_horizontal_right_lsb, rotation);
}

void u8g2_Setup_GDEY0154_152x304_f(u8g2_t *u8g2, const u8g2_cb_t *rotation, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)
{
    18a0:	b570      	push	{r4, r5, r6, lr}
    18a2:	b084      	sub	sp, #16
    18a4:	0004      	movs	r4, r0
    18a6:	000e      	movs	r6, r1
	uint8_t tile_buf_height;
	uint8_t *buf;
	u8g2_SetupDisplay(u8g2, u8x8_d_gdey0154_152x304, u8x8_cad_011, byte_cb, gpio_and_delay_cb);
    18a8:	9300      	str	r3, [sp, #0]
    18aa:	0013      	movs	r3, r2
    18ac:	4a08      	ldr	r2, [pc, #32]	; (18d0 <u8g2_Setup_GDEY0154_152x304_f+0x30>)
    18ae:	4909      	ldr	r1, [pc, #36]	; (18d4 <u8g2_Setup_GDEY0154_152x304_f+0x34>)
    18b0:	4d09      	ldr	r5, [pc, #36]	; (18d8 <u8g2_Setup_GDEY0154_152x304_f+0x38>)
    18b2:	47a8      	blx	r5
	buf = u8g2_m_19_304_f(&tile_buf_height);
    18b4:	250f      	movs	r5, #15
    18b6:	446d      	add	r5, sp
    18b8:	0028      	movs	r0, r5
    18ba:	4b08      	ldr	r3, [pc, #32]	; (18dc <u8g2_Setup_GDEY0154_152x304_f+0x3c>)
    18bc:	4798      	blx	r3
    18be:	0001      	movs	r1, r0
	u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_vertical_top_lsb, rotation);
    18c0:	782a      	ldrb	r2, [r5, #0]
    18c2:	9600      	str	r6, [sp, #0]
    18c4:	4b06      	ldr	r3, [pc, #24]	; (18e0 <u8g2_Setup_GDEY0154_152x304_f+0x40>)
    18c6:	0020      	movs	r0, r4
    18c8:	4c06      	ldr	r4, [pc, #24]	; (18e4 <u8g2_Setup_GDEY0154_152x304_f+0x44>)
    18ca:	47a0      	blx	r4
}
    18cc:	b004      	add	sp, #16
    18ce:	bd70      	pop	{r4, r5, r6, pc}
    18d0:	0000251d 	.word	0x0000251d
    18d4:	00002789 	.word	0x00002789
    18d8:	00002851 	.word	0x00002851
    18dc:	00001895 	.word	0x00001895
    18e0:	000021ed 	.word	0x000021ed
    18e4:	000023c1 	.word	0x000023c1

000018e8 <u8g2_font_get_byte>:
/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
  return u8x8_pgm_read( font );  
    18e8:	5c40      	ldrb	r0, [r0, r1]
}
    18ea:	4770      	bx	lr

000018ec <u8g2_font_get_word>:

static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset) U8G2_NOINLINE; 
static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset)
{
    uint16_t pos;
    font += offset;
    18ec:	1841      	adds	r1, r0, r1
    pos = u8x8_pgm_read( font );
    18ee:	7808      	ldrb	r0, [r1, #0]
    font++;
    pos <<= 8;
    18f0:	0200      	lsls	r0, r0, #8
    pos += u8x8_pgm_read( font);
    18f2:	784b      	ldrb	r3, [r1, #1]
    18f4:	18c0      	adds	r0, r0, r3
    18f6:	b280      	uxth	r0, r0
    return pos;
}
    18f8:	4770      	bx	lr

000018fa <u8g2_font_calc_vref_font>:
/* callback procedures to correct the y position */

u8g2_uint_t u8g2_font_calc_vref_font(U8X8_UNUSED u8g2_t *u8g2)
{
  return 0;
}
    18fa:	2000      	movs	r0, #0
    18fc:	4770      	bx	lr
	...

00001900 <u8g2_read_font_info>:
{
    1900:	b570      	push	{r4, r5, r6, lr}
    1902:	0004      	movs	r4, r0
    1904:	000d      	movs	r5, r1
  font_info->glyph_cnt = u8g2_font_get_byte(font, 0);
    1906:	2100      	movs	r1, #0
    1908:	0028      	movs	r0, r5
    190a:	4e28      	ldr	r6, [pc, #160]	; (19ac <u8g2_read_font_info+0xac>)
    190c:	47b0      	blx	r6
    190e:	7020      	strb	r0, [r4, #0]
  font_info->bbx_mode = u8g2_font_get_byte(font, 1);
    1910:	2101      	movs	r1, #1
    1912:	0028      	movs	r0, r5
    1914:	47b0      	blx	r6
    1916:	7060      	strb	r0, [r4, #1]
  font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
    1918:	2102      	movs	r1, #2
    191a:	0028      	movs	r0, r5
    191c:	47b0      	blx	r6
    191e:	70a0      	strb	r0, [r4, #2]
  font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
    1920:	2103      	movs	r1, #3
    1922:	0028      	movs	r0, r5
    1924:	47b0      	blx	r6
    1926:	70e0      	strb	r0, [r4, #3]
  font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
    1928:	2104      	movs	r1, #4
    192a:	0028      	movs	r0, r5
    192c:	47b0      	blx	r6
    192e:	7120      	strb	r0, [r4, #4]
  font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
    1930:	2105      	movs	r1, #5
    1932:	0028      	movs	r0, r5
    1934:	47b0      	blx	r6
    1936:	7160      	strb	r0, [r4, #5]
  font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
    1938:	2106      	movs	r1, #6
    193a:	0028      	movs	r0, r5
    193c:	47b0      	blx	r6
    193e:	71a0      	strb	r0, [r4, #6]
  font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
    1940:	2107      	movs	r1, #7
    1942:	0028      	movs	r0, r5
    1944:	47b0      	blx	r6
    1946:	71e0      	strb	r0, [r4, #7]
  font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
    1948:	2108      	movs	r1, #8
    194a:	0028      	movs	r0, r5
    194c:	47b0      	blx	r6
    194e:	7220      	strb	r0, [r4, #8]
  font_info->max_char_width = u8g2_font_get_byte(font, 9);
    1950:	2109      	movs	r1, #9
    1952:	0028      	movs	r0, r5
    1954:	47b0      	blx	r6
    1956:	7260      	strb	r0, [r4, #9]
  font_info->max_char_height = u8g2_font_get_byte(font, 10);
    1958:	210a      	movs	r1, #10
    195a:	0028      	movs	r0, r5
    195c:	47b0      	blx	r6
    195e:	72a0      	strb	r0, [r4, #10]
  font_info->x_offset = u8g2_font_get_byte(font, 11);
    1960:	210b      	movs	r1, #11
    1962:	0028      	movs	r0, r5
    1964:	47b0      	blx	r6
    1966:	72e0      	strb	r0, [r4, #11]
  font_info->y_offset = u8g2_font_get_byte(font, 12);
    1968:	210c      	movs	r1, #12
    196a:	0028      	movs	r0, r5
    196c:	47b0      	blx	r6
    196e:	7320      	strb	r0, [r4, #12]
  font_info->ascent_A = u8g2_font_get_byte(font, 13);
    1970:	210d      	movs	r1, #13
    1972:	0028      	movs	r0, r5
    1974:	47b0      	blx	r6
    1976:	7360      	strb	r0, [r4, #13]
  font_info->descent_g = u8g2_font_get_byte(font, 14);
    1978:	210e      	movs	r1, #14
    197a:	0028      	movs	r0, r5
    197c:	47b0      	blx	r6
    197e:	73a0      	strb	r0, [r4, #14]
  font_info->ascent_para = u8g2_font_get_byte(font, 15);
    1980:	210f      	movs	r1, #15
    1982:	0028      	movs	r0, r5
    1984:	47b0      	blx	r6
    1986:	73e0      	strb	r0, [r4, #15]
  font_info->descent_para = u8g2_font_get_byte(font, 16);
    1988:	2110      	movs	r1, #16
    198a:	0028      	movs	r0, r5
    198c:	47b0      	blx	r6
    198e:	7420      	strb	r0, [r4, #16]
  font_info->start_pos_upper_A = u8g2_font_get_word(font, 17);
    1990:	2111      	movs	r1, #17
    1992:	0028      	movs	r0, r5
    1994:	4e06      	ldr	r6, [pc, #24]	; (19b0 <u8g2_read_font_info+0xb0>)
    1996:	47b0      	blx	r6
    1998:	8260      	strh	r0, [r4, #18]
  font_info->start_pos_lower_a = u8g2_font_get_word(font, 19); 
    199a:	2113      	movs	r1, #19
    199c:	0028      	movs	r0, r5
    199e:	47b0      	blx	r6
    19a0:	82a0      	strh	r0, [r4, #20]
  font_info->start_pos_unicode = u8g2_font_get_word(font, 21); 
    19a2:	2115      	movs	r1, #21
    19a4:	0028      	movs	r0, r5
    19a6:	47b0      	blx	r6
    19a8:	82e0      	strh	r0, [r4, #22]
}
    19aa:	bd70      	pop	{r4, r5, r6, pc}
    19ac:	000018e9 	.word	0x000018e9
    19b0:	000018ed 	.word	0x000018ed

000019b4 <u8g2_font_decode_get_unsigned_bits>:
{
    19b4:	b5f0      	push	{r4, r5, r6, r7, lr}
    19b6:	0005      	movs	r5, r0
  uint8_t bit_pos = f->decode_bit_pos;
    19b8:	7b06      	ldrb	r6, [r0, #12]
  val = u8x8_pgm_read( f->decode_ptr );  
    19ba:	6807      	ldr	r7, [r0, #0]
    19bc:	7838      	ldrb	r0, [r7, #0]
  val >>= bit_pos;
    19be:	4130      	asrs	r0, r6
    19c0:	b2c4      	uxtb	r4, r0
  bit_pos_plus_cnt += cnt;
    19c2:	1872      	adds	r2, r6, r1
    19c4:	b2d2      	uxtb	r2, r2
  if ( bit_pos_plus_cnt >= 8 )
    19c6:	2a07      	cmp	r2, #7
    19c8:	d90a      	bls.n	19e0 <u8g2_font_decode_get_unsigned_bits+0x2c>
    s -= bit_pos;
    19ca:	2308      	movs	r3, #8
    19cc:	1b9b      	subs	r3, r3, r6
    19ce:	b2db      	uxtb	r3, r3
    f->decode_ptr++;
    19d0:	1c7c      	adds	r4, r7, #1
    19d2:	602c      	str	r4, [r5, #0]
    val |= u8x8_pgm_read( f->decode_ptr ) << (s);
    19d4:	787c      	ldrb	r4, [r7, #1]
    19d6:	409c      	lsls	r4, r3
    19d8:	4304      	orrs	r4, r0
    19da:	b2e4      	uxtb	r4, r4
    bit_pos_plus_cnt -= 8;
    19dc:	3a08      	subs	r2, #8
    19de:	b2d2      	uxtb	r2, r2
  val &= (1U<<cnt)-1;
    19e0:	2301      	movs	r3, #1
    19e2:	408b      	lsls	r3, r1
    19e4:	3b01      	subs	r3, #1
    19e6:	4023      	ands	r3, r4
    19e8:	0018      	movs	r0, r3
  f->decode_bit_pos = bit_pos_plus_cnt;
    19ea:	732a      	strb	r2, [r5, #12]
}
    19ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

000019f0 <u8g2_font_setup_decode>:
{
    19f0:	b570      	push	{r4, r5, r6, lr}
    19f2:	0005      	movs	r5, r0
  u8g2_font_decode_t *decode = &(u8g2->font_decode);
    19f4:	0004      	movs	r4, r0
    19f6:	3460      	adds	r4, #96	; 0x60
  decode->decode_ptr = glyph_data;
    19f8:	6601      	str	r1, [r0, #96]	; 0x60
  decode->decode_bit_pos = 0;
    19fa:	2300      	movs	r3, #0
    19fc:	7323      	strb	r3, [r4, #12]
  decode->glyph_width = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_char_width);
    19fe:	3378      	adds	r3, #120	; 0x78
    1a00:	5cc1      	ldrb	r1, [r0, r3]
    1a02:	0020      	movs	r0, r4
    1a04:	4e07      	ldr	r6, [pc, #28]	; (1a24 <u8g2_font_setup_decode+0x34>)
    1a06:	47b0      	blx	r6
    1a08:	72a0      	strb	r0, [r4, #10]
  decode->glyph_height = u8g2_font_decode_get_unsigned_bits(decode,u8g2->font_info.bits_per_char_height);
    1a0a:	2379      	movs	r3, #121	; 0x79
    1a0c:	5ce9      	ldrb	r1, [r5, r3]
    1a0e:	0020      	movs	r0, r4
    1a10:	47b0      	blx	r6
    1a12:	72e0      	strb	r0, [r4, #11]
  decode->fg_color = u8g2->draw_color;
    1a14:	2392      	movs	r3, #146	; 0x92
    1a16:	5ceb      	ldrb	r3, [r5, r3]
    1a18:	73a3      	strb	r3, [r4, #14]
  decode->bg_color = (decode->fg_color == 0 ? 1 : 0);
    1a1a:	425a      	negs	r2, r3
    1a1c:	4153      	adcs	r3, r2
    1a1e:	73e3      	strb	r3, [r4, #15]
}
    1a20:	bd70      	pop	{r4, r5, r6, pc}
    1a22:	46c0      	nop			; (mov r8, r8)
    1a24:	000019b5 	.word	0x000019b5

00001a28 <u8g2_font_decode_get_signed_bits>:
{
    1a28:	b510      	push	{r4, lr}
    1a2a:	000c      	movs	r4, r1
  v = (int8_t)u8g2_font_decode_get_unsigned_bits(f, cnt);
    1a2c:	4b04      	ldr	r3, [pc, #16]	; (1a40 <u8g2_font_decode_get_signed_bits+0x18>)
    1a2e:	4798      	blx	r3
  cnt--;
    1a30:	3c01      	subs	r4, #1
    1a32:	b2e4      	uxtb	r4, r4
  d <<= cnt;
    1a34:	2301      	movs	r3, #1
    1a36:	40a3      	lsls	r3, r4
  v -= d;
    1a38:	1ac0      	subs	r0, r0, r3
    1a3a:	b240      	sxtb	r0, r0
}
    1a3c:	bd10      	pop	{r4, pc}
    1a3e:	46c0      	nop			; (mov r8, r8)
    1a40:	000019b5 	.word	0x000019b5

00001a44 <u8g2_add_vector_y>:
  switch(dir)
    1a44:	2b01      	cmp	r3, #1
    1a46:	d009      	beq.n	1a5c <u8g2_add_vector_y+0x18>
    1a48:	2b00      	cmp	r3, #0
    1a4a:	d004      	beq.n	1a56 <u8g2_add_vector_y+0x12>
    1a4c:	2b02      	cmp	r3, #2
    1a4e:	d008      	beq.n	1a62 <u8g2_add_vector_y+0x1e>
      dy -= x;
    1a50:	1a40      	subs	r0, r0, r1
    1a52:	b280      	uxth	r0, r0
      break;      
    1a54:	e001      	b.n	1a5a <u8g2_add_vector_y+0x16>
      dy += y;
    1a56:	1880      	adds	r0, r0, r2
    1a58:	b280      	uxth	r0, r0
}
    1a5a:	4770      	bx	lr
      dy += x;
    1a5c:	1840      	adds	r0, r0, r1
    1a5e:	b280      	uxth	r0, r0
      break;
    1a60:	e7fb      	b.n	1a5a <u8g2_add_vector_y+0x16>
      dy -= y;
    1a62:	1a80      	subs	r0, r0, r2
    1a64:	b280      	uxth	r0, r0
      break;
    1a66:	e7f8      	b.n	1a5a <u8g2_add_vector_y+0x16>

00001a68 <u8g2_add_vector_x>:
  switch(dir)
    1a68:	2b01      	cmp	r3, #1
    1a6a:	d009      	beq.n	1a80 <u8g2_add_vector_x+0x18>
    1a6c:	2b00      	cmp	r3, #0
    1a6e:	d004      	beq.n	1a7a <u8g2_add_vector_x+0x12>
    1a70:	2b02      	cmp	r3, #2
    1a72:	d008      	beq.n	1a86 <u8g2_add_vector_x+0x1e>
      dx += y;
    1a74:	1880      	adds	r0, r0, r2
    1a76:	b280      	uxth	r0, r0
      break;      
    1a78:	e001      	b.n	1a7e <u8g2_add_vector_x+0x16>
      dx += x;
    1a7a:	1840      	adds	r0, r0, r1
    1a7c:	b280      	uxth	r0, r0
}
    1a7e:	4770      	bx	lr
      dx -= y;
    1a80:	1a80      	subs	r0, r0, r2
    1a82:	b280      	uxth	r0, r0
      break;
    1a84:	e7fb      	b.n	1a7e <u8g2_add_vector_x+0x16>
      dx -= x;
    1a86:	1a40      	subs	r0, r0, r1
    1a88:	b280      	uxth	r0, r0
      break;
    1a8a:	e7f8      	b.n	1a7e <u8g2_add_vector_x+0x16>

00001a8c <u8g2_font_decode_len>:
{
    1a8c:	b5f0      	push	{r4, r5, r6, r7, lr}
    1a8e:	46de      	mov	lr, fp
    1a90:	4657      	mov	r7, sl
    1a92:	464e      	mov	r6, r9
    1a94:	4645      	mov	r5, r8
    1a96:	b5e0      	push	{r5, r6, r7, lr}
    1a98:	b089      	sub	sp, #36	; 0x24
    1a9a:	000d      	movs	r5, r1
    1a9c:	4693      	mov	fp, r2
  lx = decode->x;
    1a9e:	0003      	movs	r3, r0
    1aa0:	3360      	adds	r3, #96	; 0x60
    1aa2:	7a1a      	ldrb	r2, [r3, #8]
    1aa4:	4692      	mov	sl, r2
  ly = decode->y;
    1aa6:	7a5b      	ldrb	r3, [r3, #9]
    1aa8:	4698      	mov	r8, r3
    1aaa:	4646      	mov	r6, r8
    1aac:	46d9      	mov	r9, fp
    1aae:	4680      	mov	r8, r0
    1ab0:	e029      	b.n	1b06 <u8g2_font_decode_len+0x7a>
      current = cnt;
    1ab2:	9506      	str	r5, [sp, #24]
    x = decode->target_x;
    1ab4:	4643      	mov	r3, r8
    1ab6:	3360      	adds	r3, #96	; 0x60
    1ab8:	8898      	ldrh	r0, [r3, #4]
    y = decode->target_y;
    1aba:	88da      	ldrh	r2, [r3, #6]
    1abc:	4693      	mov	fp, r2
    x = u8g2_add_vector_x(x, lx, ly, decode->dir);
    1abe:	4652      	mov	r2, sl
    1ac0:	4669      	mov	r1, sp
    1ac2:	730a      	strb	r2, [r1, #12]
    1ac4:	270c      	movs	r7, #12
    1ac6:	57cf      	ldrsb	r7, [r1, r7]
    1ac8:	b272      	sxtb	r2, r6
    1aca:	7c1b      	ldrb	r3, [r3, #16]
    1acc:	9303      	str	r3, [sp, #12]
    1ace:	9204      	str	r2, [sp, #16]
    1ad0:	9705      	str	r7, [sp, #20]
    1ad2:	0039      	movs	r1, r7
    1ad4:	4f28      	ldr	r7, [pc, #160]	; (1b78 <u8g2_font_decode_len+0xec>)
    1ad6:	47b8      	blx	r7
    1ad8:	9007      	str	r0, [sp, #28]
    y = u8g2_add_vector_y(y, lx, ly, decode->dir);
    1ada:	9b03      	ldr	r3, [sp, #12]
    1adc:	9a04      	ldr	r2, [sp, #16]
    1ade:	9905      	ldr	r1, [sp, #20]
    1ae0:	4658      	mov	r0, fp
    1ae2:	4f26      	ldr	r7, [pc, #152]	; (1b7c <u8g2_font_decode_len+0xf0>)
    1ae4:	47b8      	blx	r7
    if ( is_foreground )
    1ae6:	464b      	mov	r3, r9
    1ae8:	2b00      	cmp	r3, #0
    1aea:	d116      	bne.n	1b1a <u8g2_font_decode_len+0x8e>
    else if ( decode->is_transparent == 0 )    
    1aec:	4643      	mov	r3, r8
    1aee:	3360      	adds	r3, #96	; 0x60
    1af0:	7b5b      	ldrb	r3, [r3, #13]
    1af2:	2b00      	cmp	r3, #0
    1af4:	d021      	beq.n	1b3a <u8g2_font_decode_len+0xae>
    if ( cnt < rem )
    1af6:	42a5      	cmp	r5, r4
    1af8:	d32f      	bcc.n	1b5a <u8g2_font_decode_len+0xce>
    cnt -= rem;
    1afa:	1b2d      	subs	r5, r5, r4
    1afc:	b2ed      	uxtb	r5, r5
    ly++;
    1afe:	3601      	adds	r6, #1
    1b00:	b2f6      	uxtb	r6, r6
    lx = 0;
    1b02:	2300      	movs	r3, #0
    1b04:	469a      	mov	sl, r3
    rem = decode->glyph_width;
    1b06:	4643      	mov	r3, r8
    1b08:	3360      	adds	r3, #96	; 0x60
    1b0a:	7a9c      	ldrb	r4, [r3, #10]
    rem -= lx;
    1b0c:	4653      	mov	r3, sl
    1b0e:	1ae4      	subs	r4, r4, r3
    1b10:	b2e4      	uxtb	r4, r4
    if ( cnt < rem )
    1b12:	42a5      	cmp	r5, r4
    1b14:	d3cd      	bcc.n	1ab2 <u8g2_font_decode_len+0x26>
    current = rem;
    1b16:	9406      	str	r4, [sp, #24]
    1b18:	e7cc      	b.n	1ab4 <u8g2_font_decode_len+0x28>
      u8g2->draw_color = decode->fg_color;			/* draw_color will be restored later */
    1b1a:	4643      	mov	r3, r8
    1b1c:	3360      	adds	r3, #96	; 0x60
    1b1e:	7b9a      	ldrb	r2, [r3, #14]
    1b20:	2392      	movs	r3, #146	; 0x92
    1b22:	4641      	mov	r1, r8
    1b24:	54ca      	strb	r2, [r1, r3]
      u8g2_DrawHVLine(u8g2, 
    1b26:	466b      	mov	r3, sp
    1b28:	8b1b      	ldrh	r3, [r3, #24]
    1b2a:	9a03      	ldr	r2, [sp, #12]
    1b2c:	9200      	str	r2, [sp, #0]
    1b2e:	0002      	movs	r2, r0
    1b30:	9907      	ldr	r1, [sp, #28]
    1b32:	4640      	mov	r0, r8
    1b34:	4f12      	ldr	r7, [pc, #72]	; (1b80 <u8g2_font_decode_len+0xf4>)
    1b36:	47b8      	blx	r7
    1b38:	e7dd      	b.n	1af6 <u8g2_font_decode_len+0x6a>
      u8g2->draw_color = decode->bg_color;			/* draw_color will be restored later */
    1b3a:	4643      	mov	r3, r8
    1b3c:	3360      	adds	r3, #96	; 0x60
    1b3e:	7bda      	ldrb	r2, [r3, #15]
    1b40:	2392      	movs	r3, #146	; 0x92
    1b42:	4641      	mov	r1, r8
    1b44:	54ca      	strb	r2, [r1, r3]
      u8g2_DrawHVLine(u8g2, 
    1b46:	466b      	mov	r3, sp
    1b48:	8b1b      	ldrh	r3, [r3, #24]
    1b4a:	9a03      	ldr	r2, [sp, #12]
    1b4c:	9200      	str	r2, [sp, #0]
    1b4e:	0002      	movs	r2, r0
    1b50:	9907      	ldr	r1, [sp, #28]
    1b52:	4640      	mov	r0, r8
    1b54:	4f0a      	ldr	r7, [pc, #40]	; (1b80 <u8g2_font_decode_len+0xf4>)
    1b56:	47b8      	blx	r7
    1b58:	e7cd      	b.n	1af6 <u8g2_font_decode_len+0x6a>
  lx += cnt;
    1b5a:	002a      	movs	r2, r5
    1b5c:	4452      	add	r2, sl
  decode->x = lx;
    1b5e:	4643      	mov	r3, r8
    1b60:	3360      	adds	r3, #96	; 0x60
    1b62:	721a      	strb	r2, [r3, #8]
  decode->y = ly;  
    1b64:	466a      	mov	r2, sp
    1b66:	7c12      	ldrb	r2, [r2, #16]
    1b68:	725a      	strb	r2, [r3, #9]
}
    1b6a:	b009      	add	sp, #36	; 0x24
    1b6c:	bc3c      	pop	{r2, r3, r4, r5}
    1b6e:	4690      	mov	r8, r2
    1b70:	4699      	mov	r9, r3
    1b72:	46a2      	mov	sl, r4
    1b74:	46ab      	mov	fp, r5
    1b76:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1b78:	00001a69 	.word	0x00001a69
    1b7c:	00001a45 	.word	0x00001a45
    1b80:	00001fa5 	.word	0x00001fa5

00001b84 <u8g2_font_decode_glyph>:
{
    1b84:	b5f0      	push	{r4, r5, r6, r7, lr}
    1b86:	46de      	mov	lr, fp
    1b88:	4657      	mov	r7, sl
    1b8a:	464e      	mov	r6, r9
    1b8c:	4645      	mov	r5, r8
    1b8e:	b5e0      	push	{r5, r6, r7, lr}
    1b90:	b087      	sub	sp, #28
    1b92:	0004      	movs	r4, r0
  u8g2_font_decode_t *decode = &(u8g2->font_decode);
    1b94:	0007      	movs	r7, r0
    1b96:	3760      	adds	r7, #96	; 0x60
  u8g2_font_setup_decode(u8g2, glyph_data);     /* set values in u8g2->font_decode data structure */
    1b98:	4b57      	ldr	r3, [pc, #348]	; (1cf8 <u8g2_font_decode_glyph+0x174>)
    1b9a:	4798      	blx	r3
  h = u8g2->font_decode.glyph_height;
    1b9c:	236b      	movs	r3, #107	; 0x6b
    1b9e:	56e3      	ldrsb	r3, [r4, r3]
    1ba0:	4698      	mov	r8, r3
  x = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_x);
    1ba2:	237a      	movs	r3, #122	; 0x7a
    1ba4:	5ce1      	ldrb	r1, [r4, r3]
    1ba6:	0038      	movs	r0, r7
    1ba8:	4e54      	ldr	r6, [pc, #336]	; (1cfc <u8g2_font_decode_glyph+0x178>)
    1baa:	47b0      	blx	r6
    1bac:	9002      	str	r0, [sp, #8]
  y = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_y);
    1bae:	237b      	movs	r3, #123	; 0x7b
    1bb0:	5ce1      	ldrb	r1, [r4, r3]
    1bb2:	0038      	movs	r0, r7
    1bb4:	47b0      	blx	r6
    1bb6:	0005      	movs	r5, r0
  d = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_delta_x);
    1bb8:	237c      	movs	r3, #124	; 0x7c
    1bba:	5ce1      	ldrb	r1, [r4, r3]
    1bbc:	0038      	movs	r0, r7
    1bbe:	47b0      	blx	r6
    1bc0:	9003      	str	r0, [sp, #12]
  if ( decode->glyph_width > 0 )
    1bc2:	230a      	movs	r3, #10
    1bc4:	56fb      	ldrsb	r3, [r7, r3]
    1bc6:	469a      	mov	sl, r3
    1bc8:	2b00      	cmp	r3, #0
    1bca:	dd5a      	ble.n	1c82 <u8g2_font_decode_glyph+0xfe>
    decode->target_x = u8g2_add_vector_x(decode->target_x, x, -(h+y), decode->dir);
    1bcc:	4445      	add	r5, r8
    1bce:	b2ed      	uxtb	r5, r5
    1bd0:	426d      	negs	r5, r5
    1bd2:	b26b      	sxtb	r3, r5
    1bd4:	001a      	movs	r2, r3
    1bd6:	7c3e      	ldrb	r6, [r7, #16]
    1bd8:	88b8      	ldrh	r0, [r7, #4]
    1bda:	0033      	movs	r3, r6
    1bdc:	9205      	str	r2, [sp, #20]
    1bde:	9902      	ldr	r1, [sp, #8]
    1be0:	4d47      	ldr	r5, [pc, #284]	; (1d00 <u8g2_font_decode_glyph+0x17c>)
    1be2:	47a8      	blx	r5
    1be4:	4683      	mov	fp, r0
    1be6:	9004      	str	r0, [sp, #16]
    1be8:	003b      	movs	r3, r7
    1bea:	8098      	strh	r0, [r3, #4]
    decode->target_y = u8g2_add_vector_y(decode->target_y, x, -(h+y), decode->dir);
    1bec:	88f8      	ldrh	r0, [r7, #6]
    1bee:	0033      	movs	r3, r6
    1bf0:	9a05      	ldr	r2, [sp, #20]
    1bf2:	9902      	ldr	r1, [sp, #8]
    1bf4:	4d43      	ldr	r5, [pc, #268]	; (1d04 <u8g2_font_decode_glyph+0x180>)
    1bf6:	47a8      	blx	r5
    1bf8:	0002      	movs	r2, r0
    1bfa:	80f8      	strh	r0, [r7, #6]
      switch(decode->dir)
    1bfc:	2e01      	cmp	r6, #1
    1bfe:	d048      	beq.n	1c92 <u8g2_font_decode_glyph+0x10e>
    1c00:	2e00      	cmp	r6, #0
    1c02:	d005      	beq.n	1c10 <u8g2_font_decode_glyph+0x8c>
    1c04:	2e02      	cmp	r6, #2
    1c06:	d054      	beq.n	1cb2 <u8g2_font_decode_glyph+0x12e>
    1c08:	2e03      	cmp	r6, #3
    1c0a:	d066      	beq.n	1cda <u8g2_font_decode_glyph+0x156>
      x1 = x0;
    1c0c:	465b      	mov	r3, fp
    1c0e:	e007      	b.n	1c20 <u8g2_font_decode_glyph+0x9c>
	    x1 += decode->glyph_width;
    1c10:	4653      	mov	r3, sl
    1c12:	4669      	mov	r1, sp
    1c14:	810b      	strh	r3, [r1, #8]
    1c16:	890b      	ldrh	r3, [r1, #8]
    1c18:	445b      	add	r3, fp
    1c1a:	b29b      	uxth	r3, r3
	    y1 += h;
    1c1c:	4440      	add	r0, r8
    1c1e:	b280      	uxth	r0, r0
      if ( u8g2_IsIntersection(u8g2, x0, y0, x1, y1) == 0 ) 
    1c20:	9000      	str	r0, [sp, #0]
    1c22:	9904      	ldr	r1, [sp, #16]
    1c24:	0020      	movs	r0, r4
    1c26:	4d38      	ldr	r5, [pc, #224]	; (1d08 <u8g2_font_decode_glyph+0x184>)
    1c28:	47a8      	blx	r5
    1c2a:	2800      	cmp	r0, #0
    1c2c:	d029      	beq.n	1c82 <u8g2_font_decode_glyph+0xfe>
    decode->x = 0;
    1c2e:	0023      	movs	r3, r4
    1c30:	3360      	adds	r3, #96	; 0x60
    1c32:	2200      	movs	r2, #0
    1c34:	721a      	strb	r2, [r3, #8]
    decode->y = 0;
    1c36:	725a      	strb	r2, [r3, #9]
      a = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_0);
    1c38:	2376      	movs	r3, #118	; 0x76
    1c3a:	5ce1      	ldrb	r1, [r4, r3]
    1c3c:	0038      	movs	r0, r7
    1c3e:	4d33      	ldr	r5, [pc, #204]	; (1d0c <u8g2_font_decode_glyph+0x188>)
    1c40:	47a8      	blx	r5
    1c42:	0006      	movs	r6, r0
      b = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_1);
    1c44:	2377      	movs	r3, #119	; 0x77
    1c46:	5ce1      	ldrb	r1, [r4, r3]
    1c48:	0038      	movs	r0, r7
    1c4a:	47a8      	blx	r5
    1c4c:	9002      	str	r0, [sp, #8]
	u8g2_font_decode_len(u8g2, a, 0);
    1c4e:	2200      	movs	r2, #0
    1c50:	0031      	movs	r1, r6
    1c52:	0020      	movs	r0, r4
    1c54:	4d2e      	ldr	r5, [pc, #184]	; (1d10 <u8g2_font_decode_glyph+0x18c>)
    1c56:	47a8      	blx	r5
	u8g2_font_decode_len(u8g2, b, 1);
    1c58:	2201      	movs	r2, #1
    1c5a:	9902      	ldr	r1, [sp, #8]
    1c5c:	0020      	movs	r0, r4
    1c5e:	47a8      	blx	r5
      } while( u8g2_font_decode_get_unsigned_bits(decode, 1) != 0 );
    1c60:	2101      	movs	r1, #1
    1c62:	0038      	movs	r0, r7
    1c64:	4b29      	ldr	r3, [pc, #164]	; (1d0c <u8g2_font_decode_glyph+0x188>)
    1c66:	4798      	blx	r3
    1c68:	2800      	cmp	r0, #0
    1c6a:	d1f0      	bne.n	1c4e <u8g2_font_decode_glyph+0xca>
      if ( decode->y >= h )
    1c6c:	0023      	movs	r3, r4
    1c6e:	3360      	adds	r3, #96	; 0x60
    1c70:	7a5b      	ldrb	r3, [r3, #9]
    1c72:	b25b      	sxtb	r3, r3
    1c74:	4598      	cmp	r8, r3
    1c76:	dcdf      	bgt.n	1c38 <u8g2_font_decode_glyph+0xb4>
    u8g2->draw_color = decode->fg_color;
    1c78:	0023      	movs	r3, r4
    1c7a:	3360      	adds	r3, #96	; 0x60
    1c7c:	7b9a      	ldrb	r2, [r3, #14]
    1c7e:	2392      	movs	r3, #146	; 0x92
    1c80:	54e2      	strb	r2, [r4, r3]
}
    1c82:	9803      	ldr	r0, [sp, #12]
    1c84:	b007      	add	sp, #28
    1c86:	bc3c      	pop	{r2, r3, r4, r5}
    1c88:	4690      	mov	r8, r2
    1c8a:	4699      	mov	r9, r3
    1c8c:	46a2      	mov	sl, r4
    1c8e:	46ab      	mov	fp, r5
    1c90:	bdf0      	pop	{r4, r5, r6, r7, pc}
	    x0 -= h;
    1c92:	465b      	mov	r3, fp
    1c94:	4641      	mov	r1, r8
    1c96:	1a59      	subs	r1, r3, r1
    1c98:	b289      	uxth	r1, r1
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    1c9a:	3101      	adds	r1, #1
	    x1++;
    1c9c:	3301      	adds	r3, #1
    1c9e:	b29b      	uxth	r3, r3
	    y1 += decode->glyph_width;
    1ca0:	4655      	mov	r5, sl
    1ca2:	466e      	mov	r6, sp
    1ca4:	8135      	strh	r5, [r6, #8]
    1ca6:	8936      	ldrh	r6, [r6, #8]
    1ca8:	1980      	adds	r0, r0, r6
    1caa:	b280      	uxth	r0, r0
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    1cac:	b289      	uxth	r1, r1
    1cae:	9104      	str	r1, [sp, #16]
	    break;
    1cb0:	e7b6      	b.n	1c20 <u8g2_font_decode_glyph+0x9c>
	    x0 -= decode->glyph_width;
    1cb2:	4653      	mov	r3, sl
    1cb4:	466a      	mov	r2, sp
    1cb6:	8113      	strh	r3, [r2, #8]
    1cb8:	8911      	ldrh	r1, [r2, #8]
    1cba:	465b      	mov	r3, fp
    1cbc:	1a59      	subs	r1, r3, r1
    1cbe:	b289      	uxth	r1, r1
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    1cc0:	3101      	adds	r1, #1
	    x1++;
    1cc2:	3301      	adds	r3, #1
    1cc4:	b29b      	uxth	r3, r3
	    y0 -= h;
    1cc6:	4642      	mov	r2, r8
    1cc8:	1a82      	subs	r2, r0, r2
    1cca:	b292      	uxth	r2, r2
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    1ccc:	3201      	adds	r2, #1
	    y1++;
    1cce:	3001      	adds	r0, #1
    1cd0:	b280      	uxth	r0, r0
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    1cd2:	b292      	uxth	r2, r2
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    1cd4:	b289      	uxth	r1, r1
    1cd6:	9104      	str	r1, [sp, #16]
	    break;	  
    1cd8:	e7a2      	b.n	1c20 <u8g2_font_decode_glyph+0x9c>
	    x1 += h;
    1cda:	465b      	mov	r3, fp
    1cdc:	4443      	add	r3, r8
    1cde:	b29b      	uxth	r3, r3
	    y0 -= decode->glyph_width;
    1ce0:	4652      	mov	r2, sl
    1ce2:	4669      	mov	r1, sp
    1ce4:	810a      	strh	r2, [r1, #8]
    1ce6:	890a      	ldrh	r2, [r1, #8]
    1ce8:	1a82      	subs	r2, r0, r2
    1cea:	b292      	uxth	r2, r2
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    1cec:	3201      	adds	r2, #1
	    y1++;
    1cee:	3001      	adds	r0, #1
    1cf0:	b280      	uxth	r0, r0
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    1cf2:	b292      	uxth	r2, r2
	    break;	  
    1cf4:	e794      	b.n	1c20 <u8g2_font_decode_glyph+0x9c>
    1cf6:	46c0      	nop			; (mov r8, r8)
    1cf8:	000019f1 	.word	0x000019f1
    1cfc:	00001a29 	.word	0x00001a29
    1d00:	00001a69 	.word	0x00001a69
    1d04:	00001a45 	.word	0x00001a45
    1d08:	000020dd 	.word	0x000020dd
    1d0c:	000019b5 	.word	0x000019b5
    1d10:	00001a8d 	.word	0x00001a8d

00001d14 <u8g2_font_get_glyph_data>:
{
    1d14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1d16:	000e      	movs	r6, r1
  font += U8G2_FONT_DATA_STRUCT_SIZE;
    1d18:	6d84      	ldr	r4, [r0, #88]	; 0x58
    1d1a:	3417      	adds	r4, #23
  if ( encoding <= 255 )
    1d1c:	29ff      	cmp	r1, #255	; 0xff
    1d1e:	d814      	bhi.n	1d4a <u8g2_font_get_glyph_data+0x36>
    if ( encoding >= 'a' )
    1d20:	2960      	cmp	r1, #96	; 0x60
    1d22:	d90a      	bls.n	1d3a <u8g2_font_get_glyph_data+0x26>
      font += u8g2->font_info.start_pos_lower_a;
    1d24:	2388      	movs	r3, #136	; 0x88
    1d26:	5ac3      	ldrh	r3, [r0, r3]
    1d28:	18e4      	adds	r4, r4, r3
      if ( u8x8_pgm_read( font + 1 ) == 0 )
    1d2a:	7863      	ldrb	r3, [r4, #1]
    1d2c:	2b00      	cmp	r3, #0
    1d2e:	d027      	beq.n	1d80 <u8g2_font_get_glyph_data+0x6c>
      if ( u8x8_pgm_read( font ) == encoding )
    1d30:	7822      	ldrb	r2, [r4, #0]
    1d32:	4296      	cmp	r6, r2
    1d34:	d007      	beq.n	1d46 <u8g2_font_get_glyph_data+0x32>
      font += u8x8_pgm_read( font + 1 );
    1d36:	18e4      	adds	r4, r4, r3
      if ( u8x8_pgm_read( font + 1 ) == 0 )
    1d38:	e7f7      	b.n	1d2a <u8g2_font_get_glyph_data+0x16>
    else if ( encoding >= 'A' )
    1d3a:	2940      	cmp	r1, #64	; 0x40
    1d3c:	d9f5      	bls.n	1d2a <u8g2_font_get_glyph_data+0x16>
      font += u8g2->font_info.start_pos_upper_A;
    1d3e:	2386      	movs	r3, #134	; 0x86
    1d40:	5ac3      	ldrh	r3, [r0, r3]
    1d42:	18e4      	adds	r4, r4, r3
    1d44:	e7f1      	b.n	1d2a <u8g2_font_get_glyph_data+0x16>
	return font+2;	/* skip encoding and glyph size */
    1d46:	1ca0      	adds	r0, r4, #2
    1d48:	e01b      	b.n	1d82 <u8g2_font_get_glyph_data+0x6e>
    font += u8g2->font_info.start_pos_unicode;
    1d4a:	238a      	movs	r3, #138	; 0x8a
    1d4c:	5ac0      	ldrh	r0, [r0, r3]
    1d4e:	1824      	adds	r4, r4, r0
    unicode_lookup_table = font; 
    1d50:	0025      	movs	r5, r4
      font += u8g2_font_get_word(unicode_lookup_table, 0);
    1d52:	2100      	movs	r1, #0
    1d54:	0028      	movs	r0, r5
    1d56:	4f0c      	ldr	r7, [pc, #48]	; (1d88 <u8g2_font_get_glyph_data+0x74>)
    1d58:	47b8      	blx	r7
    1d5a:	1824      	adds	r4, r4, r0
      e = u8g2_font_get_word(unicode_lookup_table, 2);
    1d5c:	2102      	movs	r1, #2
    1d5e:	0028      	movs	r0, r5
    1d60:	47b8      	blx	r7
      unicode_lookup_table+=4;
    1d62:	3504      	adds	r5, #4
    } while( e < encoding );
    1d64:	4286      	cmp	r6, r0
    1d66:	d8f4      	bhi.n	1d52 <u8g2_font_get_glyph_data+0x3e>
      e = u8x8_pgm_read( font );
    1d68:	7823      	ldrb	r3, [r4, #0]
      e <<= 8;
    1d6a:	021b      	lsls	r3, r3, #8
      e |= u8x8_pgm_read( font + 1 );
    1d6c:	7862      	ldrb	r2, [r4, #1]
    1d6e:	4313      	orrs	r3, r2
      if ( e == 0 )
    1d70:	d008      	beq.n	1d84 <u8g2_font_get_glyph_data+0x70>
      if ( e == encoding )
    1d72:	429e      	cmp	r6, r3
    1d74:	d002      	beq.n	1d7c <u8g2_font_get_glyph_data+0x68>
      font += u8x8_pgm_read( font + 2 );
    1d76:	78a3      	ldrb	r3, [r4, #2]
    1d78:	18e4      	adds	r4, r4, r3
      e = u8x8_pgm_read( font );
    1d7a:	e7f5      	b.n	1d68 <u8g2_font_get_glyph_data+0x54>
	return font+3;	/* skip encoding and glyph size */
    1d7c:	1ce0      	adds	r0, r4, #3
    1d7e:	e000      	b.n	1d82 <u8g2_font_get_glyph_data+0x6e>
  return NULL;
    1d80:	2000      	movs	r0, #0
}
    1d82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  return NULL;
    1d84:	2000      	movs	r0, #0
    1d86:	e7fc      	b.n	1d82 <u8g2_font_get_glyph_data+0x6e>
    1d88:	000018ed 	.word	0x000018ed

00001d8c <u8g2_font_draw_glyph>:
{
    1d8c:	b510      	push	{r4, lr}
    1d8e:	0004      	movs	r4, r0
  u8g2->font_decode.target_x = x;
    1d90:	2064      	movs	r0, #100	; 0x64
    1d92:	5221      	strh	r1, [r4, r0]
  u8g2->font_decode.target_y = y;
    1d94:	2166      	movs	r1, #102	; 0x66
    1d96:	5262      	strh	r2, [r4, r1]
  const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, encoding);
    1d98:	0019      	movs	r1, r3
    1d9a:	0020      	movs	r0, r4
    1d9c:	4b05      	ldr	r3, [pc, #20]	; (1db4 <u8g2_font_draw_glyph+0x28>)
    1d9e:	4798      	blx	r3
  if ( glyph_data != NULL )
    1da0:	2800      	cmp	r0, #0
    1da2:	d005      	beq.n	1db0 <u8g2_font_draw_glyph+0x24>
    dx = u8g2_font_decode_glyph(u8g2, glyph_data);
    1da4:	0001      	movs	r1, r0
    1da6:	0020      	movs	r0, r4
    1da8:	4b03      	ldr	r3, [pc, #12]	; (1db8 <u8g2_font_draw_glyph+0x2c>)
    1daa:	4798      	blx	r3
    1dac:	b280      	uxth	r0, r0
}
    1dae:	bd10      	pop	{r4, pc}
  u8g2_uint_t dx = 0;
    1db0:	2000      	movs	r0, #0
    1db2:	e7fc      	b.n	1dae <u8g2_font_draw_glyph+0x22>
    1db4:	00001d15 	.word	0x00001d15
    1db8:	00001b85 	.word	0x00001b85

00001dbc <u8g2_DrawGlyph>:
{
    1dbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1dbe:	0004      	movs	r4, r0
    1dc0:	000d      	movs	r5, r1
    1dc2:	0016      	movs	r6, r2
    1dc4:	001f      	movs	r7, r3
  switch(u8g2->font_decode.dir)
    1dc6:	2370      	movs	r3, #112	; 0x70
    1dc8:	5cc3      	ldrb	r3, [r0, r3]
    1dca:	2b01      	cmp	r3, #1
    1dcc:	d011      	beq.n	1df2 <u8g2_DrawGlyph+0x36>
    1dce:	2b00      	cmp	r3, #0
    1dd0:	d00a      	beq.n	1de8 <u8g2_DrawGlyph+0x2c>
    1dd2:	2b02      	cmp	r3, #2
    1dd4:	d012      	beq.n	1dfc <u8g2_DrawGlyph+0x40>
    1dd6:	2b03      	cmp	r3, #3
    1dd8:	d015      	beq.n	1e06 <u8g2_DrawGlyph+0x4a>
  return u8g2_font_draw_glyph(u8g2, x, y, encoding);
    1dda:	003b      	movs	r3, r7
    1ddc:	0032      	movs	r2, r6
    1dde:	0029      	movs	r1, r5
    1de0:	0020      	movs	r0, r4
    1de2:	4c0b      	ldr	r4, [pc, #44]	; (1e10 <u8g2_DrawGlyph+0x54>)
    1de4:	47a0      	blx	r4
}
    1de6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      y += u8g2->font_calc_vref(u8g2);
    1de8:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
    1dea:	4798      	blx	r3
    1dec:	1836      	adds	r6, r6, r0
    1dee:	b2b6      	uxth	r6, r6
      break;
    1df0:	e7f3      	b.n	1dda <u8g2_DrawGlyph+0x1e>
      x -= u8g2->font_calc_vref(u8g2);
    1df2:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
    1df4:	4798      	blx	r3
    1df6:	1a2d      	subs	r5, r5, r0
    1df8:	b2ad      	uxth	r5, r5
      break;
    1dfa:	e7ee      	b.n	1dda <u8g2_DrawGlyph+0x1e>
      y -= u8g2->font_calc_vref(u8g2);
    1dfc:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
    1dfe:	4798      	blx	r3
    1e00:	1a36      	subs	r6, r6, r0
    1e02:	b2b6      	uxth	r6, r6
      break;
    1e04:	e7e9      	b.n	1dda <u8g2_DrawGlyph+0x1e>
      x += u8g2->font_calc_vref(u8g2);
    1e06:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
    1e08:	4798      	blx	r3
    1e0a:	182d      	adds	r5, r5, r0
    1e0c:	b2ad      	uxth	r5, r5
      break;
    1e0e:	e7e4      	b.n	1dda <u8g2_DrawGlyph+0x1e>
    1e10:	00001d8d 	.word	0x00001d8d

00001e14 <u8g2_draw_string>:
{
    1e14:	b5f0      	push	{r4, r5, r6, r7, lr}
    1e16:	46ce      	mov	lr, r9
    1e18:	4647      	mov	r7, r8
    1e1a:	b580      	push	{r7, lr}
    1e1c:	b083      	sub	sp, #12
    1e1e:	0004      	movs	r4, r0
    1e20:	000f      	movs	r7, r1
    1e22:	9201      	str	r2, [sp, #4]
    1e24:	001d      	movs	r5, r3
  u8x8_utf8_init(u8g2_GetU8x8(u8g2));
    1e26:	4b1c      	ldr	r3, [pc, #112]	; (1e98 <u8g2_draw_string+0x84>)
    1e28:	4798      	blx	r3
  sum = 0;
    1e2a:	2300      	movs	r3, #0
    1e2c:	4698      	mov	r8, r3
    1e2e:	e004      	b.n	1e3a <u8g2_draw_string+0x26>
	  x += delta;
    1e30:	183f      	adds	r7, r7, r0
    1e32:	b2bf      	uxth	r7, r7
      sum += delta;    
    1e34:	4440      	add	r0, r8
    1e36:	b283      	uxth	r3, r0
    1e38:	4698      	mov	r8, r3
    e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
    1e3a:	7829      	ldrb	r1, [r5, #0]
    1e3c:	0020      	movs	r0, r4
    1e3e:	6863      	ldr	r3, [r4, #4]
    1e40:	4798      	blx	r3
    if ( e == 0x0ffff )
    1e42:	4b16      	ldr	r3, [pc, #88]	; (1e9c <u8g2_draw_string+0x88>)
    1e44:	4298      	cmp	r0, r3
    1e46:	d020      	beq.n	1e8a <u8g2_draw_string+0x76>
    str++;
    1e48:	3501      	adds	r5, #1
    if ( e != 0x0fffe )
    1e4a:	4b15      	ldr	r3, [pc, #84]	; (1ea0 <u8g2_draw_string+0x8c>)
    1e4c:	4298      	cmp	r0, r3
    1e4e:	d0f4      	beq.n	1e3a <u8g2_draw_string+0x26>
      delta = u8g2_DrawGlyph(u8g2, x, y, e);
    1e50:	0003      	movs	r3, r0
    1e52:	9a01      	ldr	r2, [sp, #4]
    1e54:	0039      	movs	r1, r7
    1e56:	0020      	movs	r0, r4
    1e58:	4e12      	ldr	r6, [pc, #72]	; (1ea4 <u8g2_draw_string+0x90>)
    1e5a:	47b0      	blx	r6
      switch(u8g2->font_decode.dir)
    1e5c:	2370      	movs	r3, #112	; 0x70
    1e5e:	5ce3      	ldrb	r3, [r4, r3]
    1e60:	2b01      	cmp	r3, #1
    1e62:	d00a      	beq.n	1e7a <u8g2_draw_string+0x66>
    1e64:	2b00      	cmp	r3, #0
    1e66:	d0e3      	beq.n	1e30 <u8g2_draw_string+0x1c>
    1e68:	2b02      	cmp	r3, #2
    1e6a:	d00b      	beq.n	1e84 <u8g2_draw_string+0x70>
    1e6c:	2b03      	cmp	r3, #3
    1e6e:	d1e1      	bne.n	1e34 <u8g2_draw_string+0x20>
	  y -= delta;
    1e70:	9b01      	ldr	r3, [sp, #4]
    1e72:	1a1e      	subs	r6, r3, r0
    1e74:	b2b3      	uxth	r3, r6
    1e76:	9301      	str	r3, [sp, #4]
	  break;
    1e78:	e7dc      	b.n	1e34 <u8g2_draw_string+0x20>
	  y += delta;
    1e7a:	9b01      	ldr	r3, [sp, #4]
    1e7c:	181e      	adds	r6, r3, r0
    1e7e:	b2b3      	uxth	r3, r6
    1e80:	9301      	str	r3, [sp, #4]
	  break;
    1e82:	e7d7      	b.n	1e34 <u8g2_draw_string+0x20>
	  x -= delta;
    1e84:	1a3f      	subs	r7, r7, r0
    1e86:	b2bf      	uxth	r7, r7
	  break;
    1e88:	e7d4      	b.n	1e34 <u8g2_draw_string+0x20>
}
    1e8a:	4640      	mov	r0, r8
    1e8c:	b003      	add	sp, #12
    1e8e:	bc0c      	pop	{r2, r3}
    1e90:	4690      	mov	r8, r2
    1e92:	4699      	mov	r9, r3
    1e94:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1e96:	46c0      	nop			; (mov r8, r8)
    1e98:	00002429 	.word	0x00002429
    1e9c:	0000ffff 	.word	0x0000ffff
    1ea0:	0000fffe 	.word	0x0000fffe
    1ea4:	00001dbd 	.word	0x00001dbd

00001ea8 <u8g2_DrawStr>:
{
    1ea8:	b510      	push	{r4, lr}
  u8g2->u8x8.next_cb = u8x8_ascii_next;
    1eaa:	4c02      	ldr	r4, [pc, #8]	; (1eb4 <u8g2_DrawStr+0xc>)
    1eac:	6044      	str	r4, [r0, #4]
  return u8g2_draw_string(u8g2, x, y, str);
    1eae:	4c02      	ldr	r4, [pc, #8]	; (1eb8 <u8g2_DrawStr+0x10>)
    1eb0:	47a0      	blx	r4
}
    1eb2:	bd10      	pop	{r4, pc}
    1eb4:	00002411 	.word	0x00002411
    1eb8:	00001e15 	.word	0x00001e15

00001ebc <u8g2_UpdateRefHeight>:
{
    1ebc:	b530      	push	{r4, r5, lr}
  if ( u8g2->font == NULL )
    1ebe:	6d83      	ldr	r3, [r0, #88]	; 0x58
    1ec0:	2b00      	cmp	r3, #0
    1ec2:	d01d      	beq.n	1f00 <u8g2_UpdateRefHeight+0x44>
  u8g2->font_ref_ascent = u8g2->font_info.ascent_A;
    1ec4:	2381      	movs	r3, #129	; 0x81
    1ec6:	56c1      	ldrsb	r1, [r0, r3]
    1ec8:	330d      	adds	r3, #13
    1eca:	54c1      	strb	r1, [r0, r3]
  u8g2->font_ref_descent = u8g2->font_info.descent_g;
    1ecc:	3b0c      	subs	r3, #12
    1ece:	56c2      	ldrsb	r2, [r0, r3]
    1ed0:	330d      	adds	r3, #13
    1ed2:	54c2      	strb	r2, [r0, r3]
  if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_TEXT )
    1ed4:	3b02      	subs	r3, #2
    1ed6:	5cc3      	ldrb	r3, [r0, r3]
    1ed8:	2b00      	cmp	r3, #0
    1eda:	d011      	beq.n	1f00 <u8g2_UpdateRefHeight+0x44>
  else if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_XTEXT )
    1edc:	2b01      	cmp	r3, #1
    1ede:	d010      	beq.n	1f02 <u8g2_UpdateRefHeight+0x46>
    if ( u8g2->font_ref_ascent < u8g2->font_info.max_char_height+u8g2->font_info.y_offset )
    1ee0:	237e      	movs	r3, #126	; 0x7e
    1ee2:	56c3      	ldrsb	r3, [r0, r3]
    1ee4:	2480      	movs	r4, #128	; 0x80
    1ee6:	5704      	ldrsb	r4, [r0, r4]
    1ee8:	191d      	adds	r5, r3, r4
    1eea:	42a9      	cmp	r1, r5
    1eec:	da04      	bge.n	1ef8 <u8g2_UpdateRefHeight+0x3c>
      u8g2->font_ref_ascent = u8g2->font_info.max_char_height+u8g2->font_info.y_offset;
    1eee:	b2db      	uxtb	r3, r3
    1ef0:	b2e1      	uxtb	r1, r4
    1ef2:	185b      	adds	r3, r3, r1
    1ef4:	218e      	movs	r1, #142	; 0x8e
    1ef6:	5443      	strb	r3, [r0, r1]
    if ( u8g2->font_ref_descent > u8g2->font_info.y_offset )
    1ef8:	42a2      	cmp	r2, r4
    1efa:	dd01      	ble.n	1f00 <u8g2_UpdateRefHeight+0x44>
      u8g2->font_ref_descent = u8g2->font_info.y_offset;
    1efc:	238f      	movs	r3, #143	; 0x8f
    1efe:	54c4      	strb	r4, [r0, r3]
}
    1f00:	bd30      	pop	{r4, r5, pc}
    if ( u8g2->font_ref_ascent < u8g2->font_info.ascent_para )
    1f02:	3382      	adds	r3, #130	; 0x82
    1f04:	56c3      	ldrsb	r3, [r0, r3]
    1f06:	4299      	cmp	r1, r3
    1f08:	da01      	bge.n	1f0e <u8g2_UpdateRefHeight+0x52>
      u8g2->font_ref_ascent = u8g2->font_info.ascent_para;
    1f0a:	218e      	movs	r1, #142	; 0x8e
    1f0c:	5443      	strb	r3, [r0, r1]
    if ( u8g2->font_ref_descent > u8g2->font_info.descent_para )
    1f0e:	2384      	movs	r3, #132	; 0x84
    1f10:	56c3      	ldrsb	r3, [r0, r3]
    1f12:	429a      	cmp	r2, r3
    1f14:	ddf4      	ble.n	1f00 <u8g2_UpdateRefHeight+0x44>
      u8g2->font_ref_descent = u8g2->font_info.descent_para;
    1f16:	228f      	movs	r2, #143	; 0x8f
    1f18:	5483      	strb	r3, [r0, r2]
    1f1a:	e7f1      	b.n	1f00 <u8g2_UpdateRefHeight+0x44>

00001f1c <u8g2_SetFontPosBaseline>:

void u8g2_SetFontPosBaseline(u8g2_t *u8g2)
{
  u8g2->font_calc_vref = u8g2_font_calc_vref_font;
    1f1c:	4b01      	ldr	r3, [pc, #4]	; (1f24 <u8g2_SetFontPosBaseline+0x8>)
    1f1e:	65c3      	str	r3, [r0, #92]	; 0x5c
}
    1f20:	4770      	bx	lr
    1f22:	46c0      	nop			; (mov r8, r8)
    1f24:	000018fb 	.word	0x000018fb

00001f28 <u8g2_SetFont>:
}

/*===============================================*/

void u8g2_SetFont(u8g2_t *u8g2, const uint8_t  *font)
{
    1f28:	b510      	push	{r4, lr}
    1f2a:	0004      	movs	r4, r0
  if ( u8g2->font != font )
    1f2c:	6d83      	ldr	r3, [r0, #88]	; 0x58
    1f2e:	428b      	cmp	r3, r1
    1f30:	d006      	beq.n	1f40 <u8g2_SetFont+0x18>
  {
//#ifdef  __unix__
//	u8g2->last_font_data = NULL;
//	u8g2->last_unicode = 0x0ffff;
//#endif 
    u8g2->font = font;
    1f32:	6581      	str	r1, [r0, #88]	; 0x58
    u8g2_read_font_info(&(u8g2->font_info), font);
    1f34:	3074      	adds	r0, #116	; 0x74
    1f36:	4b03      	ldr	r3, [pc, #12]	; (1f44 <u8g2_SetFont+0x1c>)
    1f38:	4798      	blx	r3
    u8g2_UpdateRefHeight(u8g2);
    1f3a:	0020      	movs	r0, r4
    1f3c:	4b02      	ldr	r3, [pc, #8]	; (1f48 <u8g2_SetFont+0x20>)
    1f3e:	4798      	blx	r3
    /* u8g2_SetFontPosBaseline(u8g2); */ /* removed with issue 195 */
  }
}
    1f40:	bd10      	pop	{r4, pc}
    1f42:	46c0      	nop			; (mov r8, r8)
    1f44:	00001901 	.word	0x00001901
    1f48:	00001ebd 	.word	0x00001ebd

00001f4c <u8g2_clip_intersection2>:
  will return 0 if there is no intersection and if a > b

*/

static uint8_t u8g2_clip_intersection2(u8g2_uint_t *ap, u8g2_uint_t *len, u8g2_uint_t c, u8g2_uint_t d)
{
    1f4c:	b530      	push	{r4, r5, lr}
  u8g2_uint_t a = *ap;
    1f4e:	8805      	ldrh	r5, [r0, #0]
  u8g2_uint_t b;
  b  = a;
  b += *len;
    1f50:	880c      	ldrh	r4, [r1, #0]
    1f52:	192c      	adds	r4, r5, r4
    1f54:	b2a4      	uxth	r4, r4
  /* be removed completly (be aware about memory curruption for wrong */
  /* arguments) or return 0 for a>b (will lead to skipped lines for wrong */
  /* arguments) */  
  
  /* removing the following if clause completly may lead to memory corruption of a>b */
  if ( a > b )
    1f56:	42a5      	cmp	r5, r4
    1f58:	d903      	bls.n	1f62 <u8g2_clip_intersection2+0x16>
  {    
    /* replacing this if with a simple "return 0;" will not handle the case with negative a */    
    if ( a < d )
    1f5a:	429d      	cmp	r5, r3
    1f5c:	d210      	bcs.n	1f80 <u8g2_clip_intersection2+0x34>
    {
      b = d;
      b--;
    1f5e:	1e5c      	subs	r4, r3, #1
    1f60:	b2a4      	uxth	r4, r4
    }
  }
  
  /* from now on, the asumption a <= b is ok */
  
  if ( a >= d )
    1f62:	429d      	cmp	r5, r3
    1f64:	d20e      	bcs.n	1f84 <u8g2_clip_intersection2+0x38>
    return 0;
  if ( b <= c )
    1f66:	4294      	cmp	r4, r2
    1f68:	d90e      	bls.n	1f88 <u8g2_clip_intersection2+0x3c>
    return 0;
  if ( a < c )		
    1f6a:	4295      	cmp	r5, r2
    1f6c:	d300      	bcc.n	1f70 <u8g2_clip_intersection2+0x24>
    1f6e:	002a      	movs	r2, r5
    a = c;
  if ( b > d )
    1f70:	429c      	cmp	r4, r3
    1f72:	d800      	bhi.n	1f76 <u8g2_clip_intersection2+0x2a>
    1f74:	0023      	movs	r3, r4
    b = d;
  
  *ap = a;
    1f76:	8002      	strh	r2, [r0, #0]
  b -= a;
    1f78:	1a9b      	subs	r3, r3, r2
  *len = b;
    1f7a:	800b      	strh	r3, [r1, #0]
  return 1;
    1f7c:	2001      	movs	r0, #1
    1f7e:	e002      	b.n	1f86 <u8g2_clip_intersection2+0x3a>
      a = c;
    1f80:	0015      	movs	r5, r2
    1f82:	e7ee      	b.n	1f62 <u8g2_clip_intersection2+0x16>
    return 0;
    1f84:	2000      	movs	r0, #0
}
    1f86:	bd30      	pop	{r4, r5, pc}
    return 0;
    1f88:	2000      	movs	r0, #0
    1f8a:	e7fc      	b.n	1f86 <u8g2_clip_intersection2+0x3a>

00001f8c <u8g2_draw_hv_line_2dir>:
  This function first adjusts the y position to the local buffer. Then it
  will clip the line and call u8g2_draw_low_level_hv_line()

*/
void u8g2_draw_hv_line_2dir(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    1f8c:	b530      	push	{r4, r5, lr}
    1f8e:	b083      	sub	sp, #12
    1f90:	ac06      	add	r4, sp, #24
    1f92:	7825      	ldrb	r5, [r4, #0]

  /* clipping happens before the display rotation */

  /* transform to pixel buffer coordinates */
  y -= u8g2->pixel_curr_row;
    1f94:	8fc4      	ldrh	r4, [r0, #62]	; 0x3e
    1f96:	1b12      	subs	r2, r2, r4
    1f98:	b292      	uxth	r2, r2
  
  u8g2->ll_hvline(u8g2, x, y, len, dir);
    1f9a:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
    1f9c:	9500      	str	r5, [sp, #0]
    1f9e:	47a0      	blx	r4
}
    1fa0:	b003      	add	sp, #12
    1fa2:	bd30      	pop	{r4, r5, pc}

00001fa4 <u8g2_DrawHVLine>:
  This function should be called by the user.
  
  "dir" may have 4 directions: 0 (left to right), 1, 2, 3 (down up)
*/
void u8g2_DrawHVLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    1fa4:	b570      	push	{r4, r5, r6, lr}
    1fa6:	b084      	sub	sp, #16
    1fa8:	0004      	movs	r4, r0
    1faa:	a808      	add	r0, sp, #32
    1fac:	7805      	ldrb	r5, [r0, #0]
    1fae:	200e      	movs	r0, #14
    1fb0:	4468      	add	r0, sp
    1fb2:	8001      	strh	r1, [r0, #0]
    1fb4:	a903      	add	r1, sp, #12
    1fb6:	800a      	strh	r2, [r1, #0]
    1fb8:	220a      	movs	r2, #10
    1fba:	446a      	add	r2, sp
    1fbc:	8013      	strh	r3, [r2, #0]
  /* Make a call to the callback function (e.g. u8g2_draw_l90_r0). */
  /* The callback may rotate the hv line */
  /* after rotation this will call u8g2_draw_hv_line_4dir() */
  
#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
  if ( u8g2->is_page_clip_window_intersection != 0 )
    1fbe:	238c      	movs	r3, #140	; 0x8c
    1fc0:	5ce3      	ldrb	r3, [r4, r3]
    1fc2:	2b00      	cmp	r3, #0
    1fc4:	d015      	beq.n	1ff2 <u8g2_DrawHVLine+0x4e>
#endif /* U8G2_WITH_CLIP_WINDOW_SUPPORT */
    if ( len != 0 )
    1fc6:	8813      	ldrh	r3, [r2, #0]
    1fc8:	2b00      	cmp	r3, #0
    1fca:	d012      	beq.n	1ff2 <u8g2_DrawHVLine+0x4e>
    {
    
      /* convert to two directions */    
      if ( len > 1 )
    1fcc:	2b01      	cmp	r3, #1
    1fce:	d903      	bls.n	1fd8 <u8g2_DrawHVLine+0x34>
      {
	if ( dir == 2 )
    1fd0:	2d02      	cmp	r5, #2
    1fd2:	d010      	beq.n	1ff6 <u8g2_DrawHVLine+0x52>
	{
	  x -= len;
	  x++;
	}
	else if ( dir == 3 )
    1fd4:	2d03      	cmp	r5, #3
    1fd6:	d014      	beq.n	2002 <u8g2_DrawHVLine+0x5e>
	{
	  y -= len;
	  y++;
	}
      }
      dir &= 1;  
    1fd8:	2301      	movs	r3, #1
    1fda:	401d      	ands	r5, r3
      
      /* clip against the user window */
      if ( dir == 0 )
    1fdc:	d132      	bne.n	2044 <u8g2_DrawHVLine+0xa0>
      {
	if ( y < u8g2->user_y0 )
    1fde:	334b      	adds	r3, #75	; 0x4b
    1fe0:	5ae2      	ldrh	r2, [r4, r3]
    1fe2:	ab03      	add	r3, sp, #12
    1fe4:	881b      	ldrh	r3, [r3, #0]
    1fe6:	429a      	cmp	r2, r3
    1fe8:	d803      	bhi.n	1ff2 <u8g2_DrawHVLine+0x4e>
	  return;
	if ( y >= u8g2->user_y1 )
    1fea:	224e      	movs	r2, #78	; 0x4e
    1fec:	5aa2      	ldrh	r2, [r4, r2]
    1fee:	4293      	cmp	r3, r2
    1ff0:	d30e      	bcc.n	2010 <u8g2_DrawHVLine+0x6c>
      }
      
      
      u8g2->cb->draw_l90(u8g2, x, y, len, dir);
    }
}
    1ff2:	b004      	add	sp, #16
    1ff4:	bd70      	pop	{r4, r5, r6, pc}
	  x -= len;
    1ff6:	8802      	ldrh	r2, [r0, #0]
    1ff8:	1ad3      	subs	r3, r2, r3
    1ffa:	b29b      	uxth	r3, r3
	  x++;
    1ffc:	3301      	adds	r3, #1
    1ffe:	8003      	strh	r3, [r0, #0]
    2000:	e7ea      	b.n	1fd8 <u8g2_DrawHVLine+0x34>
	  y -= len;
    2002:	a903      	add	r1, sp, #12
    2004:	880a      	ldrh	r2, [r1, #0]
    2006:	1ad3      	subs	r3, r2, r3
    2008:	b29b      	uxth	r3, r3
	  y++;
    200a:	3301      	adds	r3, #1
    200c:	800b      	strh	r3, [r1, #0]
    200e:	e7e3      	b.n	1fd8 <u8g2_DrawHVLine+0x34>
	if ( u8g2_clip_intersection2(&x, &len, u8g2->user_x0, u8g2->user_x1) == 0 )
    2010:	234a      	movs	r3, #74	; 0x4a
    2012:	5ae3      	ldrh	r3, [r4, r3]
    2014:	2248      	movs	r2, #72	; 0x48
    2016:	5aa2      	ldrh	r2, [r4, r2]
    2018:	210a      	movs	r1, #10
    201a:	4469      	add	r1, sp
    201c:	200e      	movs	r0, #14
    201e:	4468      	add	r0, sp
    2020:	4e14      	ldr	r6, [pc, #80]	; (2074 <u8g2_DrawHVLine+0xd0>)
    2022:	47b0      	blx	r6
    2024:	2800      	cmp	r0, #0
    2026:	d0e4      	beq.n	1ff2 <u8g2_DrawHVLine+0x4e>
      u8g2->cb->draw_l90(u8g2, x, y, len, dir);
    2028:	6b23      	ldr	r3, [r4, #48]	; 0x30
    202a:	689e      	ldr	r6, [r3, #8]
    202c:	230a      	movs	r3, #10
    202e:	446b      	add	r3, sp
    2030:	881b      	ldrh	r3, [r3, #0]
    2032:	aa03      	add	r2, sp, #12
    2034:	8812      	ldrh	r2, [r2, #0]
    2036:	210e      	movs	r1, #14
    2038:	4469      	add	r1, sp
    203a:	8809      	ldrh	r1, [r1, #0]
    203c:	9500      	str	r5, [sp, #0]
    203e:	0020      	movs	r0, r4
    2040:	47b0      	blx	r6
    2042:	e7d6      	b.n	1ff2 <u8g2_DrawHVLine+0x4e>
	if ( x < u8g2->user_x0 )
    2044:	2348      	movs	r3, #72	; 0x48
    2046:	5ae2      	ldrh	r2, [r4, r3]
    2048:	3b3a      	subs	r3, #58	; 0x3a
    204a:	446b      	add	r3, sp
    204c:	881b      	ldrh	r3, [r3, #0]
    204e:	429a      	cmp	r2, r3
    2050:	d8cf      	bhi.n	1ff2 <u8g2_DrawHVLine+0x4e>
	if ( x >= u8g2->user_x1 )
    2052:	224a      	movs	r2, #74	; 0x4a
    2054:	5aa2      	ldrh	r2, [r4, r2]
    2056:	4293      	cmp	r3, r2
    2058:	d2cb      	bcs.n	1ff2 <u8g2_DrawHVLine+0x4e>
	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
    205a:	234e      	movs	r3, #78	; 0x4e
    205c:	5ae3      	ldrh	r3, [r4, r3]
    205e:	224c      	movs	r2, #76	; 0x4c
    2060:	5aa2      	ldrh	r2, [r4, r2]
    2062:	210a      	movs	r1, #10
    2064:	4469      	add	r1, sp
    2066:	a803      	add	r0, sp, #12
    2068:	4e02      	ldr	r6, [pc, #8]	; (2074 <u8g2_DrawHVLine+0xd0>)
    206a:	47b0      	blx	r6
    206c:	2800      	cmp	r0, #0
    206e:	d1db      	bne.n	2028 <u8g2_DrawHVLine+0x84>
    2070:	e7bf      	b.n	1ff2 <u8g2_DrawHVLine+0x4e>
    2072:	46c0      	nop			; (mov r8, r8)
    2074:	00001f4d 	.word	0x00001f4d

00002078 <u8g2_DrawPixel>:
// #endif /* U8G2_WITH_INTERSECTION */
  u8g2_DrawHVLine(u8g2, x, y, len, 1);
}

void u8g2_DrawPixel(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y)
{
    2078:	b510      	push	{r4, lr}
    207a:	b082      	sub	sp, #8
#ifdef U8G2_WITH_INTERSECTION
  if ( y < u8g2->user_y0 )
    207c:	234c      	movs	r3, #76	; 0x4c
    207e:	5ac3      	ldrh	r3, [r0, r3]
    2080:	4293      	cmp	r3, r2
    2082:	d80b      	bhi.n	209c <u8g2_DrawPixel+0x24>
    return;
  if ( y >= u8g2->user_y1 )
    2084:	234e      	movs	r3, #78	; 0x4e
    2086:	5ac3      	ldrh	r3, [r0, r3]
    2088:	429a      	cmp	r2, r3
    208a:	d207      	bcs.n	209c <u8g2_DrawPixel+0x24>
    return;
  if ( x < u8g2->user_x0 )
    208c:	2348      	movs	r3, #72	; 0x48
    208e:	5ac3      	ldrh	r3, [r0, r3]
    2090:	428b      	cmp	r3, r1
    2092:	d803      	bhi.n	209c <u8g2_DrawPixel+0x24>
    return;
  if ( x >= u8g2->user_x1 )
    2094:	234a      	movs	r3, #74	; 0x4a
    2096:	5ac3      	ldrh	r3, [r0, r3]
    2098:	4299      	cmp	r1, r3
    209a:	d301      	bcc.n	20a0 <u8g2_DrawPixel+0x28>
    return;
#endif /* U8G2_WITH_INTERSECTION */
  u8g2_DrawHVLine(u8g2, x, y, 1, 0);
}
    209c:	b002      	add	sp, #8
    209e:	bd10      	pop	{r4, pc}
  u8g2_DrawHVLine(u8g2, x, y, 1, 0);
    20a0:	2300      	movs	r3, #0
    20a2:	9300      	str	r3, [sp, #0]
    20a4:	3301      	adds	r3, #1
    20a6:	4c01      	ldr	r4, [pc, #4]	; (20ac <u8g2_DrawPixel+0x34>)
    20a8:	47a0      	blx	r4
    20aa:	e7f7      	b.n	209c <u8g2_DrawPixel+0x24>
    20ac:	00001fa5 	.word	0x00001fa5

000020b0 <u8g2_is_intersection_decision_tree>:
  a1 and v1 are excluded
  v0 == v1 is not support end return 1
*/
uint8_t u8g2_is_intersection_decision_tree(u8g2_uint_t a0, u8g2_uint_t a1, u8g2_uint_t v0, u8g2_uint_t v1)
{
  if ( v0 < a1 )		// v0 <= a1
    20b0:	428a      	cmp	r2, r1
    20b2:	d205      	bcs.n	20c0 <u8g2_is_intersection_decision_tree+0x10>
  {
    if ( v1 > a0 )	// v1 >= a0
    20b4:	4283      	cmp	r3, r0
    20b6:	d80b      	bhi.n	20d0 <u8g2_is_intersection_decision_tree+0x20>
    {
      return 1;
    }
    else
    {
      if ( v0 > v1 )	// v0 > v1
    20b8:	429a      	cmp	r2, r3
    20ba:	d90b      	bls.n	20d4 <u8g2_is_intersection_decision_tree+0x24>
      {
	return 1;
    20bc:	2001      	movs	r0, #1
    20be:	e008      	b.n	20d2 <u8g2_is_intersection_decision_tree+0x22>
      }
    }
  }
  else
  {
    if ( v1 > a0 )	// v1 >= a0
    20c0:	4283      	cmp	r3, r0
    20c2:	d909      	bls.n	20d8 <u8g2_is_intersection_decision_tree+0x28>
    {
      if ( v0 > v1 )	// v0 > v1
    20c4:	429a      	cmp	r2, r3
    20c6:	d801      	bhi.n	20cc <u8g2_is_intersection_decision_tree+0x1c>
      {
	return 1;
      }
      else
      {
	return 0;
    20c8:	2000      	movs	r0, #0
    20ca:	e002      	b.n	20d2 <u8g2_is_intersection_decision_tree+0x22>
	return 1;
    20cc:	2001      	movs	r0, #1
    20ce:	e000      	b.n	20d2 <u8g2_is_intersection_decision_tree+0x22>
      return 1;
    20d0:	2001      	movs	r0, #1
    else
    {
      return 0;
    }
  }
}
    20d2:	4770      	bx	lr
	return 0;
    20d4:	2000      	movs	r0, #0
    20d6:	e7fc      	b.n	20d2 <u8g2_is_intersection_decision_tree+0x22>
      return 0;
    20d8:	2000      	movs	r0, #0
    20da:	e7fa      	b.n	20d2 <u8g2_is_intersection_decision_tree+0x22>

000020dc <u8g2_IsIntersection>:



/* upper limits are not included (asymetric boundaries) */
uint8_t u8g2_IsIntersection(u8g2_t *u8g2, u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t x1, u8g2_uint_t y1)
{
    20dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    20de:	0006      	movs	r6, r0
    20e0:	000c      	movs	r4, r1
    20e2:	001d      	movs	r5, r3
    20e4:	ab06      	add	r3, sp, #24
    20e6:	881b      	ldrh	r3, [r3, #0]
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
    20e8:	214e      	movs	r1, #78	; 0x4e
    20ea:	5a41      	ldrh	r1, [r0, r1]
    20ec:	204c      	movs	r0, #76	; 0x4c
    20ee:	5a30      	ldrh	r0, [r6, r0]
    20f0:	4f05      	ldr	r7, [pc, #20]	; (2108 <u8g2_IsIntersection+0x2c>)
    20f2:	47b8      	blx	r7
    20f4:	2800      	cmp	r0, #0
    20f6:	d006      	beq.n	2106 <u8g2_IsIntersection+0x2a>
    return 0; 
  
  return u8g2_is_intersection_decision_tree(u8g2->user_x0, u8g2->user_x1, x0, x1);
    20f8:	234a      	movs	r3, #74	; 0x4a
    20fa:	5af1      	ldrh	r1, [r6, r3]
    20fc:	3b02      	subs	r3, #2
    20fe:	5af0      	ldrh	r0, [r6, r3]
    2100:	002b      	movs	r3, r5
    2102:	0022      	movs	r2, r4
    2104:	47b8      	blx	r7
}
    2106:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2108:	000020b1 	.word	0x000020b1

0000210c <u8g2_DrawLine>:

#include "u8g2.h"


void u8g2_DrawLine(u8g2_t *u8g2, u8g2_uint_t x1, u8g2_uint_t y1, u8g2_uint_t x2, u8g2_uint_t y2)
{
    210c:	b5f0      	push	{r4, r5, r6, r7, lr}
    210e:	46de      	mov	lr, fp
    2110:	4657      	mov	r7, sl
    2112:	464e      	mov	r6, r9
    2114:	b5c0      	push	{r6, r7, lr}
    2116:	b082      	sub	sp, #8
    2118:	9000      	str	r0, [sp, #0]
    211a:	0017      	movs	r7, r2
    211c:	001e      	movs	r6, r3
    211e:	ab0a      	add	r3, sp, #40	; 0x28
    2120:	881d      	ldrh	r5, [r3, #0]

  uint8_t swapxy = 0;
  
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
    2122:	42b1      	cmp	r1, r6
    2124:	d929      	bls.n	217a <u8g2_DrawLine+0x6e>
    2126:	1b8b      	subs	r3, r1, r6
    2128:	b29b      	uxth	r3, r3
    212a:	4699      	mov	r9, r3
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    212c:	42af      	cmp	r7, r5
    212e:	d928      	bls.n	2182 <u8g2_DrawLine+0x76>
    2130:	1b7b      	subs	r3, r7, r5
    2132:	b29b      	uxth	r3, r3
    2134:	469b      	mov	fp, r3

  if ( dy > dx ) 
    2136:	45d9      	cmp	r9, fp
    2138:	d327      	bcc.n	218a <u8g2_DrawLine+0x7e>
    213a:	465b      	mov	r3, fp
    213c:	46cb      	mov	fp, r9
    213e:	4699      	mov	r9, r3
    2140:	002b      	movs	r3, r5
    2142:	0035      	movs	r5, r6
    2144:	001e      	movs	r6, r3
    2146:	003b      	movs	r3, r7
    2148:	000f      	movs	r7, r1
    214a:	0019      	movs	r1, r3
  uint8_t swapxy = 0;
    214c:	2300      	movs	r3, #0
    214e:	469a      	mov	sl, r3
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
  }
  if ( x1 > x2 ) 
    2150:	42af      	cmp	r7, r5
    2152:	d805      	bhi.n	2160 <u8g2_DrawLine+0x54>
    2154:	0033      	movs	r3, r6
    2156:	000e      	movs	r6, r1
    2158:	0019      	movs	r1, r3
    215a:	002b      	movs	r3, r5
    215c:	003d      	movs	r5, r7
    215e:	001f      	movs	r7, r3
  {
    tmp = x1; x1 =x2; x2 = tmp;
    tmp = y1; y1 =y2; y2 = tmp;
  }
  err = dx >> 1;
    2160:	465b      	mov	r3, fp
    2162:	085c      	lsrs	r4, r3, #1
    2164:	b224      	sxth	r4, r4
  if ( y2 > y1 ) ystep = 1; else ystep = -1;
    2166:	428e      	cmp	r6, r1
    2168:	d212      	bcs.n	2190 <u8g2_DrawLine+0x84>
    216a:	2301      	movs	r3, #1
    216c:	9301      	str	r3, [sp, #4]

#ifndef  U8G2_16BIT
  if ( x2 == 255 )
    x2--;
#else
  if ( x2 == 0xffff )
    216e:	4b1d      	ldr	r3, [pc, #116]	; (21e4 <u8g2_DrawLine+0xd8>)
    2170:	429f      	cmp	r7, r3
    2172:	d11e      	bne.n	21b2 <u8g2_DrawLine+0xa6>
    x2--;
    2174:	3f01      	subs	r7, #1
    2176:	b2bf      	uxth	r7, r7
#endif

  for( x = x1; x <= x2; x++ )
    2178:	e01b      	b.n	21b2 <u8g2_DrawLine+0xa6>
  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
    217a:	1a73      	subs	r3, r6, r1
    217c:	b29b      	uxth	r3, r3
    217e:	4699      	mov	r9, r3
    2180:	e7d4      	b.n	212c <u8g2_DrawLine+0x20>
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    2182:	1beb      	subs	r3, r5, r7
    2184:	b29b      	uxth	r3, r3
    2186:	469b      	mov	fp, r3
    2188:	e7d5      	b.n	2136 <u8g2_DrawLine+0x2a>
    swapxy = 1;
    218a:	2301      	movs	r3, #1
    218c:	469a      	mov	sl, r3
    218e:	e7df      	b.n	2150 <u8g2_DrawLine+0x44>
  if ( y2 > y1 ) ystep = 1; else ystep = -1;
    2190:	2301      	movs	r3, #1
    2192:	425b      	negs	r3, r3
    2194:	9301      	str	r3, [sp, #4]
    2196:	e7ea      	b.n	216e <u8g2_DrawLine+0x62>
  {
    if ( swapxy == 0 ) 
      u8g2_DrawPixel(u8g2, x, y); 
    else 
      u8g2_DrawPixel(u8g2, y, x); 
    2198:	002a      	movs	r2, r5
    219a:	0031      	movs	r1, r6
    219c:	9800      	ldr	r0, [sp, #0]
    219e:	4b12      	ldr	r3, [pc, #72]	; (21e8 <u8g2_DrawLine+0xdc>)
    21a0:	4798      	blx	r3
    err -= (u8g2_uint_t)dy;
    21a2:	464b      	mov	r3, r9
    21a4:	1ae4      	subs	r4, r4, r3
    21a6:	b2a3      	uxth	r3, r4
    21a8:	b21c      	sxth	r4, r3
    if ( err < 0 ) 
    21aa:	2c00      	cmp	r4, #0
    21ac:	db0c      	blt.n	21c8 <u8g2_DrawLine+0xbc>
  for( x = x1; x <= x2; x++ )
    21ae:	3501      	adds	r5, #1
    21b0:	b2ad      	uxth	r5, r5
    21b2:	42af      	cmp	r7, r5
    21b4:	d30f      	bcc.n	21d6 <u8g2_DrawLine+0xca>
    if ( swapxy == 0 ) 
    21b6:	4653      	mov	r3, sl
    21b8:	2b00      	cmp	r3, #0
    21ba:	d1ed      	bne.n	2198 <u8g2_DrawLine+0x8c>
      u8g2_DrawPixel(u8g2, x, y); 
    21bc:	0032      	movs	r2, r6
    21be:	0029      	movs	r1, r5
    21c0:	9800      	ldr	r0, [sp, #0]
    21c2:	4b09      	ldr	r3, [pc, #36]	; (21e8 <u8g2_DrawLine+0xdc>)
    21c4:	4798      	blx	r3
    21c6:	e7ec      	b.n	21a2 <u8g2_DrawLine+0x96>
    {
      y += (u8g2_uint_t)ystep;
    21c8:	466a      	mov	r2, sp
    21ca:	8892      	ldrh	r2, [r2, #4]
    21cc:	18b6      	adds	r6, r6, r2
    21ce:	b2b6      	uxth	r6, r6
      err += (u8g2_uint_t)dx;
    21d0:	445b      	add	r3, fp
    21d2:	b21c      	sxth	r4, r3
    21d4:	e7eb      	b.n	21ae <u8g2_DrawLine+0xa2>
    }
  }
}
    21d6:	b002      	add	sp, #8
    21d8:	bc1c      	pop	{r2, r3, r4}
    21da:	4691      	mov	r9, r2
    21dc:	469a      	mov	sl, r3
    21de:	46a3      	mov	fp, r4
    21e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    21e2:	46c0      	nop			; (mov r8, r8)
    21e4:	0000ffff 	.word	0x0000ffff
    21e8:	00002079 	.word	0x00002079

000021ec <u8g2_ll_hvline_vertical_top_lsb>:
		1: vertical line (top to bottom)
  asumption: 
    all clipping done
*/
void u8g2_ll_hvline_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    21ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    21ee:	46c6      	mov	lr, r8
    21f0:	b500      	push	{lr}
    21f2:	4688      	mov	r8, r1
    21f4:	ac06      	add	r4, sp, #24
    21f6:	7827      	ldrb	r7, [r4, #0]
  //assert(y >= u8g2->buf_y0);
  //assert(y < u8g2_GetU8x8(u8g2)->display_info->tile_height*8);
  
  /* bytes are vertical, lsb on top (y=0), msb at bottom (y=7) */
  bit_pos = y;		/* overflow truncate is ok here... */
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
    21f8:	2407      	movs	r4, #7
    21fa:	4014      	ands	r4, r2
  mask = 1;
  mask <<= bit_pos;
    21fc:	2501      	movs	r5, #1
    21fe:	40a5      	lsls	r5, r4
    2200:	b2ed      	uxtb	r5, r5

  or_mask = 0;
  xor_mask = 0;
  if ( u8g2->draw_color <= 1 )
    2202:	2692      	movs	r6, #146	; 0x92
    2204:	5d86      	ldrb	r6, [r0, r6]
    2206:	46b4      	mov	ip, r6
    2208:	2e01      	cmp	r6, #1
    220a:	d91f      	bls.n	224c <u8g2_ll_hvline_vertical_top_lsb+0x60>
  or_mask = 0;
    220c:	2600      	movs	r6, #0
    or_mask  = mask;
  if ( u8g2->draw_color != 1 )
    220e:	4661      	mov	r1, ip
    2210:	2901      	cmp	r1, #1
    2212:	d01d      	beq.n	2250 <u8g2_ll_hvline_vertical_top_lsb+0x64>
    xor_mask = mask;


  offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
  offset &= ~7;
    2214:	2107      	movs	r1, #7
    2216:	438a      	bics	r2, r1
    2218:	4694      	mov	ip, r2
  offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
    221a:	6802      	ldr	r2, [r0, #0]
    221c:	7c12      	ldrb	r2, [r2, #16]
    221e:	4661      	mov	r1, ip
    2220:	434a      	muls	r2, r1
    2222:	b292      	uxth	r2, r2
  ptr = u8g2->tile_buf_ptr;
  ptr += offset;
  ptr += x;
    2224:	4442      	add	r2, r8
    2226:	0011      	movs	r1, r2
    2228:	6b42      	ldr	r2, [r0, #52]	; 0x34
    222a:	4694      	mov	ip, r2
    222c:	4461      	add	r1, ip
  
  if ( dir == 0 )
    222e:	2f00      	cmp	r7, #0
    2230:	d118      	bne.n	2264 <u8g2_ll_hvline_vertical_top_lsb+0x78>
      do
      {
#ifdef __unix
	assert(ptr < max_ptr);
#endif
	*ptr |= or_mask;
    2232:	780a      	ldrb	r2, [r1, #0]
    2234:	4332      	orrs	r2, r6
    2236:	b2d2      	uxtb	r2, r2
	*ptr ^= xor_mask;
    2238:	406a      	eors	r2, r5
    223a:	700a      	strb	r2, [r1, #0]
	ptr++;
    223c:	3101      	adds	r1, #1
	len--;
    223e:	3b01      	subs	r3, #1
    2240:	b29b      	uxth	r3, r3
      } while( len != 0 );
    2242:	2b00      	cmp	r3, #0
    2244:	d1f5      	bne.n	2232 <u8g2_ll_hvline_vertical_top_lsb+0x46>
	or_mask <<= 1;
	xor_mask <<= 1;
      }
    } while( len != 0 );
  }
}
    2246:	bc04      	pop	{r2}
    2248:	4690      	mov	r8, r2
    224a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    or_mask  = mask;
    224c:	002e      	movs	r6, r5
    224e:	e7de      	b.n	220e <u8g2_ll_hvline_vertical_top_lsb+0x22>
  xor_mask = 0;
    2250:	2500      	movs	r5, #0
    2252:	e7df      	b.n	2214 <u8g2_ll_hvline_vertical_top_lsb+0x28>
	  or_mask  = 1;
    2254:	2601      	movs	r6, #1
    2256:	e017      	b.n	2288 <u8g2_ll_hvline_vertical_top_lsb+0x9c>
	or_mask <<= 1;
    2258:	0076      	lsls	r6, r6, #1
    225a:	b2f6      	uxtb	r6, r6
	xor_mask <<= 1;
    225c:	006d      	lsls	r5, r5, #1
    225e:	b2ed      	uxtb	r5, r5
    } while( len != 0 );
    2260:	2b00      	cmp	r3, #0
    2262:	d0f0      	beq.n	2246 <u8g2_ll_hvline_vertical_top_lsb+0x5a>
      *ptr |= or_mask;
    2264:	780a      	ldrb	r2, [r1, #0]
    2266:	4332      	orrs	r2, r6
    2268:	b2d2      	uxtb	r2, r2
      *ptr ^= xor_mask;
    226a:	406a      	eors	r2, r5
    226c:	700a      	strb	r2, [r1, #0]
      bit_pos++;
    226e:	3401      	adds	r4, #1
      bit_pos &= 7;
    2270:	2207      	movs	r2, #7
    2272:	4014      	ands	r4, r2
      len--;
    2274:	3b01      	subs	r3, #1
    2276:	b29b      	uxth	r3, r3
      if ( bit_pos == 0 )
    2278:	2c00      	cmp	r4, #0
    227a:	d1ed      	bne.n	2258 <u8g2_ll_hvline_vertical_top_lsb+0x6c>
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
    227c:	8f42      	ldrh	r2, [r0, #58]	; 0x3a
    227e:	1889      	adds	r1, r1, r2
	if ( u8g2->draw_color <= 1 )
    2280:	2292      	movs	r2, #146	; 0x92
    2282:	5c82      	ldrb	r2, [r0, r2]
    2284:	2a01      	cmp	r2, #1
    2286:	d9e5      	bls.n	2254 <u8g2_ll_hvline_vertical_top_lsb+0x68>
	if ( u8g2->draw_color != 1 )
    2288:	2a01      	cmp	r2, #1
    228a:	d0e9      	beq.n	2260 <u8g2_ll_hvline_vertical_top_lsb+0x74>
	  xor_mask = 1;
    228c:	2501      	movs	r5, #1
    228e:	e7e7      	b.n	2260 <u8g2_ll_hvline_vertical_top_lsb+0x74>

00002290 <u8g2_update_dimension_common>:
    u8g2_uint_t buf_y0;
    u8g2_uint_t buf_y1; 	
*/

static void u8g2_update_dimension_common(u8g2_t *u8g2)
{
    2290:	b5f0      	push	{r4, r5, r6, r7, lr}
  const u8x8_display_info_t *display_info = u8g2_GetU8x8(u8g2)->display_info;
    2292:	6801      	ldr	r1, [r0, #0]
  u8g2_uint_t t;
  
  t = u8g2->tile_buf_height;
    2294:	2338      	movs	r3, #56	; 0x38
    2296:	5cc4      	ldrb	r4, [r0, r3]
    2298:	b2a3      	uxth	r3, r4
  t *= 8;
    229a:	00da      	lsls	r2, r3, #3
  u8g2->pixel_buf_height = t;
    229c:	8782      	strh	r2, [r0, #60]	; 0x3c
  
  t = display_info->tile_width;
    229e:	7c0a      	ldrb	r2, [r1, #16]
#ifndef U8G2_16BIT
  if ( t >= 32 )
    t = 31;
#endif
  t *= 8;
    22a0:	00d2      	lsls	r2, r2, #3
  u8g2->pixel_buf_width = t;
    22a2:	8742      	strh	r2, [r0, #58]	; 0x3a
  
  t = u8g2->tile_curr_row;
    22a4:	2239      	movs	r2, #57	; 0x39
    22a6:	5c86      	ldrb	r6, [r0, r2]
    22a8:	b2b7      	uxth	r7, r6
  t *= 8;
    22aa:	00fa      	lsls	r2, r7, #3
  u8g2->pixel_curr_row = t;
    22ac:	87c2      	strh	r2, [r0, #62]	; 0x3e
  
  t = u8g2->tile_buf_height;
  /* handle the case, where the buffer is larger than the (remaining) part of the display */
  if ( t + u8g2->tile_curr_row > display_info->tile_height )
    22ae:	19a4      	adds	r4, r4, r6
    22b0:	7c4d      	ldrb	r5, [r1, #17]
    22b2:	42ac      	cmp	r4, r5
    22b4:	dd01      	ble.n	22ba <u8g2_update_dimension_common+0x2a>
    t = display_info->tile_height - u8g2->tile_curr_row;
    22b6:	1beb      	subs	r3, r5, r7
    22b8:	b29b      	uxth	r3, r3
  t *= 8;
    22ba:	00db      	lsls	r3, r3, #3
    22bc:	b29b      	uxth	r3, r3
  
  u8g2->buf_y0 = u8g2->pixel_curr_row;   
    22be:	2440      	movs	r4, #64	; 0x40
    22c0:	5302      	strh	r2, [r0, r4]
  u8g2->buf_y1 = u8g2->buf_y0;
  u8g2->buf_y1 += t;
    22c2:	18d3      	adds	r3, r2, r3
    22c4:	2242      	movs	r2, #66	; 0x42
    22c6:	5283      	strh	r3, [r0, r2]

  
#ifdef U8G2_16BIT
  u8g2->width = display_info->pixel_width;
    22c8:	8a8a      	ldrh	r2, [r1, #20]
    22ca:	2344      	movs	r3, #68	; 0x44
    22cc:	52c2      	strh	r2, [r0, r3]
  u8g2->height = display_info->pixel_height;
    22ce:	8aca      	ldrh	r2, [r1, #22]
    22d0:	3302      	adds	r3, #2
    22d2:	52c2      	strh	r2, [r0, r3]
  if ( display_info->pixel_width <= 240 )
    u8g2->width = display_info->pixel_width;
  u8g2->height = display_info->pixel_height;
#endif

}
    22d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

000022d8 <u8g2_update_dimension_r0>:

/*==========================================================*/


void u8g2_update_dimension_r0(u8g2_t *u8g2)
{
    22d8:	b510      	push	{r4, lr}
  u8g2_update_dimension_common(u8g2);  
    22da:	4b01      	ldr	r3, [pc, #4]	; (22e0 <u8g2_update_dimension_r0+0x8>)
    22dc:	4798      	blx	r3
}
    22de:	bd10      	pop	{r4, pc}
    22e0:	00002291 	.word	0x00002291

000022e4 <u8g2_apply_clip_window>:
{
    22e4:	b530      	push	{r4, r5, lr}
    22e6:	b083      	sub	sp, #12
    22e8:	0004      	movs	r4, r0
  if ( u8g2_IsIntersection(u8g2, u8g2->clip_x0, u8g2->clip_y0, u8g2->clip_x1, u8g2->clip_y1) == 0 ) 
    22ea:	2352      	movs	r3, #82	; 0x52
    22ec:	5ac3      	ldrh	r3, [r0, r3]
    22ee:	2254      	movs	r2, #84	; 0x54
    22f0:	5a82      	ldrh	r2, [r0, r2]
    22f2:	2150      	movs	r1, #80	; 0x50
    22f4:	5a41      	ldrh	r1, [r0, r1]
    22f6:	2056      	movs	r0, #86	; 0x56
    22f8:	5a20      	ldrh	r0, [r4, r0]
    22fa:	9000      	str	r0, [sp, #0]
    22fc:	0020      	movs	r0, r4
    22fe:	4d16      	ldr	r5, [pc, #88]	; (2358 <u8g2_apply_clip_window+0x74>)
    2300:	47a8      	blx	r5
    2302:	2800      	cmp	r0, #0
    2304:	d023      	beq.n	234e <u8g2_apply_clip_window+0x6a>
    u8g2->is_page_clip_window_intersection = 1;
    2306:	2201      	movs	r2, #1
    2308:	238c      	movs	r3, #140	; 0x8c
    230a:	54e2      	strb	r2, [r4, r3]
    if ( u8g2->user_x0 < u8g2->clip_x0 )
    230c:	3b44      	subs	r3, #68	; 0x44
    230e:	5ae2      	ldrh	r2, [r4, r3]
    2310:	3308      	adds	r3, #8
    2312:	5ae3      	ldrh	r3, [r4, r3]
    2314:	429a      	cmp	r2, r3
    2316:	d201      	bcs.n	231c <u8g2_apply_clip_window+0x38>
      u8g2->user_x0 = u8g2->clip_x0;
    2318:	2248      	movs	r2, #72	; 0x48
    231a:	52a3      	strh	r3, [r4, r2]
    if ( u8g2->user_x1 > u8g2->clip_x1 )
    231c:	234a      	movs	r3, #74	; 0x4a
    231e:	5ae2      	ldrh	r2, [r4, r3]
    2320:	3308      	adds	r3, #8
    2322:	5ae3      	ldrh	r3, [r4, r3]
    2324:	429a      	cmp	r2, r3
    2326:	d901      	bls.n	232c <u8g2_apply_clip_window+0x48>
      u8g2->user_x1 = u8g2->clip_x1;
    2328:	224a      	movs	r2, #74	; 0x4a
    232a:	52a3      	strh	r3, [r4, r2]
    if ( u8g2->user_y0 < u8g2->clip_y0 )
    232c:	234c      	movs	r3, #76	; 0x4c
    232e:	5ae2      	ldrh	r2, [r4, r3]
    2330:	3308      	adds	r3, #8
    2332:	5ae3      	ldrh	r3, [r4, r3]
    2334:	429a      	cmp	r2, r3
    2336:	d201      	bcs.n	233c <u8g2_apply_clip_window+0x58>
      u8g2->user_y0 = u8g2->clip_y0;
    2338:	224c      	movs	r2, #76	; 0x4c
    233a:	52a3      	strh	r3, [r4, r2]
    if ( u8g2->user_y1 > u8g2->clip_y1 )
    233c:	234e      	movs	r3, #78	; 0x4e
    233e:	5ae2      	ldrh	r2, [r4, r3]
    2340:	3308      	adds	r3, #8
    2342:	5ae3      	ldrh	r3, [r4, r3]
    2344:	429a      	cmp	r2, r3
    2346:	d905      	bls.n	2354 <u8g2_apply_clip_window+0x70>
      u8g2->user_y1 = u8g2->clip_y1;
    2348:	224e      	movs	r2, #78	; 0x4e
    234a:	52a3      	strh	r3, [r4, r2]
}
    234c:	e002      	b.n	2354 <u8g2_apply_clip_window+0x70>
    u8g2->is_page_clip_window_intersection = 0;
    234e:	2200      	movs	r2, #0
    2350:	238c      	movs	r3, #140	; 0x8c
    2352:	54e2      	strb	r2, [r4, r3]
}
    2354:	b003      	add	sp, #12
    2356:	bd30      	pop	{r4, r5, pc}
    2358:	000020dd 	.word	0x000020dd

0000235c <u8g2_update_page_win_r0>:

void u8g2_update_page_win_r0(u8g2_t *u8g2)
{
    235c:	b510      	push	{r4, lr}
  u8g2->user_x0 = 0;
    235e:	2200      	movs	r2, #0
    2360:	2348      	movs	r3, #72	; 0x48
    2362:	52c2      	strh	r2, [r0, r3]
  u8g2->user_x1 = u8g2->width;			/* pixel_buf_width replaced with width */
    2364:	3b04      	subs	r3, #4
    2366:	5ac2      	ldrh	r2, [r0, r3]
    2368:	3306      	adds	r3, #6
    236a:	52c2      	strh	r2, [r0, r3]
  
  u8g2->user_y0 = u8g2->buf_y0;
    236c:	3b0a      	subs	r3, #10
    236e:	5ac2      	ldrh	r2, [r0, r3]
    2370:	330c      	adds	r3, #12
    2372:	52c2      	strh	r2, [r0, r3]
  u8g2->user_y1 = u8g2->buf_y1;
    2374:	3b0a      	subs	r3, #10
    2376:	5ac2      	ldrh	r2, [r0, r3]
    2378:	330c      	adds	r3, #12
    237a:	52c2      	strh	r2, [r0, r3]
  
#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
  u8g2_apply_clip_window(u8g2);
    237c:	4b01      	ldr	r3, [pc, #4]	; (2384 <u8g2_update_page_win_r0+0x28>)
    237e:	4798      	blx	r3
#endif /* U8G2_WITH_CLIP_WINDOW_SUPPORT */
}
    2380:	bd10      	pop	{r4, pc}
    2382:	46c0      	nop			; (mov r8, r8)
    2384:	000022e5 	.word	0x000022e5

00002388 <u8g2_draw_l90_r0>:
/*============================================*/
extern void u8g2_draw_hv_line_2dir(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir);


void u8g2_draw_l90_r0(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    2388:	b510      	push	{r4, lr}
    238a:	b082      	sub	sp, #8
    238c:	ac04      	add	r4, sp, #16
    238e:	7824      	ldrb	r4, [r4, #0]
#ifdef __unix
  assert( dir <= 1 );
#endif
  u8g2_draw_hv_line_2dir(u8g2, x, y, len, dir);
    2390:	9400      	str	r4, [sp, #0]
    2392:	4c02      	ldr	r4, [pc, #8]	; (239c <u8g2_draw_l90_r0+0x14>)
    2394:	47a0      	blx	r4
}
    2396:	b002      	add	sp, #8
    2398:	bd10      	pop	{r4, pc}
    239a:	46c0      	nop			; (mov r8, r8)
    239c:	00001f8d 	.word	0x00001f8d

000023a0 <u8g2_SetMaxClipWindow>:
{
    23a0:	b510      	push	{r4, lr}
  u8g2->clip_x0 = 0;
    23a2:	2300      	movs	r3, #0
    23a4:	2250      	movs	r2, #80	; 0x50
    23a6:	5283      	strh	r3, [r0, r2]
  u8g2->clip_y0 = 0;
    23a8:	3204      	adds	r2, #4
    23aa:	5283      	strh	r3, [r0, r2]
  u8g2->clip_x1 = (u8g2_uint_t)~(u8g2_uint_t)0;
    23ac:	3b01      	subs	r3, #1
    23ae:	3a02      	subs	r2, #2
    23b0:	5283      	strh	r3, [r0, r2]
  u8g2->clip_y1 = (u8g2_uint_t)~(u8g2_uint_t)0;
    23b2:	3204      	adds	r2, #4
    23b4:	5283      	strh	r3, [r0, r2]
  u8g2->cb->update_page_win(u8g2);
    23b6:	6b03      	ldr	r3, [r0, #48]	; 0x30
    23b8:	685b      	ldr	r3, [r3, #4]
    23ba:	4798      	blx	r3
}
    23bc:	bd10      	pop	{r4, pc}
	...

000023c0 <u8g2_SetupBuffer>:
{
    23c0:	b570      	push	{r4, r5, r6, lr}
    23c2:	0004      	movs	r4, r0
    23c4:	9804      	ldr	r0, [sp, #16]
  u8g2->font = NULL;
    23c6:	2500      	movs	r5, #0
    23c8:	65a5      	str	r5, [r4, #88]	; 0x58
  u8g2->ll_hvline = ll_hvline_cb;
    23ca:	62e3      	str	r3, [r4, #44]	; 0x2c
  u8g2->tile_buf_ptr = buf;
    23cc:	6361      	str	r1, [r4, #52]	; 0x34
  u8g2->tile_buf_height = tile_buf_height;
    23ce:	2338      	movs	r3, #56	; 0x38
    23d0:	54e2      	strb	r2, [r4, r3]
  u8g2->tile_curr_row = 0;
    23d2:	3301      	adds	r3, #1
    23d4:	54e5      	strb	r5, [r4, r3]
  u8g2->font_decode.is_transparent = 0; /* issue 443 */
    23d6:	3334      	adds	r3, #52	; 0x34
    23d8:	54e5      	strb	r5, [r4, r3]
  u8g2->bitmap_transparency = 0;
    23da:	3324      	adds	r3, #36	; 0x24
    23dc:	54e5      	strb	r5, [r4, r3]
  u8g2->font_height_mode = 0; /* issue 2046 */
    23de:	3b04      	subs	r3, #4
    23e0:	54e5      	strb	r5, [r4, r3]
  u8g2->draw_color = 1;
    23e2:	3b8c      	subs	r3, #140	; 0x8c
    23e4:	2292      	movs	r2, #146	; 0x92
    23e6:	54a3      	strb	r3, [r4, r2]
  u8g2->is_auto_page_clear = 1;
    23e8:	3201      	adds	r2, #1
    23ea:	54a3      	strb	r3, [r4, r2]
  u8g2->cb = u8g2_cb;
    23ec:	6320      	str	r0, [r4, #48]	; 0x30
  u8g2->cb->update_dimension(u8g2);
    23ee:	6803      	ldr	r3, [r0, #0]
    23f0:	0020      	movs	r0, r4
    23f2:	4798      	blx	r3
  u8g2_SetMaxClipWindow(u8g2);		/* assign a clip window and call the update() procedure */
    23f4:	0020      	movs	r0, r4
    23f6:	4b04      	ldr	r3, [pc, #16]	; (2408 <u8g2_SetupBuffer+0x48>)
    23f8:	4798      	blx	r3
  u8g2_SetFontPosBaseline(u8g2);  /* issue 195 */
    23fa:	0020      	movs	r0, r4
    23fc:	4b03      	ldr	r3, [pc, #12]	; (240c <u8g2_SetupBuffer+0x4c>)
    23fe:	4798      	blx	r3
  u8g2->font_decode.dir = 0;
    2400:	2370      	movs	r3, #112	; 0x70
    2402:	54e5      	strb	r5, [r4, r3]
}
    2404:	bd70      	pop	{r4, r5, r6, pc}
    2406:	46c0      	nop			; (mov r8, r8)
    2408:	000023a1 	.word	0x000023a1
    240c:	00001f1d 	.word	0x00001f1d

00002410 <u8x8_ascii_next>:
  u8x8->utf8_state = 0;	/* also reset during u8x8_SetupDefaults() */
}

uint16_t u8x8_ascii_next(U8X8_UNUSED u8x8_t *u8x8, uint8_t b)
{
  if ( b == 0 || b == '\n' ) /* '\n' terminates the string to support the string list procedures */
    2410:	2900      	cmp	r1, #0
    2412:	d101      	bne.n	2418 <u8x8_ascii_next+0x8>
    return 0x0ffff;	/* end of string detected*/
    2414:	4803      	ldr	r0, [pc, #12]	; (2424 <u8x8_ascii_next+0x14>)
  return b;
}
    2416:	4770      	bx	lr
  if ( b == 0 || b == '\n' ) /* '\n' terminates the string to support the string list procedures */
    2418:	290a      	cmp	r1, #10
    241a:	d001      	beq.n	2420 <u8x8_ascii_next+0x10>
  return b;
    241c:	b288      	uxth	r0, r1
    241e:	e7fa      	b.n	2416 <u8x8_ascii_next+0x6>
    return 0x0ffff;	/* end of string detected*/
    2420:	4800      	ldr	r0, [pc, #0]	; (2424 <u8x8_ascii_next+0x14>)
    2422:	e7f8      	b.n	2416 <u8x8_ascii_next+0x6>
    2424:	0000ffff 	.word	0x0000ffff

00002428 <u8x8_utf8_init>:
  u8x8->utf8_state = 0;	/* also reset during u8x8_SetupDefaults() */
    2428:	2200      	movs	r2, #0
    242a:	2326      	movs	r3, #38	; 0x26
    242c:	54c2      	strb	r2, [r0, r3]
}
    242e:	4770      	bx	lr

00002430 <u8x8_byte_SetDC>:
*/

#include "u8x8.h"

uint8_t u8x8_byte_SetDC(u8x8_t *u8x8, uint8_t dc)
{
    2430:	b510      	push	{r4, lr}
    2432:	000a      	movs	r2, r1
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SET_DC, dc, NULL);
    2434:	6904      	ldr	r4, [r0, #16]
    2436:	2300      	movs	r3, #0
    2438:	2120      	movs	r1, #32
    243a:	47a0      	blx	r4
}
    243c:	bd10      	pop	{r4, pc}

0000243e <u8x8_byte_SendBytes>:

uint8_t u8x8_byte_SendBytes(u8x8_t *u8x8, uint8_t cnt, uint8_t *data)
{
    243e:	b510      	push	{r4, lr}
    2440:	0013      	movs	r3, r2
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SEND, cnt, (void *)data);
    2442:	6904      	ldr	r4, [r0, #16]
    2444:	000a      	movs	r2, r1
    2446:	2117      	movs	r1, #23
    2448:	47a0      	blx	r4
}
    244a:	bd10      	pop	{r4, pc}

0000244c <u8x8_byte_SendByte>:

uint8_t u8x8_byte_SendByte(u8x8_t *u8x8, uint8_t byte)
{
    244c:	b500      	push	{lr}
    244e:	b083      	sub	sp, #12
    2450:	466b      	mov	r3, sp
    2452:	1dda      	adds	r2, r3, #7
    2454:	7011      	strb	r1, [r2, #0]
  return u8x8_byte_SendBytes(u8x8, 1, &byte);
    2456:	2101      	movs	r1, #1
    2458:	4b01      	ldr	r3, [pc, #4]	; (2460 <u8x8_byte_SendByte+0x14>)
    245a:	4798      	blx	r3
}
    245c:	b003      	add	sp, #12
    245e:	bd00      	pop	{pc}
    2460:	0000243f 	.word	0x0000243f

00002464 <u8x8_cad_SendCmd>:
*/

#include "u8x8.h"

uint8_t u8x8_cad_SendCmd(u8x8_t *u8x8, uint8_t cmd)
{
    2464:	b510      	push	{r4, lr}
    2466:	000a      	movs	r2, r1
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_CMD, cmd, NULL);
    2468:	68c4      	ldr	r4, [r0, #12]
    246a:	2300      	movs	r3, #0
    246c:	2115      	movs	r1, #21
    246e:	47a0      	blx	r4
}
    2470:	bd10      	pop	{r4, pc}

00002472 <u8x8_cad_SendArg>:

uint8_t u8x8_cad_SendArg(u8x8_t *u8x8, uint8_t arg)
{
    2472:	b510      	push	{r4, lr}
    2474:	000a      	movs	r2, r1
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_ARG, arg, NULL);
    2476:	68c4      	ldr	r4, [r0, #12]
    2478:	2300      	movs	r3, #0
    247a:	2116      	movs	r1, #22
    247c:	47a0      	blx	r4
}
    247e:	bd10      	pop	{r4, pc}

00002480 <u8x8_cad_SendData>:
  }
  return 1;
}

uint8_t u8x8_cad_SendData(u8x8_t *u8x8, uint8_t cnt, uint8_t *data)
{
    2480:	b510      	push	{r4, lr}
    2482:	0013      	movs	r3, r2
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, cnt, data);
    2484:	68c4      	ldr	r4, [r0, #12]
    2486:	000a      	movs	r2, r1
    2488:	2117      	movs	r1, #23
    248a:	47a0      	blx	r4
}
    248c:	bd10      	pop	{r4, pc}

0000248e <u8x8_cad_StartTransfer>:

uint8_t u8x8_cad_StartTransfer(u8x8_t *u8x8)
{
    248e:	b510      	push	{r4, lr}
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_START_TRANSFER, 0, NULL);
    2490:	68c4      	ldr	r4, [r0, #12]
    2492:	2300      	movs	r3, #0
    2494:	2200      	movs	r2, #0
    2496:	2118      	movs	r1, #24
    2498:	47a0      	blx	r4
}
    249a:	bd10      	pop	{r4, pc}

0000249c <u8x8_cad_EndTransfer>:

uint8_t u8x8_cad_EndTransfer(u8x8_t *u8x8)
{
    249c:	b510      	push	{r4, lr}
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_END_TRANSFER, 0, NULL);
    249e:	68c4      	ldr	r4, [r0, #12]
    24a0:	2300      	movs	r3, #0
    24a2:	2200      	movs	r2, #0
    24a4:	2119      	movs	r1, #25
    24a6:	47a0      	blx	r4
}
    24a8:	bd10      	pop	{r4, pc}
	...

000024ac <u8x8_cad_SendSequence>:
  254 milli	delay by milliseconds
  255		end of sequence
*/

void u8x8_cad_SendSequence(u8x8_t *u8x8, uint8_t const *data)
{
    24ac:	b570      	push	{r4, r5, r6, lr}
    24ae:	b082      	sub	sp, #8
    24b0:	0006      	movs	r6, r0
    24b2:	000c      	movs	r4, r1
  uint8_t cmd;
  uint8_t v;

  for(;;)
  {
    cmd = *data;
    24b4:	7821      	ldrb	r1, [r4, #0]
    data++;
    24b6:	1c65      	adds	r5, r4, #1
    switch( cmd )
    24b8:	2917      	cmp	r1, #23
    24ba:	d018      	beq.n	24ee <u8x8_cad_SendSequence+0x42>
    24bc:	d90c      	bls.n	24d8 <u8x8_cad_SendSequence+0x2c>
    24be:	2919      	cmp	r1, #25
    24c0:	d91f      	bls.n	2502 <u8x8_cad_SendSequence+0x56>
    24c2:	29fe      	cmp	r1, #254	; 0xfe
    24c4:	d124      	bne.n	2510 <u8x8_cad_SendSequence+0x64>
      case U8X8_MSG_CAD_START_TRANSFER:
      case U8X8_MSG_CAD_END_TRANSFER:
	  u8x8->cad_cb(u8x8, cmd, 0, NULL);
	  break;
      case 0x0fe:
	  v = *data;
    24c6:	782a      	ldrb	r2, [r5, #0]
    24c8:	466b      	mov	r3, sp
    24ca:	71da      	strb	r2, [r3, #7]
	  u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, v);	    
    24cc:	2129      	movs	r1, #41	; 0x29
    24ce:	0030      	movs	r0, r6
    24d0:	4b10      	ldr	r3, [pc, #64]	; (2514 <u8x8_cad_SendSequence+0x68>)
    24d2:	4798      	blx	r3
	  data++;
    24d4:	3402      	adds	r4, #2
	  break;
    24d6:	e7ed      	b.n	24b4 <u8x8_cad_SendSequence+0x8>
    switch( cmd )
    24d8:	2915      	cmp	r1, #21
    24da:	d319      	bcc.n	2510 <u8x8_cad_SendSequence+0x64>
	  v = *data;
    24dc:	782a      	ldrb	r2, [r5, #0]
    24de:	466b      	mov	r3, sp
    24e0:	71da      	strb	r2, [r3, #7]
	  u8x8->cad_cb(u8x8, cmd, v, NULL);
    24e2:	2300      	movs	r3, #0
    24e4:	0030      	movs	r0, r6
    24e6:	68f5      	ldr	r5, [r6, #12]
    24e8:	47a8      	blx	r5
	  data++;
    24ea:	3402      	adds	r4, #2
	  break;
    24ec:	e7e2      	b.n	24b4 <u8x8_cad_SendSequence+0x8>
	  v = *data;
    24ee:	7863      	ldrb	r3, [r4, #1]
    24f0:	466a      	mov	r2, sp
    24f2:	3207      	adds	r2, #7
    24f4:	7013      	strb	r3, [r2, #0]
	  u8x8_cad_SendData(u8x8, 1, &v);
    24f6:	2101      	movs	r1, #1
    24f8:	0030      	movs	r0, r6
    24fa:	4b07      	ldr	r3, [pc, #28]	; (2518 <u8x8_cad_SendSequence+0x6c>)
    24fc:	4798      	blx	r3
	  data++;
    24fe:	3402      	adds	r4, #2
	  break;
    2500:	e7d8      	b.n	24b4 <u8x8_cad_SendSequence+0x8>
	  u8x8->cad_cb(u8x8, cmd, 0, NULL);
    2502:	2300      	movs	r3, #0
    2504:	2200      	movs	r2, #0
    2506:	0030      	movs	r0, r6
    2508:	68f4      	ldr	r4, [r6, #12]
    250a:	47a0      	blx	r4
    data++;
    250c:	002c      	movs	r4, r5
	  break;
    250e:	e7d1      	b.n	24b4 <u8x8_cad_SendSequence+0x8>
      default:
	return;
    }
  }
}
    2510:	b002      	add	sp, #8
    2512:	bd70      	pop	{r4, r5, r6, pc}
    2514:	00002819 	.word	0x00002819
    2518:	00002481 	.word	0x00002481

0000251c <u8x8_cad_011>:
  convert to bytes by using 
    dc = 0 for commands 
    dc = 1 for args and data
*/
uint8_t u8x8_cad_011(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    251c:	b5f0      	push	{r4, r5, r6, r7, lr}
    251e:	b083      	sub	sp, #12
    2520:	0004      	movs	r4, r0
    2522:	000d      	movs	r5, r1
    2524:	0016      	movs	r6, r2
    2526:	9301      	str	r3, [sp, #4]
  switch(msg)
    2528:	000b      	movs	r3, r1
    252a:	3b14      	subs	r3, #20
    252c:	b2da      	uxtb	r2, r3
    252e:	2a05      	cmp	r2, #5
    2530:	d820      	bhi.n	2574 <u8x8_cad_011+0x58>
    2532:	0093      	lsls	r3, r2, #2
    2534:	4a10      	ldr	r2, [pc, #64]	; (2578 <u8x8_cad_011+0x5c>)
    2536:	58d3      	ldr	r3, [r2, r3]
    2538:	469f      	mov	pc, r3
  {
    case U8X8_MSG_CAD_SEND_CMD:
      u8x8_byte_SetDC(u8x8, 0);
    253a:	2100      	movs	r1, #0
    253c:	4b0f      	ldr	r3, [pc, #60]	; (257c <u8x8_cad_011+0x60>)
    253e:	4798      	blx	r3
      u8x8_byte_SendByte(u8x8, arg_int);
    2540:	0031      	movs	r1, r6
    2542:	0020      	movs	r0, r4
    2544:	4b0e      	ldr	r3, [pc, #56]	; (2580 <u8x8_cad_011+0x64>)
    2546:	4798      	blx	r3
    case U8X8_MSG_CAD_END_TRANSFER:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    default:
      return 0;
  }
  return 1;
    2548:	2001      	movs	r0, #1
      break;
    254a:	e011      	b.n	2570 <u8x8_cad_011+0x54>
      u8x8_byte_SetDC(u8x8, 1);
    254c:	2101      	movs	r1, #1
    254e:	4b0b      	ldr	r3, [pc, #44]	; (257c <u8x8_cad_011+0x60>)
    2550:	4798      	blx	r3
      u8x8_byte_SendByte(u8x8, arg_int);
    2552:	0031      	movs	r1, r6
    2554:	0020      	movs	r0, r4
    2556:	4b0a      	ldr	r3, [pc, #40]	; (2580 <u8x8_cad_011+0x64>)
    2558:	4798      	blx	r3
  return 1;
    255a:	2001      	movs	r0, #1
      break;
    255c:	e008      	b.n	2570 <u8x8_cad_011+0x54>
      u8x8_byte_SetDC(u8x8, 1);
    255e:	2101      	movs	r1, #1
    2560:	4b06      	ldr	r3, [pc, #24]	; (257c <u8x8_cad_011+0x60>)
    2562:	4798      	blx	r3
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    2564:	6927      	ldr	r7, [r4, #16]
    2566:	9b01      	ldr	r3, [sp, #4]
    2568:	0032      	movs	r2, r6
    256a:	0029      	movs	r1, r5
    256c:	0020      	movs	r0, r4
    256e:	47b8      	blx	r7
}
    2570:	b003      	add	sp, #12
    2572:	bdf0      	pop	{r4, r5, r6, r7, pc}
      return 0;
    2574:	2000      	movs	r0, #0
    2576:	e7fb      	b.n	2570 <u8x8_cad_011+0x54>
    2578:	0000a4d4 	.word	0x0000a4d4
    257c:	00002431 	.word	0x00002431
    2580:	0000244d 	.word	0x0000244d

00002584 <u8x8_d_helper_display_setup_memory>:
  
*/
void u8x8_d_helper_display_setup_memory(u8x8_t *u8x8, const u8x8_display_info_t *display_info)
{
      /* 1) set display info struct */
      u8x8->display_info = display_info;
    2584:	6001      	str	r1, [r0, #0]
      u8x8->x_offset = u8x8->display_info->default_x_offset;
    2586:	7c8a      	ldrb	r2, [r1, #18]
    2588:	2322      	movs	r3, #34	; 0x22
    258a:	54c2      	strb	r2, [r0, r3]
}
    258c:	4770      	bx	lr
	...

00002590 <u8x8_d_helper_display_init>:
  this is a helper function for the U8X8_MSG_DISPLAY_INIT function.
  It can be called within the display callback function to carry out the usual standard tasks.
  
*/
void u8x8_d_helper_display_init(u8x8_t *u8x8)
{
    2590:	b570      	push	{r4, r5, r6, lr}
    2592:	0004      	movs	r4, r0
      /* 2) apply port directions to the GPIO lines and apply default values for the IO lines*/
      u8x8_gpio_Init(u8x8);
    2594:	2300      	movs	r3, #0
    2596:	2200      	movs	r2, #0
    2598:	2128      	movs	r1, #40	; 0x28
    259a:	6945      	ldr	r5, [r0, #20]
    259c:	47a8      	blx	r5
      u8x8_cad_Init(u8x8);              /* this will also call U8X8_MSG_BYTE_INIT, byte init will NOT call GPIO_INIT */
    259e:	2300      	movs	r3, #0
    25a0:	2200      	movs	r2, #0
    25a2:	2114      	movs	r1, #20
    25a4:	0020      	movs	r0, r4
    25a6:	68e5      	ldr	r5, [r4, #12]
    25a8:	47a8      	blx	r5

      /* 3) do reset */
      u8x8_gpio_SetReset(u8x8, 1);
    25aa:	2201      	movs	r2, #1
    25ac:	214b      	movs	r1, #75	; 0x4b
    25ae:	0020      	movs	r0, r4
    25b0:	4d0c      	ldr	r5, [pc, #48]	; (25e4 <u8x8_d_helper_display_init+0x54>)
    25b2:	47a8      	blx	r5
      u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->reset_pulse_width_ms);
    25b4:	6823      	ldr	r3, [r4, #0]
    25b6:	791a      	ldrb	r2, [r3, #4]
    25b8:	2129      	movs	r1, #41	; 0x29
    25ba:	0020      	movs	r0, r4
    25bc:	47a8      	blx	r5
      u8x8_gpio_SetReset(u8x8, 0);
    25be:	2200      	movs	r2, #0
    25c0:	214b      	movs	r1, #75	; 0x4b
    25c2:	0020      	movs	r0, r4
    25c4:	47a8      	blx	r5
      u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->reset_pulse_width_ms);
    25c6:	6823      	ldr	r3, [r4, #0]
    25c8:	791a      	ldrb	r2, [r3, #4]
    25ca:	2129      	movs	r1, #41	; 0x29
    25cc:	0020      	movs	r0, r4
    25ce:	47a8      	blx	r5
      u8x8_gpio_SetReset(u8x8, 1);
    25d0:	2201      	movs	r2, #1
    25d2:	214b      	movs	r1, #75	; 0x4b
    25d4:	0020      	movs	r0, r4
    25d6:	47a8      	blx	r5
      u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->post_reset_wait_ms);
    25d8:	6823      	ldr	r3, [r4, #0]
    25da:	795a      	ldrb	r2, [r3, #5]
    25dc:	2129      	movs	r1, #41	; 0x29
    25de:	0020      	movs	r0, r4
    25e0:	47a8      	blx	r5
}    
    25e2:	bd70      	pop	{r4, r5, r6, pc}
    25e4:	00002819 	.word	0x00002819

000025e8 <u8x8_DrawTile>:

/*==========================================*/
/* official functions */

uint8_t u8x8_DrawTile(u8x8_t *u8x8, uint8_t x, uint8_t y, uint8_t cnt, uint8_t *tile_ptr)
{
    25e8:	b510      	push	{r4, lr}
    25ea:	b082      	sub	sp, #8
  u8x8_tile_t tile;
  tile.x_pos = x;
    25ec:	466c      	mov	r4, sp
    25ee:	7161      	strb	r1, [r4, #5]
  tile.y_pos = y;
    25f0:	71a2      	strb	r2, [r4, #6]
  tile.cnt = cnt;
    25f2:	7123      	strb	r3, [r4, #4]
  tile.tile_ptr = tile_ptr;
    25f4:	9b04      	ldr	r3, [sp, #16]
    25f6:	9300      	str	r3, [sp, #0]
  return u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_DRAW_TILE, 1, (void *)&tile);
    25f8:	6884      	ldr	r4, [r0, #8]
    25fa:	466b      	mov	r3, sp
    25fc:	2201      	movs	r2, #1
    25fe:	210f      	movs	r1, #15
    2600:	47a0      	blx	r4
}
    2602:	b002      	add	sp, #8
    2604:	bd10      	pop	{r4, pc}

00002606 <u8x8_SetupMemory>:

/* should be implemented as macro */
void u8x8_SetupMemory(u8x8_t *u8x8)
{
    2606:	b510      	push	{r4, lr}
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SETUP_MEMORY, 0, NULL);  
    2608:	6884      	ldr	r4, [r0, #8]
    260a:	2300      	movs	r3, #0
    260c:	2200      	movs	r2, #0
    260e:	2109      	movs	r1, #9
    2610:	47a0      	blx	r4
}
    2612:	bd10      	pop	{r4, pc}

00002614 <u8x8_InitDisplay>:
  In some cases it is not required to init the display (for example if the display is already running, but the controller comes out of deep sleep mode).
  Then InitDisplay can be skipped, but u8x8_InitInterface()  (== u8x8_gpio_Init() and u8x8_cad_Init()) need to be executed.

*/
void u8x8_InitDisplay(u8x8_t *u8x8)
{
    2614:	b510      	push	{r4, lr}
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_INIT, 0, NULL);       /* this will call u8x8_d_helper_display_init() and send the init seqence to the display */
    2616:	6884      	ldr	r4, [r0, #8]
    2618:	2300      	movs	r3, #0
    261a:	2200      	movs	r2, #0
    261c:	210a      	movs	r1, #10
    261e:	47a0      	blx	r4
  /* u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_FLIP_MODE, 0, NULL);  */ /* It would make sense to call flip mode 0 here after U8X8_MSG_DISPLAY_INIT */
}
    2620:	bd10      	pop	{r4, pc}

00002622 <u8x8_RefreshDisplay>:
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_CONTRAST, value, NULL);  
}

void u8x8_RefreshDisplay(u8x8_t *u8x8)
{
    2622:	b510      	push	{r4, lr}
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_REFRESH, 0, NULL);  
    2624:	6884      	ldr	r4, [r0, #8]
    2626:	2300      	movs	r3, #0
    2628:	2200      	movs	r2, #0
    262a:	2110      	movs	r1, #16
    262c:	47a0      	blx	r4
}
    262e:	bd10      	pop	{r4, pc}

00002630 <u8x8_convert_tile_for_ssd1607>:

static uint8_t *u8x8_convert_tile_for_ssd1607(uint8_t *t)
{
	uint8_t i;
	static uint8_t buf[8];
	uint8_t *pbuf = buf;
    2630:	4a06      	ldr	r2, [pc, #24]	; (264c <u8x8_convert_tile_for_ssd1607+0x1c>)

	for( i = 0; i < 8; i++ )
    2632:	2300      	movs	r3, #0
    2634:	e005      	b.n	2642 <u8x8_convert_tile_for_ssd1607+0x12>
	{
		*pbuf++ = (*t++);
    2636:	7801      	ldrb	r1, [r0, #0]
    2638:	7011      	strb	r1, [r2, #0]
	for( i = 0; i < 8; i++ )
    263a:	3301      	adds	r3, #1
    263c:	b2db      	uxtb	r3, r3
		*pbuf++ = (*t++);
    263e:	3201      	adds	r2, #1
    2640:	3001      	adds	r0, #1
	for( i = 0; i < 8; i++ )
    2642:	2b07      	cmp	r3, #7
    2644:	d9f7      	bls.n	2636 <u8x8_convert_tile_for_ssd1607+0x6>
	}
	return buf;
}
    2646:	4801      	ldr	r0, [pc, #4]	; (264c <u8x8_convert_tile_for_ssd1607+0x1c>)
    2648:	4770      	bx	lr
    264a:	46c0      	nop			; (mov r8, r8)
    264c:	200020d4 	.word	0x200020d4

00002650 <u8x8_d_gdey0154_152x304_first_init>:
{
    2650:	b530      	push	{r4, r5, lr}
    2652:	b087      	sub	sp, #28
    2654:	0005      	movs	r5, r0
	u8x8_cad_StartTransfer(u8x8);
    2656:	4b17      	ldr	r3, [pc, #92]	; (26b4 <u8x8_d_gdey0154_152x304_first_init+0x64>)
    2658:	4798      	blx	r3
	u8x8_cad_SendCmd(u8x8, 0x10);
    265a:	2110      	movs	r1, #16
    265c:	0028      	movs	r0, r5
    265e:	4b16      	ldr	r3, [pc, #88]	; (26b8 <u8x8_d_gdey0154_152x304_first_init+0x68>)
    2660:	4798      	blx	r3
	uint8_t dat[19] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    2662:	2213      	movs	r2, #19
    2664:	2100      	movs	r1, #0
    2666:	a801      	add	r0, sp, #4
    2668:	4b14      	ldr	r3, [pc, #80]	; (26bc <u8x8_d_gdey0154_152x304_first_init+0x6c>)
    266a:	4798      	blx	r3
	for(uint16_t bytesY = 0; bytesY < 304; bytesY ++){
    266c:	2400      	movs	r4, #0
    266e:	e006      	b.n	267e <u8x8_d_gdey0154_152x304_first_init+0x2e>
		u8x8_cad_SendData(u8x8, 19, dat);
    2670:	aa01      	add	r2, sp, #4
    2672:	2113      	movs	r1, #19
    2674:	0028      	movs	r0, r5
    2676:	4b12      	ldr	r3, [pc, #72]	; (26c0 <u8x8_d_gdey0154_152x304_first_init+0x70>)
    2678:	4798      	blx	r3
	for(uint16_t bytesY = 0; bytesY < 304; bytesY ++){
    267a:	3401      	adds	r4, #1
    267c:	b2a4      	uxth	r4, r4
    267e:	2330      	movs	r3, #48	; 0x30
    2680:	33ff      	adds	r3, #255	; 0xff
    2682:	429c      	cmp	r4, r3
    2684:	d9f4      	bls.n	2670 <u8x8_d_gdey0154_152x304_first_init+0x20>
	u8x8_cad_SendCmd(u8x8, 0x13);
    2686:	2113      	movs	r1, #19
    2688:	0028      	movs	r0, r5
    268a:	4b0b      	ldr	r3, [pc, #44]	; (26b8 <u8x8_d_gdey0154_152x304_first_init+0x68>)
    268c:	4798      	blx	r3
	for(uint16_t bytesY = 0; bytesY < 304; bytesY ++){
    268e:	2400      	movs	r4, #0
    2690:	e006      	b.n	26a0 <u8x8_d_gdey0154_152x304_first_init+0x50>
		u8x8_cad_SendData(u8x8, 19, dat);
    2692:	aa01      	add	r2, sp, #4
    2694:	2113      	movs	r1, #19
    2696:	0028      	movs	r0, r5
    2698:	4b09      	ldr	r3, [pc, #36]	; (26c0 <u8x8_d_gdey0154_152x304_first_init+0x70>)
    269a:	4798      	blx	r3
	for(uint16_t bytesY = 0; bytesY < 304; bytesY ++){
    269c:	3401      	adds	r4, #1
    269e:	b2a4      	uxth	r4, r4
    26a0:	2330      	movs	r3, #48	; 0x30
    26a2:	33ff      	adds	r3, #255	; 0xff
    26a4:	429c      	cmp	r4, r3
    26a6:	d9f4      	bls.n	2692 <u8x8_d_gdey0154_152x304_first_init+0x42>
	u8x8_cad_EndTransfer(u8x8);
    26a8:	0028      	movs	r0, r5
    26aa:	4b06      	ldr	r3, [pc, #24]	; (26c4 <u8x8_d_gdey0154_152x304_first_init+0x74>)
    26ac:	4798      	blx	r3
}
    26ae:	b007      	add	sp, #28
    26b0:	bd30      	pop	{r4, r5, pc}
    26b2:	46c0      	nop			; (mov r8, r8)
    26b4:	0000248f 	.word	0x0000248f
    26b8:	00002465 	.word	0x00002465
    26bc:	00004c95 	.word	0x00004c95
    26c0:	00002481 	.word	0x00002481
    26c4:	0000249d 	.word	0x0000249d

000026c8 <u8x8_d_ssd1607_draw_tile>:

static void u8x8_d_ssd1607_draw_tile(u8x8_t *u8x8, uint8_t arg_int, void *arg_ptr) U8X8_NOINLINE;
static void u8x8_d_ssd1607_draw_tile(u8x8_t *u8x8, uint8_t arg_int, void *arg_ptr)
{
    26c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    26ca:	46ce      	mov	lr, r9
    26cc:	4647      	mov	r7, r8
    26ce:	b580      	push	{r7, lr}
    26d0:	0006      	movs	r6, r0
    26d2:	000f      	movs	r7, r1
    26d4:	4690      	mov	r8, r2
	uint16_t x;
	uint16_t c, page;
	uint8_t *ptr;
	u8x8_cad_StartTransfer(u8x8);
    26d6:	4b26      	ldr	r3, [pc, #152]	; (2770 <u8x8_d_ssd1607_draw_tile+0xa8>)
    26d8:	4798      	blx	r3

	page = u8x8->display_info->tile_height;
    26da:	6833      	ldr	r3, [r6, #0]
    26dc:	7c5c      	ldrb	r4, [r3, #17]
	page --;
    26de:	3c01      	subs	r4, #1
    26e0:	b2a4      	uxth	r4, r4
	page -= (((u8x8_tile_t *)arg_ptr)->y_pos);
    26e2:	4643      	mov	r3, r8
    26e4:	799b      	ldrb	r3, [r3, #6]
    26e6:	1ae4      	subs	r4, r4, r3
    26e8:	b2a4      	uxth	r4, r4
	
	x = ((u8x8_tile_t *)arg_ptr)->x_pos;
	x *= 8;
	x += u8x8->x_offset;
	
	u8x8_cad_SendCmd(u8x8, 0x91);			//Partial Window (PTL)
    26ea:	2191      	movs	r1, #145	; 0x91
    26ec:	0030      	movs	r0, r6
    26ee:	4b21      	ldr	r3, [pc, #132]	; (2774 <u8x8_d_ssd1607_draw_tile+0xac>)
    26f0:	4699      	mov	r9, r3
    26f2:	4798      	blx	r3
	u8x8_cad_SendCmd(u8x8, 0x90);			//Partial In (PTIN)
    26f4:	2190      	movs	r1, #144	; 0x90
    26f6:	0030      	movs	r0, r6
    26f8:	47c8      	blx	r9
	
	u8x8_cad_SendArg(u8x8, page << 3);		//HRST[7:3]
    26fa:	00e4      	lsls	r4, r4, #3
    26fc:	b2e4      	uxtb	r4, r4
    26fe:	0021      	movs	r1, r4
    2700:	0030      	movs	r0, r6
    2702:	4d1d      	ldr	r5, [pc, #116]	; (2778 <u8x8_d_ssd1607_draw_tile+0xb0>)
    2704:	47a8      	blx	r5
	u8x8_cad_SendArg(u8x8, page << 3);		//HRED[7:3]
    2706:	0021      	movs	r1, r4
    2708:	0030      	movs	r0, r6
    270a:	47a8      	blx	r5

	u8x8_cad_SendArg(u8x8, 0x00);			//VRST[8]
    270c:	2100      	movs	r1, #0
    270e:	0030      	movs	r0, r6
    2710:	47a8      	blx	r5
	u8x8_cad_SendArg(u8x8, 0x00);			//VRST[7:0]
    2712:	2100      	movs	r1, #0
    2714:	0030      	movs	r0, r6
    2716:	47a8      	blx	r5

	u8x8_cad_SendArg(u8x8, 0x01);			//VRED[8]
    2718:	2101      	movs	r1, #1
    271a:	0030      	movs	r0, r6
    271c:	47a8      	blx	r5
	u8x8_cad_SendArg(u8x8, 0x30);			//VRED[7:0]
    271e:	2130      	movs	r1, #48	; 0x30
    2720:	0030      	movs	r0, r6
    2722:	47a8      	blx	r5
	u8x8_cad_SendArg(u8x8, 1);				//PT_SCAN
    2724:	2101      	movs	r1, #1
    2726:	0030      	movs	r0, r6
    2728:	47a8      	blx	r5
	u8x8_cad_SendCmd(u8x8, 0x10 );
    272a:	2110      	movs	r1, #16
    272c:	0030      	movs	r0, r6
    272e:	47c8      	blx	r9
	
	do
	{
		c = ((u8x8_tile_t *)arg_ptr)->cnt;
    2730:	4643      	mov	r3, r8
    2732:	791c      	ldrb	r4, [r3, #4]
		
		ptr = ((u8x8_tile_t *)arg_ptr)->tile_ptr;
    2734:	681d      	ldr	r5, [r3, #0]
		do
		{
			u8x8_cad_SendData(u8x8, 8, u8x8_convert_tile_for_ssd1607(ptr));
    2736:	0028      	movs	r0, r5
    2738:	4b10      	ldr	r3, [pc, #64]	; (277c <u8x8_d_ssd1607_draw_tile+0xb4>)
    273a:	4798      	blx	r3
    273c:	0002      	movs	r2, r0
    273e:	2108      	movs	r1, #8
    2740:	0030      	movs	r0, r6
    2742:	4b0f      	ldr	r3, [pc, #60]	; (2780 <u8x8_d_ssd1607_draw_tile+0xb8>)
    2744:	4798      	blx	r3
			ptr += 8;
    2746:	3508      	adds	r5, #8
			x += 8;
			c--;
    2748:	3c01      	subs	r4, #1
    274a:	b2a4      	uxth	r4, r4
		} while( c > 0 );
    274c:	2c00      	cmp	r4, #0
    274e:	d1f2      	bne.n	2736 <u8x8_d_ssd1607_draw_tile+0x6e>
		arg_int--;
    2750:	3f01      	subs	r7, #1
    2752:	b2ff      	uxtb	r7, r7
	} while( arg_int > 0 );
    2754:	2f00      	cmp	r7, #0
    2756:	d1eb      	bne.n	2730 <u8x8_d_ssd1607_draw_tile+0x68>
	u8x8_cad_SendCmd(u8x8, 0x92);		//Partial Out (PTOUT)
    2758:	2192      	movs	r1, #146	; 0x92
    275a:	0030      	movs	r0, r6
    275c:	4b05      	ldr	r3, [pc, #20]	; (2774 <u8x8_d_ssd1607_draw_tile+0xac>)
    275e:	4798      	blx	r3
	u8x8_cad_EndTransfer(u8x8);
    2760:	0030      	movs	r0, r6
    2762:	4b08      	ldr	r3, [pc, #32]	; (2784 <u8x8_d_ssd1607_draw_tile+0xbc>)
    2764:	4798      	blx	r3
}
    2766:	bc0c      	pop	{r2, r3}
    2768:	4690      	mov	r8, r2
    276a:	4699      	mov	r9, r3
    276c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    276e:	46c0      	nop			; (mov r8, r8)
    2770:	0000248f 	.word	0x0000248f
    2774:	00002465 	.word	0x00002465
    2778:	00002473 	.word	0x00002473
    277c:	00002631 	.word	0x00002631
    2780:	00002481 	.word	0x00002481
    2784:	0000249d 	.word	0x0000249d

00002788 <u8x8_d_gdey0154_152x304>:
	U8X8_END_TRANSFER(),             	/* disable chip */
	U8X8_END()             			/* end of sequence */
};

uint8_t u8x8_d_gdey0154_152x304(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    2788:	b570      	push	{r4, r5, r6, lr}
    278a:	0004      	movs	r4, r0
    278c:	0010      	movs	r0, r2
	switch(msg)
    278e:	3909      	subs	r1, #9
    2790:	b2cd      	uxtb	r5, r1
    2792:	2d07      	cmp	r5, #7
    2794:	d803      	bhi.n	279e <u8x8_d_gdey0154_152x304+0x16>
    2796:	00a9      	lsls	r1, r5, #2
    2798:	4a15      	ldr	r2, [pc, #84]	; (27f0 <u8x8_d_gdey0154_152x304+0x68>)
    279a:	5852      	ldr	r2, [r2, r1]
    279c:	4697      	mov	pc, r2
		break;
		case U8X8_MSG_DISPLAY_REFRESH:
		u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1607_to_display_seq);
		break;
		default:
		return 0;
    279e:	2000      	movs	r0, #0
    27a0:	e024      	b.n	27ec <u8x8_d_gdey0154_152x304+0x64>
		u8x8_d_helper_display_setup_memory(u8x8, &u8x8_ssd1607_200x200_display_info);
    27a2:	4914      	ldr	r1, [pc, #80]	; (27f4 <u8x8_d_gdey0154_152x304+0x6c>)
    27a4:	0020      	movs	r0, r4
    27a6:	4b14      	ldr	r3, [pc, #80]	; (27f8 <u8x8_d_gdey0154_152x304+0x70>)
    27a8:	4798      	blx	r3
	}
	return 1;
    27aa:	2001      	movs	r0, #1
		break;
    27ac:	e01e      	b.n	27ec <u8x8_d_gdey0154_152x304+0x64>
		u8x8_d_helper_display_init(u8x8);
    27ae:	0020      	movs	r0, r4
    27b0:	4b12      	ldr	r3, [pc, #72]	; (27fc <u8x8_d_gdey0154_152x304+0x74>)
    27b2:	4798      	blx	r3
		u8x8_cad_SendSequence(u8x8, u8x8_d_gdey0154_152x304_init_seq);
    27b4:	4912      	ldr	r1, [pc, #72]	; (2800 <u8x8_d_gdey0154_152x304+0x78>)
    27b6:	0020      	movs	r0, r4
    27b8:	4b12      	ldr	r3, [pc, #72]	; (2804 <u8x8_d_gdey0154_152x304+0x7c>)
    27ba:	4798      	blx	r3
		delay_ms(20);
    27bc:	2014      	movs	r0, #20
    27be:	4d12      	ldr	r5, [pc, #72]	; (2808 <u8x8_d_gdey0154_152x304+0x80>)
    27c0:	47a8      	blx	r5
		u8x8_d_gdey0154_152x304_first_init(u8x8);
    27c2:	0020      	movs	r0, r4
    27c4:	4b11      	ldr	r3, [pc, #68]	; (280c <u8x8_d_gdey0154_152x304+0x84>)
    27c6:	4798      	blx	r3
		delay_ms(20);
    27c8:	2014      	movs	r0, #20
    27ca:	47a8      	blx	r5
	return 1;
    27cc:	2001      	movs	r0, #1
		break;
    27ce:	e00d      	b.n	27ec <u8x8_d_gdey0154_152x304+0x64>
		u8x8_d_ssd1607_draw_tile(u8x8, arg_int, arg_ptr);
    27d0:	001a      	movs	r2, r3
    27d2:	0001      	movs	r1, r0
    27d4:	0020      	movs	r0, r4
    27d6:	4b0e      	ldr	r3, [pc, #56]	; (2810 <u8x8_d_gdey0154_152x304+0x88>)
    27d8:	4798      	blx	r3
	return 1;
    27da:	2001      	movs	r0, #1
		break;
    27dc:	e006      	b.n	27ec <u8x8_d_gdey0154_152x304+0x64>
		u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1607_to_display_seq);
    27de:	490d      	ldr	r1, [pc, #52]	; (2814 <u8x8_d_gdey0154_152x304+0x8c>)
    27e0:	0020      	movs	r0, r4
    27e2:	4b08      	ldr	r3, [pc, #32]	; (2804 <u8x8_d_gdey0154_152x304+0x7c>)
    27e4:	4798      	blx	r3
	return 1;
    27e6:	2001      	movs	r0, #1
		break;
    27e8:	e000      	b.n	27ec <u8x8_d_gdey0154_152x304+0x64>
	return 1;
    27ea:	2001      	movs	r0, #1
}
    27ec:	bd70      	pop	{r4, r5, r6, pc}
    27ee:	46c0      	nop			; (mov r8, r8)
    27f0:	0000a4ec 	.word	0x0000a4ec
    27f4:	0000a54c 	.word	0x0000a54c
    27f8:	00002585 	.word	0x00002585
    27fc:	00002591 	.word	0x00002591
    2800:	0000a50c 	.word	0x0000a50c
    2804:	000024ad 	.word	0x000024ad
    2808:	000001e1 	.word	0x000001e1
    280c:	00002651 	.word	0x00002651
    2810:	000026c9 	.word	0x000026c9
    2814:	0000a544 	.word	0x0000a544

00002818 <u8x8_gpio_call>:

#include "u8x8.h"


void u8x8_gpio_call(u8x8_t *u8x8, uint8_t msg, uint8_t arg)
{
    2818:	b510      	push	{r4, lr}
  u8x8->gpio_and_delay_cb(u8x8, msg, arg, NULL);
    281a:	6944      	ldr	r4, [r0, #20]
    281c:	2300      	movs	r3, #0
    281e:	47a0      	blx	r4
}
    2820:	bd10      	pop	{r4, pc}

00002822 <u8x8_dummy_cb>:
/* universal dummy callback, which will be default for all callbacks */
uint8_t u8x8_dummy_cb(U8X8_UNUSED u8x8_t *u8x8, U8X8_UNUSED uint8_t msg, U8X8_UNUSED uint8_t arg_int, U8X8_UNUSED void *arg_ptr)
{
  /* the dummy callback will not handle any message and will fail for all messages */
  return 0;
}
    2822:	2000      	movs	r0, #0
    2824:	4770      	bx	lr
	...

00002828 <u8x8_SetupDefaults>:
  Args:
    u8x8	An empty u8x8 structure
*/
void u8x8_SetupDefaults(u8x8_t *u8x8)
{
    u8x8->display_info = NULL;
    2828:	2300      	movs	r3, #0
    282a:	6003      	str	r3, [r0, #0]
    u8x8->display_cb = u8x8_dummy_cb;
    282c:	4a07      	ldr	r2, [pc, #28]	; (284c <u8x8_SetupDefaults+0x24>)
    282e:	6082      	str	r2, [r0, #8]
    u8x8->cad_cb = u8x8_dummy_cb;
    2830:	60c2      	str	r2, [r0, #12]
    u8x8->byte_cb = u8x8_dummy_cb;
    2832:	6102      	str	r2, [r0, #16]
    u8x8->gpio_and_delay_cb = u8x8_dummy_cb;
    2834:	6142      	str	r2, [r0, #20]
    u8x8->is_font_inverse_mode = 0;
    2836:	2223      	movs	r2, #35	; 0x23
    2838:	5483      	strb	r3, [r0, r2]
    //u8x8->device_address = 0;
    u8x8->utf8_state = 0;		/* also reset by u8x8_utf8_init */
    283a:	3203      	adds	r2, #3
    283c:	5483      	strb	r3, [r0, r2]
    u8x8->bus_clock = 0;		/* issue 769 */
    283e:	6183      	str	r3, [r0, #24]
    u8x8->i2c_address = 255;
    2840:	33ff      	adds	r3, #255	; 0xff
    2842:	3a02      	subs	r2, #2
    2844:	5483      	strb	r3, [r0, r2]
    u8x8->debounce_default_pin_state = 255;	/* assume all low active buttons */
    2846:	3204      	adds	r2, #4
    2848:	5483      	strb	r3, [r0, r2]
    uint8_t i;
    for( i = 0; i < U8X8_PIN_CNT; i++ )
      u8x8->pins[i] = U8X8_PIN_NONE;
  }
#endif
}
    284a:	4770      	bx	lr
    284c:	00002823 	.word	0x00002823

00002850 <u8x8_Setup>:
    byte_cb			Display controller/communication specific callback funtion
    gpio_and_delay_cb	Environment specific callback function

*/
void u8x8_Setup(u8x8_t *u8x8, u8x8_msg_cb display_cb, u8x8_msg_cb cad_cb, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)
{
    2850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2852:	0004      	movs	r4, r0
    2854:	000f      	movs	r7, r1
    2856:	0016      	movs	r6, r2
    2858:	001d      	movs	r5, r3
  /* setup defaults and reset pins to U8X8_PIN_NONE */
  u8x8_SetupDefaults(u8x8);
    285a:	4b05      	ldr	r3, [pc, #20]	; (2870 <u8x8_Setup+0x20>)
    285c:	4798      	blx	r3

  /* setup specific callbacks */
  u8x8->display_cb = display_cb;
    285e:	60a7      	str	r7, [r4, #8]
  u8x8->cad_cb = cad_cb;
    2860:	60e6      	str	r6, [r4, #12]
  u8x8->byte_cb = byte_cb;
    2862:	6125      	str	r5, [r4, #16]
  u8x8->gpio_and_delay_cb = gpio_and_delay_cb;
    2864:	9b06      	ldr	r3, [sp, #24]
    2866:	6163      	str	r3, [r4, #20]

  /* setup display info */
  u8x8_SetupMemory(u8x8);
    2868:	0020      	movs	r0, r4
    286a:	4b02      	ldr	r3, [pc, #8]	; (2874 <u8x8_Setup+0x24>)
    286c:	4798      	blx	r3
}
    286e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2870:	00002829 	.word	0x00002829
    2874:	00002607 	.word	0x00002607

00002878 <RF_select>:
    //if (!inISR) sei();
}

// Enable SPI transfer
void RF_select()
{
    2878:	b510      	push	{r4, lr}
    RF_Select();
    287a:	4b01      	ldr	r3, [pc, #4]	; (2880 <RF_select+0x8>)
    287c:	4798      	blx	r3
}
    287e:	bd10      	pop	{r4, pc}
    2880:	00001271 	.word	0x00001271

00002884 <RF_unselect>:

// Disable SPI transfer
void RF_unselect()
{
    2884:	b510      	push	{r4, lr}
     RF_Unselect();
    2886:	4b01      	ldr	r3, [pc, #4]	; (288c <RF_unselect+0x8>)
    2888:	4798      	blx	r3
}
    288a:	bd10      	pop	{r4, pc}
    288c:	0000127d 	.word	0x0000127d

00002890 <readReg>:
{
    2890:	b510      	push	{r4, lr}
    2892:	0004      	movs	r4, r0
    RF_select();
    2894:	4b06      	ldr	r3, [pc, #24]	; (28b0 <readReg+0x20>)
    2896:	4798      	blx	r3
    SPI0_Write_byte(addr & 0x7F);
    2898:	207f      	movs	r0, #127	; 0x7f
    289a:	4020      	ands	r0, r4
    289c:	4b05      	ldr	r3, [pc, #20]	; (28b4 <readReg+0x24>)
    289e:	4798      	blx	r3
    uint8_t regval = SPI0_Read_byte();
    28a0:	4b05      	ldr	r3, [pc, #20]	; (28b8 <readReg+0x28>)
    28a2:	4798      	blx	r3
    28a4:	0004      	movs	r4, r0
    RF_unselect();
    28a6:	4b05      	ldr	r3, [pc, #20]	; (28bc <readReg+0x2c>)
    28a8:	4798      	blx	r3
}
    28aa:	0020      	movs	r0, r4
    28ac:	bd10      	pop	{r4, pc}
    28ae:	46c0      	nop			; (mov r8, r8)
    28b0:	00002879 	.word	0x00002879
    28b4:	000012ed 	.word	0x000012ed
    28b8:	000012c5 	.word	0x000012c5
    28bc:	00002885 	.word	0x00002885

000028c0 <writeReg>:
{
    28c0:	b570      	push	{r4, r5, r6, lr}
    28c2:	0005      	movs	r5, r0
    28c4:	000c      	movs	r4, r1
    RF_select();
    28c6:	4b06      	ldr	r3, [pc, #24]	; (28e0 <writeReg+0x20>)
    28c8:	4798      	blx	r3
    SPI0_Write_byte(addr | 0x80);
    28ca:	2080      	movs	r0, #128	; 0x80
    28cc:	4240      	negs	r0, r0
    28ce:	4328      	orrs	r0, r5
    28d0:	b2c0      	uxtb	r0, r0
    28d2:	4d04      	ldr	r5, [pc, #16]	; (28e4 <writeReg+0x24>)
    28d4:	47a8      	blx	r5
    SPI0_Write_byte(value);
    28d6:	0020      	movs	r0, r4
    28d8:	47a8      	blx	r5
    RF_unselect();
    28da:	4b03      	ldr	r3, [pc, #12]	; (28e8 <writeReg+0x28>)
    28dc:	4798      	blx	r3
}
    28de:	bd70      	pop	{r4, r5, r6, pc}
    28e0:	00002879 	.word	0x00002879
    28e4:	000012ed 	.word	0x000012ed
    28e8:	00002885 	.word	0x00002885

000028ec <rfm69_init>:
{	
    28ec:	b570      	push	{r4, r5, r6, lr}
	RF_Reset();
    28ee:	4b2d      	ldr	r3, [pc, #180]	; (29a4 <rfm69_init+0xb8>)
    28f0:	4798      	blx	r3
	uint8_t tmp_data = readReg(REG_VERSION);
    28f2:	2010      	movs	r0, #16
    28f4:	4d2c      	ldr	r5, [pc, #176]	; (29a8 <rfm69_init+0xbc>)
    28f6:	47a8      	blx	r5
	writeReg(REG_OPMODE, RF_OPMODE_STANDBY);
    28f8:	2104      	movs	r1, #4
    28fa:	2001      	movs	r0, #1
    28fc:	4c2b      	ldr	r4, [pc, #172]	; (29ac <rfm69_init+0xc0>)
    28fe:	47a0      	blx	r4
	tmp_data = readReg(REG_IRQFLAGS1);
    2900:	2027      	movs	r0, #39	; 0x27
    2902:	47a8      	blx	r5
	writeReg(REG_FIFOTHRESH, 0x8f);
    2904:	218f      	movs	r1, #143	; 0x8f
    2906:	203c      	movs	r0, #60	; 0x3c
    2908:	47a0      	blx	r4
	writeReg(REG_TESTDAGC, 0x30);
    290a:	2130      	movs	r1, #48	; 0x30
    290c:	206f      	movs	r0, #111	; 0x6f
    290e:	47a0      	blx	r4
	writeReg(REG_TESTPA1, 0x55); //only for HW
    2910:	2155      	movs	r1, #85	; 0x55
    2912:	205a      	movs	r0, #90	; 0x5a
    2914:	47a0      	blx	r4
	writeReg(REG_TESTPA2, 0x70); //only for HW
    2916:	2170      	movs	r1, #112	; 0x70
    2918:	205c      	movs	r0, #92	; 0x5c
    291a:	47a0      	blx	r4
	tmp_data = readReg(REG_SYNCCONFIG);
    291c:	202e      	movs	r0, #46	; 0x2e
    291e:	47a8      	blx	r5
	writeReg(REG_SYNCVALUE1, 0x2d);
    2920:	212d      	movs	r1, #45	; 0x2d
    2922:	202f      	movs	r0, #47	; 0x2f
    2924:	47a0      	blx	r4
	writeReg(REG_SYNCVALUE2, 0xd4);
    2926:	21d4      	movs	r1, #212	; 0xd4
    2928:	2030      	movs	r0, #48	; 0x30
    292a:	47a0      	blx	r4
	writeReg(REG_SYNCCONFIG, 0x88);
    292c:	2188      	movs	r1, #136	; 0x88
    292e:	202e      	movs	r0, #46	; 0x2e
    2930:	47a0      	blx	r4
	writeReg(REG_DATAMODUL, RF_DATAMODUL_MODULATIONSHAPING_01);
    2932:	2101      	movs	r1, #1
    2934:	2002      	movs	r0, #2
    2936:	47a0      	blx	r4
	writeReg(REG_BITRATEMSB, 0x00);
    2938:	2100      	movs	r1, #0
    293a:	2003      	movs	r0, #3
    293c:	47a0      	blx	r4
	writeReg(REG_BITRATELSB, 0x80);
    293e:	2180      	movs	r1, #128	; 0x80
    2940:	2004      	movs	r0, #4
    2942:	47a0      	blx	r4
	writeReg(REG_FDEVMSB, 0x10);
    2944:	2110      	movs	r1, #16
    2946:	2005      	movs	r0, #5
    2948:	47a0      	blx	r4
	writeReg(REG_FDEVLSB, 0x00);
    294a:	2100      	movs	r1, #0
    294c:	2006      	movs	r0, #6
    294e:	47a0      	blx	r4
	writeReg(REG_RXBW, RF_RXBW_DCCFREQ_111);
    2950:	21e0      	movs	r1, #224	; 0xe0
    2952:	2019      	movs	r0, #25
    2954:	47a0      	blx	r4
	writeReg(REG_AFCBW, RF_AFCBW_DCCFREQAFC_111);
    2956:	21e0      	movs	r1, #224	; 0xe0
    2958:	201a      	movs	r0, #26
    295a:	47a0      	blx	r4
	writeReg(REG_PACKETCONFIG1, 0xD0);
    295c:	21d0      	movs	r1, #208	; 0xd0
    295e:	2037      	movs	r0, #55	; 0x37
    2960:	47a0      	blx	r4
	writeReg(REG_PREAMBLEMSB, 0x00);
    2962:	2100      	movs	r1, #0
    2964:	202c      	movs	r0, #44	; 0x2c
    2966:	47a0      	blx	r4
	writeReg(REG_PREAMBLELSB , 0x04);
    2968:	2104      	movs	r1, #4
    296a:	202d      	movs	r0, #45	; 0x2d
    296c:	47a0      	blx	r4
	writeReg(REG_FRFMSB, RF_FRFMSB_868);
    296e:	21d9      	movs	r1, #217	; 0xd9
    2970:	2007      	movs	r0, #7
    2972:	47a0      	blx	r4
	writeReg(REG_FRFMID, RF_FRFMID_868);
    2974:	2100      	movs	r1, #0
    2976:	2008      	movs	r0, #8
    2978:	47a0      	blx	r4
	writeReg(REG_FRFLSB, RF_FRFLSB_868);
    297a:	2100      	movs	r1, #0
    297c:	2009      	movs	r0, #9
    297e:	47a0      	blx	r4
	tmp_data = readReg(REG_PACKETCONFIG2); //2
    2980:	203d      	movs	r0, #61	; 0x3d
    2982:	47a8      	blx	r5
    2984:	0005      	movs	r5, r0
	writeReg(REG_PACKETCONFIG2, RF_PACKET2_AUTORXRESTART_ON);
    2986:	2102      	movs	r1, #2
    2988:	203d      	movs	r0, #61	; 0x3d
    298a:	47a0      	blx	r4
	writeReg(REG_PALEVEL, RF_PALEVEL_OUTPUTPOWER_11111);
    298c:	211f      	movs	r1, #31
    298e:	2011      	movs	r0, #17
    2990:	47a0      	blx	r4
	writeReg(REG_DIOMAPPING1 , RF_DIOMAPPING1_DIO0_01);
    2992:	2140      	movs	r1, #64	; 0x40
    2994:	2025      	movs	r0, #37	; 0x25
    2996:	47a0      	blx	r4
	writeReg(REG_OPMODE, RF_OPMODE_RECEIVER);
    2998:	2110      	movs	r1, #16
    299a:	2001      	movs	r0, #1
    299c:	47a0      	blx	r4
}
    299e:	0028      	movs	r0, r5
    29a0:	bd70      	pop	{r4, r5, r6, pc}
    29a2:	46c0      	nop			; (mov r8, r8)
    29a4:	00001289 	.word	0x00001289
    29a8:	00002891 	.word	0x00002891
    29ac:	000028c1 	.word	0x000028c1

000029b0 <setHighPowerRegs>:
{
    29b0:	b510      	push	{r4, lr}
    if(onOff==1)
    29b2:	2801      	cmp	r0, #1
    29b4:	d007      	beq.n	29c6 <setHighPowerRegs+0x16>
        writeReg(REG_TESTPA1, 0x55);
    29b6:	2155      	movs	r1, #85	; 0x55
    29b8:	205a      	movs	r0, #90	; 0x5a
    29ba:	4c07      	ldr	r4, [pc, #28]	; (29d8 <setHighPowerRegs+0x28>)
    29bc:	47a0      	blx	r4
        writeReg(REG_TESTPA2, 0x70);
    29be:	2170      	movs	r1, #112	; 0x70
    29c0:	205c      	movs	r0, #92	; 0x5c
    29c2:	47a0      	blx	r4
}
    29c4:	bd10      	pop	{r4, pc}
    writeReg(REG_TESTPA1, 0x5D);
    29c6:	215d      	movs	r1, #93	; 0x5d
    29c8:	3059      	adds	r0, #89	; 0x59
    29ca:	4c03      	ldr	r4, [pc, #12]	; (29d8 <setHighPowerRegs+0x28>)
    29cc:	47a0      	blx	r4
    writeReg(REG_TESTPA2, 0x7C);
    29ce:	217c      	movs	r1, #124	; 0x7c
    29d0:	205c      	movs	r0, #92	; 0x5c
    29d2:	47a0      	blx	r4
    29d4:	e7f6      	b.n	29c4 <setHighPowerRegs+0x14>
    29d6:	46c0      	nop			; (mov r8, r8)
    29d8:	000028c1 	.word	0x000028c1

000029dc <setMode>:
{
    29dc:	b510      	push	{r4, lr}
    29de:	0004      	movs	r4, r0
    if (newMode == mode)
    29e0:	4b30      	ldr	r3, [pc, #192]	; (2aa4 <setMode+0xc8>)
    29e2:	781b      	ldrb	r3, [r3, #0]
    29e4:	b2db      	uxtb	r3, r3
    29e6:	4283      	cmp	r3, r0
    29e8:	d044      	beq.n	2a74 <setMode+0x98>
    switch (newMode)
    29ea:	2804      	cmp	r0, #4
    29ec:	d842      	bhi.n	2a74 <setMode+0x98>
    29ee:	0083      	lsls	r3, r0, #2
    29f0:	4a2d      	ldr	r2, [pc, #180]	; (2aa8 <setMode+0xcc>)
    29f2:	58d3      	ldr	r3, [r2, r3]
    29f4:	469f      	mov	pc, r3
            writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_TRANSMITTER);
    29f6:	2001      	movs	r0, #1
    29f8:	4b2c      	ldr	r3, [pc, #176]	; (2aac <setMode+0xd0>)
    29fa:	4798      	blx	r3
    29fc:	b241      	sxtb	r1, r0
    29fe:	231c      	movs	r3, #28
    2a00:	4399      	bics	r1, r3
    2a02:	200c      	movs	r0, #12
    2a04:	4301      	orrs	r1, r0
    2a06:	b2c9      	uxtb	r1, r1
    2a08:	2001      	movs	r0, #1
    2a0a:	4b29      	ldr	r3, [pc, #164]	; (2ab0 <setMode+0xd4>)
    2a0c:	4798      	blx	r3
            if (isRFM69HW) setHighPowerRegs(1);
    2a0e:	4b29      	ldr	r3, [pc, #164]	; (2ab4 <setMode+0xd8>)
    2a10:	781b      	ldrb	r3, [r3, #0]
    2a12:	2b00      	cmp	r3, #0
    2a14:	d023      	beq.n	2a5e <setMode+0x82>
    2a16:	2001      	movs	r0, #1
    2a18:	4b27      	ldr	r3, [pc, #156]	; (2ab8 <setMode+0xdc>)
    2a1a:	4798      	blx	r3
    2a1c:	e01f      	b.n	2a5e <setMode+0x82>
            writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_RECEIVER);
    2a1e:	2001      	movs	r0, #1
    2a20:	4b22      	ldr	r3, [pc, #136]	; (2aac <setMode+0xd0>)
    2a22:	4798      	blx	r3
    2a24:	b241      	sxtb	r1, r0
    2a26:	231c      	movs	r3, #28
    2a28:	4399      	bics	r1, r3
    2a2a:	2010      	movs	r0, #16
    2a2c:	4301      	orrs	r1, r0
    2a2e:	b2c9      	uxtb	r1, r1
    2a30:	2001      	movs	r0, #1
    2a32:	4b1f      	ldr	r3, [pc, #124]	; (2ab0 <setMode+0xd4>)
    2a34:	4798      	blx	r3
            if (isRFM69HW) setHighPowerRegs(0);
    2a36:	4b1f      	ldr	r3, [pc, #124]	; (2ab4 <setMode+0xd8>)
    2a38:	781b      	ldrb	r3, [r3, #0]
    2a3a:	2b00      	cmp	r3, #0
    2a3c:	d00f      	beq.n	2a5e <setMode+0x82>
    2a3e:	2000      	movs	r0, #0
    2a40:	4b1d      	ldr	r3, [pc, #116]	; (2ab8 <setMode+0xdc>)
    2a42:	4798      	blx	r3
    2a44:	e00b      	b.n	2a5e <setMode+0x82>
            writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_SYNTHESIZER);
    2a46:	2001      	movs	r0, #1
    2a48:	4b18      	ldr	r3, [pc, #96]	; (2aac <setMode+0xd0>)
    2a4a:	4798      	blx	r3
    2a4c:	b241      	sxtb	r1, r0
    2a4e:	231c      	movs	r3, #28
    2a50:	4399      	bics	r1, r3
    2a52:	2008      	movs	r0, #8
    2a54:	4301      	orrs	r1, r0
    2a56:	b2c9      	uxtb	r1, r1
    2a58:	2001      	movs	r0, #1
    2a5a:	4b15      	ldr	r3, [pc, #84]	; (2ab0 <setMode+0xd4>)
    2a5c:	4798      	blx	r3
    while (mode == RF69_MODE_SLEEP && (readReg(REG_IRQFLAGS1) & RF_IRQFLAGS1_MODEREADY) == 0x00); // wait for ModeReady
    2a5e:	4b11      	ldr	r3, [pc, #68]	; (2aa4 <setMode+0xc8>)
    2a60:	781b      	ldrb	r3, [r3, #0]
    2a62:	2b00      	cmp	r3, #0
    2a64:	d104      	bne.n	2a70 <setMode+0x94>
    2a66:	2027      	movs	r0, #39	; 0x27
    2a68:	4b10      	ldr	r3, [pc, #64]	; (2aac <setMode+0xd0>)
    2a6a:	4798      	blx	r3
    2a6c:	0603      	lsls	r3, r0, #24
    2a6e:	d5f6      	bpl.n	2a5e <setMode+0x82>
    mode = newMode;
    2a70:	4b0c      	ldr	r3, [pc, #48]	; (2aa4 <setMode+0xc8>)
    2a72:	701c      	strb	r4, [r3, #0]
}
    2a74:	bd10      	pop	{r4, pc}
            writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_STANDBY);
    2a76:	2001      	movs	r0, #1
    2a78:	4b0c      	ldr	r3, [pc, #48]	; (2aac <setMode+0xd0>)
    2a7a:	4798      	blx	r3
    2a7c:	b241      	sxtb	r1, r0
    2a7e:	231c      	movs	r3, #28
    2a80:	4399      	bics	r1, r3
    2a82:	2004      	movs	r0, #4
    2a84:	4301      	orrs	r1, r0
    2a86:	b2c9      	uxtb	r1, r1
    2a88:	2001      	movs	r0, #1
    2a8a:	4b09      	ldr	r3, [pc, #36]	; (2ab0 <setMode+0xd4>)
    2a8c:	4798      	blx	r3
            break;
    2a8e:	e7e6      	b.n	2a5e <setMode+0x82>
            writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_SLEEP);
    2a90:	2001      	movs	r0, #1
    2a92:	4b06      	ldr	r3, [pc, #24]	; (2aac <setMode+0xd0>)
    2a94:	4798      	blx	r3
    2a96:	231c      	movs	r3, #28
    2a98:	4398      	bics	r0, r3
    2a9a:	b2c1      	uxtb	r1, r0
    2a9c:	2001      	movs	r0, #1
    2a9e:	4b04      	ldr	r3, [pc, #16]	; (2ab0 <setMode+0xd4>)
    2aa0:	4798      	blx	r3
            break;
    2aa2:	e7dc      	b.n	2a5e <setMode+0x82>
    2aa4:	20000001 	.word	0x20000001
    2aa8:	0000a564 	.word	0x0000a564
    2aac:	00002891 	.word	0x00002891
    2ab0:	000028c1 	.word	0x000028c1
    2ab4:	20000000 	.word	0x20000000
    2ab8:	000029b1 	.word	0x000029b1

00002abc <setHighPower>:
{
    2abc:	b510      	push	{r4, lr}
    isRFM69HW = onOff;
    2abe:	4b13      	ldr	r3, [pc, #76]	; (2b0c <setHighPower+0x50>)
    2ac0:	7018      	strb	r0, [r3, #0]
    writeReg(REG_OCP, isRFM69HW ? RF_OCP_OFF : RF_OCP_ON);
    2ac2:	2800      	cmp	r0, #0
    2ac4:	d011      	beq.n	2aea <setHighPower+0x2e>
    2ac6:	210f      	movs	r1, #15
    2ac8:	2013      	movs	r0, #19
    2aca:	4b11      	ldr	r3, [pc, #68]	; (2b10 <setHighPower+0x54>)
    2acc:	4798      	blx	r3
    if (isRFM69HW == 1) // turning ON
    2ace:	4b0f      	ldr	r3, [pc, #60]	; (2b0c <setHighPower+0x50>)
    2ad0:	781b      	ldrb	r3, [r3, #0]
    2ad2:	2b01      	cmp	r3, #1
    2ad4:	d00b      	beq.n	2aee <setHighPower+0x32>
        writeReg(REG_PALEVEL, RF_PALEVEL_PA0_ON | RF_PALEVEL_PA1_OFF | RF_PALEVEL_PA2_OFF | powerLevel); // enable P0 only
    2ad6:	4b0f      	ldr	r3, [pc, #60]	; (2b14 <setHighPower+0x58>)
    2ad8:	781b      	ldrb	r3, [r3, #0]
    2ada:	2180      	movs	r1, #128	; 0x80
    2adc:	4249      	negs	r1, r1
    2ade:	4319      	orrs	r1, r3
    2ae0:	b2c9      	uxtb	r1, r1
    2ae2:	2011      	movs	r0, #17
    2ae4:	4b0a      	ldr	r3, [pc, #40]	; (2b10 <setHighPower+0x54>)
    2ae6:	4798      	blx	r3
}
    2ae8:	bd10      	pop	{r4, pc}
    writeReg(REG_OCP, isRFM69HW ? RF_OCP_OFF : RF_OCP_ON);
    2aea:	211a      	movs	r1, #26
    2aec:	e7ec      	b.n	2ac8 <setHighPower+0xc>
        writeReg(REG_PALEVEL, (readReg(REG_PALEVEL) & 0x1F) | RF_PALEVEL_PA1_ON | RF_PALEVEL_PA2_ON); // enable P1 & P2 amplifier stages
    2aee:	2011      	movs	r0, #17
    2af0:	4b09      	ldr	r3, [pc, #36]	; (2b18 <setHighPower+0x5c>)
    2af2:	4798      	blx	r3
    2af4:	b240      	sxtb	r0, r0
    2af6:	211f      	movs	r1, #31
    2af8:	4001      	ands	r1, r0
    2afa:	2060      	movs	r0, #96	; 0x60
    2afc:	4301      	orrs	r1, r0
    2afe:	b249      	sxtb	r1, r1
    2b00:	b2c9      	uxtb	r1, r1
    2b02:	2011      	movs	r0, #17
    2b04:	4b02      	ldr	r3, [pc, #8]	; (2b10 <setHighPower+0x54>)
    2b06:	4798      	blx	r3
    2b08:	e7ee      	b.n	2ae8 <setHighPower+0x2c>
    2b0a:	46c0      	nop			; (mov r8, r8)
    2b0c:	20000000 	.word	0x20000000
    2b10:	000028c1 	.word	0x000028c1
    2b14:	20000002 	.word	0x20000002
    2b18:	00002891 	.word	0x00002891

00002b1c <sendFrame>:
{
    2b1c:	b570      	push	{r4, r5, r6, lr}
    2b1e:	0004      	movs	r4, r0
    2b20:	000d      	movs	r5, r1
    setMode(RF69_MODE_SLEEP); // turn off receiver to prevent reception while filling fifo
    2b22:	2000      	movs	r0, #0
    2b24:	4b1f      	ldr	r3, [pc, #124]	; (2ba4 <sendFrame+0x88>)
    2b26:	4798      	blx	r3
    while ((readReg(REG_IRQFLAGS1) & RF_IRQFLAGS1_MODEREADY) == 0x00); // wait for ModeReady
    2b28:	2027      	movs	r0, #39	; 0x27
    2b2a:	4b1f      	ldr	r3, [pc, #124]	; (2ba8 <sendFrame+0x8c>)
    2b2c:	4798      	blx	r3
    2b2e:	0603      	lsls	r3, r0, #24
    2b30:	d5fa      	bpl.n	2b28 <sendFrame+0xc>
    writeReg(REG_DIOMAPPING1, RF_DIOMAPPING1_DIO0_00); // DIO0 is "Packet Sent"
    2b32:	2100      	movs	r1, #0
    2b34:	2025      	movs	r0, #37	; 0x25
    2b36:	4b1d      	ldr	r3, [pc, #116]	; (2bac <sendFrame+0x90>)
    2b38:	4798      	blx	r3
    if (txHeader->rxtxBuffLenght > RF69_MAX_DATA_LEN)
    2b3a:	7823      	ldrb	r3, [r4, #0]
    2b3c:	2b3d      	cmp	r3, #61	; 0x3d
    2b3e:	d901      	bls.n	2b44 <sendFrame+0x28>
        txHeader->rxtxBuffLenght = RF69_MAX_DATA_LEN;
    2b40:	233d      	movs	r3, #61	; 0x3d
    2b42:	7023      	strb	r3, [r4, #0]
    RF_select(); //enable data transfer
    2b44:	4b1a      	ldr	r3, [pc, #104]	; (2bb0 <sendFrame+0x94>)
    2b46:	4798      	blx	r3
    SPI0_Write_byte(REG_FIFO | 0x80);
    2b48:	2080      	movs	r0, #128	; 0x80
    2b4a:	4e1a      	ldr	r6, [pc, #104]	; (2bb4 <sendFrame+0x98>)
    2b4c:	47b0      	blx	r6
    SPI0_Write_byte(txHeader->rxtxBuffLenght + 4);
    2b4e:	7820      	ldrb	r0, [r4, #0]
    2b50:	3004      	adds	r0, #4
    2b52:	b2c0      	uxtb	r0, r0
    2b54:	47b0      	blx	r6
    SPI0_Write_byte(txHeader->destinationAddr);
    2b56:	7860      	ldrb	r0, [r4, #1]
    2b58:	47b0      	blx	r6
    SPI0_Write_byte(txHeader->senderAddr);
    2b5a:	78a0      	ldrb	r0, [r4, #2]
    2b5c:	47b0      	blx	r6
    SPI0_Write_byte(txHeader->opcode);
    2b5e:	78e0      	ldrb	r0, [r4, #3]
    2b60:	47b0      	blx	r6
    SPI0_Write_byte(txHeader->dataCRC);
    2b62:	79e0      	ldrb	r0, [r4, #7]
    2b64:	47b0      	blx	r6
	SPI0_WriteBuff((void *)buffer, txHeader->rxtxBuffLenght);
    2b66:	7821      	ldrb	r1, [r4, #0]
    2b68:	0028      	movs	r0, r5
    2b6a:	4b13      	ldr	r3, [pc, #76]	; (2bb8 <sendFrame+0x9c>)
    2b6c:	4798      	blx	r3
    RF_unselect(); 
    2b6e:	4b13      	ldr	r3, [pc, #76]	; (2bbc <sendFrame+0xa0>)
    2b70:	4798      	blx	r3
	setMode(RF69_MODE_TX);
    2b72:	2004      	movs	r0, #4
    2b74:	4b0b      	ldr	r3, [pc, #44]	; (2ba4 <sendFrame+0x88>)
    2b76:	4798      	blx	r3
	delay_ms(1);
    2b78:	2001      	movs	r0, #1
    2b7a:	4b11      	ldr	r3, [pc, #68]	; (2bc0 <sendFrame+0xa4>)
    2b7c:	4798      	blx	r3
	uint16_t tx_timeout = RF69_TX_LIMIT_MS;
    2b7e:	2464      	movs	r4, #100	; 0x64
	while (readReg(REG_IRQFLAGS1) != RF_TX_DONE){
    2b80:	2027      	movs	r0, #39	; 0x27
    2b82:	4b09      	ldr	r3, [pc, #36]	; (2ba8 <sendFrame+0x8c>)
    2b84:	4798      	blx	r3
    2b86:	28a0      	cmp	r0, #160	; 0xa0
    2b88:	d007      	beq.n	2b9a <sendFrame+0x7e>
		tx_timeout--;
    2b8a:	3c01      	subs	r4, #1
    2b8c:	b2a4      	uxth	r4, r4
		if (tx_timeout==0){
    2b8e:	2c00      	cmp	r4, #0
    2b90:	d003      	beq.n	2b9a <sendFrame+0x7e>
		delay_us(10);	
    2b92:	200a      	movs	r0, #10
    2b94:	4b0b      	ldr	r3, [pc, #44]	; (2bc4 <sendFrame+0xa8>)
    2b96:	4798      	blx	r3
    2b98:	e7f2      	b.n	2b80 <sendFrame+0x64>
	setMode(RF69_MODE_RX);
    2b9a:	2003      	movs	r0, #3
    2b9c:	4b01      	ldr	r3, [pc, #4]	; (2ba4 <sendFrame+0x88>)
    2b9e:	4798      	blx	r3
}
    2ba0:	bd70      	pop	{r4, r5, r6, pc}
    2ba2:	46c0      	nop			; (mov r8, r8)
    2ba4:	000029dd 	.word	0x000029dd
    2ba8:	00002891 	.word	0x00002891
    2bac:	000028c1 	.word	0x000028c1
    2bb0:	00002879 	.word	0x00002879
    2bb4:	000012ed 	.word	0x000012ed
    2bb8:	000012a9 	.word	0x000012a9
    2bbc:	00002885 	.word	0x00002885
    2bc0:	000001e1 	.word	0x000001e1
    2bc4:	000001c1 	.word	0x000001c1

00002bc8 <simpleCRC>:
		return &rfRxHeader;
	}
}


uint8_t simpleCRC(uint8_t *array, uint8_t length) {
    2bc8:	b510      	push	{r4, lr}
    2bca:	0004      	movs	r4, r0
	uint8_t checksum = 0;

	for (size_t i = 0; i < length; ++i) {
    2bcc:	2200      	movs	r2, #0
	uint8_t checksum = 0;
    2bce:	2300      	movs	r3, #0
	for (size_t i = 0; i < length; ++i) {
    2bd0:	e003      	b.n	2bda <simpleCRC+0x12>
		checksum += array[i];
    2bd2:	5ca0      	ldrb	r0, [r4, r2]
    2bd4:	181b      	adds	r3, r3, r0
    2bd6:	b2db      	uxtb	r3, r3
	for (size_t i = 0; i < length; ++i) {
    2bd8:	3201      	adds	r2, #1
    2bda:	428a      	cmp	r2, r1
    2bdc:	d3f9      	bcc.n	2bd2 <simpleCRC+0xa>
	}

	return checksum;
    2bde:	0018      	movs	r0, r3
    2be0:	bd10      	pop	{r4, pc}
	...

00002be4 <rtc_int_enable>:
};

 	
	 

void rtc_int_enable(rtc_date *RTCx){
    2be4:	b570      	push	{r4, r5, r6, lr}
	rtc_config_3[1] |= (1 << TIE);
    2be6:	4d0c      	ldr	r5, [pc, #48]	; (2c18 <rtc_int_enable+0x34>)
    2be8:	786b      	ldrb	r3, [r5, #1]
    2bea:	2210      	movs	r2, #16
    2bec:	4313      	orrs	r3, r2
    2bee:	706b      	strb	r3, [r5, #1]
	rtc_config_2[1] |= (1 << TD) | (1 << TE);
    2bf0:	4e0a      	ldr	r6, [pc, #40]	; (2c1c <rtc_int_enable+0x38>)
    2bf2:	7873      	ldrb	r3, [r6, #1]
    2bf4:	2211      	movs	r2, #17
    2bf6:	4313      	orrs	r3, r2
    2bf8:	7073      	strb	r3, [r6, #1]
	
	RTC_write_batch(RTC_ADDR, rtc_config_1,sizeof(rtc_config_1));
    2bfa:	2203      	movs	r2, #3
    2bfc:	4908      	ldr	r1, [pc, #32]	; (2c20 <rtc_int_enable+0x3c>)
    2bfe:	2032      	movs	r0, #50	; 0x32
    2c00:	4c08      	ldr	r4, [pc, #32]	; (2c24 <rtc_int_enable+0x40>)
    2c02:	47a0      	blx	r4
	RTC_write_batch(RTC_ADDR, rtc_config_2,sizeof(rtc_config_2));
    2c04:	2202      	movs	r2, #2
    2c06:	0031      	movs	r1, r6
    2c08:	2032      	movs	r0, #50	; 0x32
    2c0a:	47a0      	blx	r4
	RTC_write_batch(RTC_ADDR, rtc_config_3,sizeof(rtc_config_3));
    2c0c:	2202      	movs	r2, #2
    2c0e:	0029      	movs	r1, r5
    2c10:	2032      	movs	r0, #50	; 0x32
    2c12:	47a0      	blx	r4
	
	
}
    2c14:	bd70      	pop	{r4, r5, r6, pc}
    2c16:	46c0      	nop			; (mov r8, r8)
    2c18:	2000000c 	.word	0x2000000c
    2c1c:	20000008 	.word	0x20000008
    2c20:	20000004 	.word	0x20000004
    2c24:	0000130d 	.word	0x0000130d

00002c28 <BCDtoDEC>:
	rtc_raw[7]=DECtoBCD(RTCx->year);
	RTC_write_batch(RTC_ADDR, rtc_raw,sizeof(rtc_raw));
}

uint8_t BCDtoDEC(uint8_t val)
{
    2c28:	0001      	movs	r1, r0
	return ((val / 0x10) * 10) + (val % 0x10);
    2c2a:	0902      	lsrs	r2, r0, #4
    2c2c:	0093      	lsls	r3, r2, #2
    2c2e:	18d2      	adds	r2, r2, r3
    2c30:	0053      	lsls	r3, r2, #1
    2c32:	b2db      	uxtb	r3, r3
    2c34:	200f      	movs	r0, #15
    2c36:	4008      	ands	r0, r1
    2c38:	1818      	adds	r0, r3, r0
    2c3a:	b2c0      	uxtb	r0, r0
}
    2c3c:	4770      	bx	lr
	...

00002c40 <rtc_sync>:
void rtc_sync(rtc_date *RTCx){
    2c40:	b530      	push	{r4, r5, lr}
    2c42:	b083      	sub	sp, #12
    2c44:	0004      	movs	r4, r0
	RTC_read_batch(RTC_ADDR, rtc_raw, sizeof(rtc_raw));
    2c46:	2207      	movs	r2, #7
    2c48:	4669      	mov	r1, sp
    2c4a:	2032      	movs	r0, #50	; 0x32
    2c4c:	4b0f      	ldr	r3, [pc, #60]	; (2c8c <rtc_sync+0x4c>)
    2c4e:	4798      	blx	r3
	RTCx->second=BCDtoDEC(rtc_raw[0]);
    2c50:	466b      	mov	r3, sp
    2c52:	7818      	ldrb	r0, [r3, #0]
    2c54:	4d0e      	ldr	r5, [pc, #56]	; (2c90 <rtc_sync+0x50>)
    2c56:	47a8      	blx	r5
    2c58:	7020      	strb	r0, [r4, #0]
	RTCx->minute=BCDtoDEC(rtc_raw[1]);
    2c5a:	466b      	mov	r3, sp
    2c5c:	7858      	ldrb	r0, [r3, #1]
    2c5e:	47a8      	blx	r5
    2c60:	7060      	strb	r0, [r4, #1]
	RTCx->hour=BCDtoDEC(rtc_raw[2]);
    2c62:	466b      	mov	r3, sp
    2c64:	7898      	ldrb	r0, [r3, #2]
    2c66:	47a8      	blx	r5
    2c68:	70a0      	strb	r0, [r4, #2]
	RTCx->dayofweek=rtc_raw[3];
    2c6a:	466b      	mov	r3, sp
    2c6c:	78db      	ldrb	r3, [r3, #3]
    2c6e:	7223      	strb	r3, [r4, #8]
	RTCx->date=BCDtoDEC(rtc_raw[4]);
    2c70:	466b      	mov	r3, sp
    2c72:	7918      	ldrb	r0, [r3, #4]
    2c74:	47a8      	blx	r5
    2c76:	70e0      	strb	r0, [r4, #3]
	RTCx->month=BCDtoDEC(rtc_raw[5]);
    2c78:	466b      	mov	r3, sp
    2c7a:	7958      	ldrb	r0, [r3, #5]
    2c7c:	47a8      	blx	r5
    2c7e:	7120      	strb	r0, [r4, #4]
	RTCx->year=BCDtoDEC(rtc_raw[6]);
    2c80:	466b      	mov	r3, sp
    2c82:	7998      	ldrb	r0, [r3, #6]
    2c84:	47a8      	blx	r5
    2c86:	80e0      	strh	r0, [r4, #6]
}
    2c88:	b003      	add	sp, #12
    2c8a:	bd30      	pop	{r4, r5, pc}
    2c8c:	00001341 	.word	0x00001341
    2c90:	00002c29 	.word	0x00002c29

00002c94 <main>:
	.dayWetIcon[3] = 69
};


int main(void)
{
    2c94:	b5f0      	push	{r4, r5, r6, r7, lr}
    2c96:	46de      	mov	lr, fp
    2c98:	4657      	mov	r7, sl
    2c9a:	b580      	push	{r7, lr}
    2c9c:	b091      	sub	sp, #68	; 0x44
	/* Initializes MCU, drivers and middleware */
	//atmel_start_init();
	mcu_init();
    2c9e:	4bbb      	ldr	r3, [pc, #748]	; (2f8c <main+0x2f8>)
    2ca0:	4798      	blx	r3
	
	//rtc_set(&sys_rtc);
	rtc_int_enable(&sys_rtc);
    2ca2:	48bb      	ldr	r0, [pc, #748]	; (2f90 <main+0x2fc>)
    2ca4:	4bbb      	ldr	r3, [pc, #748]	; (2f94 <main+0x300>)
    2ca6:	4798      	blx	r3

	u8g2_Setup_GDEY0154_152x304_f(&lcd, U8G2_R0, screenSpi, screenSpi);
    2ca8:	4abb      	ldr	r2, [pc, #748]	; (2f98 <main+0x304>)
    2caa:	0013      	movs	r3, r2
    2cac:	49bb      	ldr	r1, [pc, #748]	; (2f9c <main+0x308>)
    2cae:	48bc      	ldr	r0, [pc, #752]	; (2fa0 <main+0x30c>)
    2cb0:	4cbc      	ldr	r4, [pc, #752]	; (2fa4 <main+0x310>)
    2cb2:	47a0      	blx	r4
    2cb4:	e05f      	b.n	2d76 <main+0xe2>
			delay_ms(1);
			gpio_set_pin_level(GLD, false);
			
			
			if((sys_rtc.second % 10) == 0){
				rfm69_init(868, NODEID, NETWORKID);
    2cb6:	2221      	movs	r2, #33	; 0x21
    2cb8:	31fd      	adds	r1, #253	; 0xfd
    2cba:	20d9      	movs	r0, #217	; 0xd9
    2cbc:	0080      	lsls	r0, r0, #2
    2cbe:	4bba      	ldr	r3, [pc, #744]	; (2fa8 <main+0x314>)
    2cc0:	4798      	blx	r3
				setHighPower(true);
    2cc2:	2001      	movs	r0, #1
    2cc4:	4bb9      	ldr	r3, [pc, #740]	; (2fac <main+0x318>)
    2cc6:	4798      	blx	r3
				
				sprintf(einkSynkReq, "einc: %02d", sys_rtc.second);
    2cc8:	4bb1      	ldr	r3, [pc, #708]	; (2f90 <main+0x2fc>)
    2cca:	781a      	ldrb	r2, [r3, #0]
    2ccc:	4db8      	ldr	r5, [pc, #736]	; (2fb0 <main+0x31c>)
    2cce:	49b9      	ldr	r1, [pc, #740]	; (2fb4 <main+0x320>)
    2cd0:	0028      	movs	r0, r5
    2cd2:	4bb9      	ldr	r3, [pc, #740]	; (2fb8 <main+0x324>)
    2cd4:	4798      	blx	r3
				rfTxDataPack.destinationAddr = ALLNODES;
    2cd6:	4cb9      	ldr	r4, [pc, #740]	; (2fbc <main+0x328>)
    2cd8:	23fe      	movs	r3, #254	; 0xfe
    2cda:	7063      	strb	r3, [r4, #1]
				rfTxDataPack.senderAddr = NODEID;
    2cdc:	3b01      	subs	r3, #1
    2cde:	70a3      	strb	r3, [r4, #2]
				rfTxDataPack.opcode = MSG;
    2ce0:	3b7b      	subs	r3, #123	; 0x7b
    2ce2:	70e3      	strb	r3, [r4, #3]
				rfTxDataPack.rxtxBuffLenght = sizeof(einkSynkReq);
    2ce4:	3b72      	subs	r3, #114	; 0x72
    2ce6:	7023      	strb	r3, [r4, #0]
				rfTxDataPack.dataCRC = simpleCRC(&einkSynkReq, sizeof(einkSynkReq));
    2ce8:	2110      	movs	r1, #16
    2cea:	0028      	movs	r0, r5
    2cec:	4bb4      	ldr	r3, [pc, #720]	; (2fc0 <main+0x32c>)
    2cee:	4798      	blx	r3
    2cf0:	71e0      	strb	r0, [r4, #7]
				sendFrame(&rfTxDataPack, &einkSynkReq);
    2cf2:	0029      	movs	r1, r5
    2cf4:	0020      	movs	r0, r4
    2cf6:	4bb3      	ldr	r3, [pc, #716]	; (2fc4 <main+0x330>)
    2cf8:	4798      	blx	r3
				delay_ms(2);
    2cfa:	2002      	movs	r0, #2
    2cfc:	4bb2      	ldr	r3, [pc, #712]	; (2fc8 <main+0x334>)
    2cfe:	4798      	blx	r3
    2d00:	2280      	movs	r2, #128	; 0x80
    2d02:	0312      	lsls	r2, r2, #12
    2d04:	23c0      	movs	r3, #192	; 0xc0
    2d06:	05db      	lsls	r3, r3, #23
    2d08:	619a      	str	r2, [r3, #24]
    2d0a:	e04c      	b.n	2da6 <main+0x112>
	((Port *)hw)->Group[submodule_index].OUTTGL.reg = mask;
    2d0c:	2280      	movs	r2, #128	; 0x80
    2d0e:	02d2      	lsls	r2, r2, #11
    2d10:	23c0      	movs	r3, #192	; 0xc0
    2d12:	05db      	lsls	r3, r3, #23
    2d14:	61da      	str	r2, [r3, #28]
				delay_ms(50);
				
				
				while(!gpio_get_pin_level(EP_BUSY)){
					gpio_toggle_pin_level(GLD);
					delay_ms(50);
    2d16:	2032      	movs	r0, #50	; 0x32
    2d18:	4bab      	ldr	r3, [pc, #684]	; (2fc8 <main+0x334>)
    2d1a:	4798      	blx	r3
 */
static inline uint32_t _gpio_get_level(const enum gpio_port port)
{
	uint32_t tmp;

	CRITICAL_SECTION_ENTER();
    2d1c:	a803      	add	r0, sp, #12
    2d1e:	4bab      	ldr	r3, [pc, #684]	; (2fcc <main+0x338>)
    2d20:	4798      	blx	r3
	return ((Port *)hw)->Group[submodule_index].DIR.reg;
    2d22:	23c0      	movs	r3, #192	; 0xc0
    2d24:	05db      	lsls	r3, r3, #23
    2d26:	681c      	ldr	r4, [r3, #0]
	return ((Port *)hw)->Group[submodule_index].IN.reg;
    2d28:	4aa9      	ldr	r2, [pc, #676]	; (2fd0 <main+0x33c>)
    2d2a:	6a12      	ldr	r2, [r2, #32]
	return ((Port *)hw)->Group[submodule_index].OUT.reg;
    2d2c:	691b      	ldr	r3, [r3, #16]

	uint32_t dir_tmp = hri_port_read_DIR_reg(PORT_IOBUS, port);

	tmp = hri_port_read_IN_reg(PORT, port) & ~dir_tmp;
	tmp |= hri_port_read_OUT_reg(PORT_IOBUS, port) & dir_tmp;
    2d2e:	4053      	eors	r3, r2
    2d30:	401c      	ands	r4, r3
    2d32:	4054      	eors	r4, r2

	CRITICAL_SECTION_LEAVE();
    2d34:	a803      	add	r0, sp, #12
    2d36:	4ba7      	ldr	r3, [pc, #668]	; (2fd4 <main+0x340>)
    2d38:	4798      	blx	r3
				while(!gpio_get_pin_level(EP_BUSY)){
    2d3a:	03a3      	lsls	r3, r4, #14
    2d3c:	d5e6      	bpl.n	2d0c <main+0x78>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    2d3e:	23c0      	movs	r3, #192	; 0xc0
    2d40:	05db      	lsls	r3, r3, #23
    2d42:	2280      	movs	r2, #128	; 0x80
    2d44:	0112      	lsls	r2, r2, #4
    2d46:	615a      	str	r2, [r3, #20]
    2d48:	2280      	movs	r2, #128	; 0x80
    2d4a:	0512      	lsls	r2, r2, #20
    2d4c:	615a      	str	r2, [r3, #20]
    2d4e:	2280      	movs	r2, #128	; 0x80
    2d50:	02d2      	lsls	r2, r2, #11
    2d52:	615a      	str	r2, [r3, #20]
				}
				gpio_set_pin_level(EP_RST, false);
				gpio_set_pin_level(EP_EN, false);
				gpio_set_pin_level(GLD, false);
				einkUpdate = 0;
    2d54:	2200      	movs	r2, #0
    2d56:	4ba0      	ldr	r3, [pc, #640]	; (2fd8 <main+0x344>)
    2d58:	701a      	strb	r2, [r3, #0]
			
			
			
			
			
			SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;// | SCB_SCR_SLEEPONEXIT_Msk;  
    2d5a:	4aa0      	ldr	r2, [pc, #640]	; (2fdc <main+0x348>)
    2d5c:	6913      	ldr	r3, [r2, #16]
    2d5e:	2104      	movs	r1, #4
    2d60:	430b      	orrs	r3, r1
    2d62:	6113      	str	r3, [r2, #16]
			NVMCTRL->CTRLB.reg |= NVMCTRL_CTRLB_SLEEPPRM_DISABLED;        
    2d64:	4a9e      	ldr	r2, [pc, #632]	; (2fe0 <main+0x34c>)
    2d66:	6851      	ldr	r1, [r2, #4]
    2d68:	23c0      	movs	r3, #192	; 0xc0
    2d6a:	009b      	lsls	r3, r3, #2
    2d6c:	430b      	orrs	r3, r1
    2d6e:	6053      	str	r3, [r2, #4]
  __ASM volatile ("dsb 0xF":::"memory");
    2d70:	f3bf 8f4f 	dsb	sy
			
			
			__DSB();
			__WFI();
    2d74:	bf30      	wfi
		if(RTC_IRQ_Ready()){
    2d76:	4b9b      	ldr	r3, [pc, #620]	; (2fe4 <main+0x350>)
    2d78:	4798      	blx	r3
    2d7a:	2800      	cmp	r0, #0
    2d7c:	d0fb      	beq.n	2d76 <main+0xe2>
			rtc_sync(&sys_rtc);
    2d7e:	4c84      	ldr	r4, [pc, #528]	; (2f90 <main+0x2fc>)
    2d80:	0020      	movs	r0, r4
    2d82:	4b99      	ldr	r3, [pc, #612]	; (2fe8 <main+0x354>)
    2d84:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    2d86:	25c0      	movs	r5, #192	; 0xc0
    2d88:	05ed      	lsls	r5, r5, #23
    2d8a:	2680      	movs	r6, #128	; 0x80
    2d8c:	02f6      	lsls	r6, r6, #11
    2d8e:	61ae      	str	r6, [r5, #24]
			delay_ms(1);
    2d90:	2001      	movs	r0, #1
    2d92:	4b8d      	ldr	r3, [pc, #564]	; (2fc8 <main+0x334>)
    2d94:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    2d96:	616e      	str	r6, [r5, #20]
			if((sys_rtc.second % 10) == 0){
    2d98:	7820      	ldrb	r0, [r4, #0]
    2d9a:	210a      	movs	r1, #10
    2d9c:	4b93      	ldr	r3, [pc, #588]	; (2fec <main+0x358>)
    2d9e:	4798      	blx	r3
    2da0:	b2c9      	uxtb	r1, r1
    2da2:	2900      	cmp	r1, #0
    2da4:	d087      	beq.n	2cb6 <main+0x22>
			if(sys_rtc.minute == 0 & sys_rtc.second == 0){
    2da6:	4b7a      	ldr	r3, [pc, #488]	; (2f90 <main+0x2fc>)
    2da8:	881b      	ldrh	r3, [r3, #0]
    2daa:	2b00      	cmp	r3, #0
    2dac:	d102      	bne.n	2db4 <main+0x120>
				einkUpdate = 1;
    2dae:	2201      	movs	r2, #1
    2db0:	4b89      	ldr	r3, [pc, #548]	; (2fd8 <main+0x344>)
    2db2:	701a      	strb	r2, [r3, #0]
			if(einkUpdate){
    2db4:	4b88      	ldr	r3, [pc, #544]	; (2fd8 <main+0x344>)
    2db6:	781b      	ldrb	r3, [r3, #0]
    2db8:	2b00      	cmp	r3, #0
    2dba:	d0ce      	beq.n	2d5a <main+0xc6>
				u8g2_InitDisplay(&lcd);
    2dbc:	4878      	ldr	r0, [pc, #480]	; (2fa0 <main+0x30c>)
    2dbe:	4b8c      	ldr	r3, [pc, #560]	; (2ff0 <main+0x35c>)
    2dc0:	4798      	blx	r3
				u8g2_ClearBuffer(&lcd);
    2dc2:	4877      	ldr	r0, [pc, #476]	; (2fa0 <main+0x30c>)
    2dc4:	4b8b      	ldr	r3, [pc, #556]	; (2ff4 <main+0x360>)
    2dc6:	4798      	blx	r3
				u8g2_DrawLine(&lcd, 70, 1, 70 , 90);
    2dc8:	265a      	movs	r6, #90	; 0x5a
    2dca:	9600      	str	r6, [sp, #0]
    2dcc:	2346      	movs	r3, #70	; 0x46
    2dce:	2201      	movs	r2, #1
    2dd0:	2146      	movs	r1, #70	; 0x46
    2dd2:	4873      	ldr	r0, [pc, #460]	; (2fa0 <main+0x30c>)
    2dd4:	4d88      	ldr	r5, [pc, #544]	; (2ff8 <main+0x364>)
    2dd6:	47a8      	blx	r5
				u8g2_DrawLine(&lcd, 140, 1, 140 , 90);
    2dd8:	9600      	str	r6, [sp, #0]
    2dda:	238c      	movs	r3, #140	; 0x8c
    2ddc:	2201      	movs	r2, #1
    2dde:	218c      	movs	r1, #140	; 0x8c
    2de0:	486f      	ldr	r0, [pc, #444]	; (2fa0 <main+0x30c>)
    2de2:	47a8      	blx	r5
				u8g2_DrawLine(&lcd, 210, 1, 210 , 90);
    2de4:	9600      	str	r6, [sp, #0]
    2de6:	23d2      	movs	r3, #210	; 0xd2
    2de8:	2201      	movs	r2, #1
    2dea:	21d2      	movs	r1, #210	; 0xd2
    2dec:	486c      	ldr	r0, [pc, #432]	; (2fa0 <main+0x30c>)
    2dee:	47a8      	blx	r5
				u8g2_DrawLine(&lcd, 280, 1, 280 , 90);
    2df0:	218c      	movs	r1, #140	; 0x8c
    2df2:	0049      	lsls	r1, r1, #1
    2df4:	9600      	str	r6, [sp, #0]
    2df6:	000b      	movs	r3, r1
    2df8:	2201      	movs	r2, #1
    2dfa:	4869      	ldr	r0, [pc, #420]	; (2fa0 <main+0x30c>)
    2dfc:	47a8      	blx	r5
				u8g2_DrawLine(&lcd, 1, 90, 320 , 90);
    2dfe:	9600      	str	r6, [sp, #0]
    2e00:	23a0      	movs	r3, #160	; 0xa0
    2e02:	005b      	lsls	r3, r3, #1
    2e04:	225a      	movs	r2, #90	; 0x5a
    2e06:	2101      	movs	r1, #1
    2e08:	4865      	ldr	r0, [pc, #404]	; (2fa0 <main+0x30c>)
    2e0a:	47a8      	blx	r5
				u8g2_SetFont(&lcd, u8g2_font_open_iconic_weather_6x_t);
    2e0c:	497b      	ldr	r1, [pc, #492]	; (2ffc <main+0x368>)
    2e0e:	4864      	ldr	r0, [pc, #400]	; (2fa0 <main+0x30c>)
    2e10:	4b7b      	ldr	r3, [pc, #492]	; (3000 <main+0x36c>)
    2e12:	469b      	mov	fp, r3
    2e14:	4798      	blx	r3
				u8g2_DrawGlyph(&lcd, 10, 51, weather.dayWetIcon[0]);
    2e16:	4d7b      	ldr	r5, [pc, #492]	; (3004 <main+0x370>)
    2e18:	7dab      	ldrb	r3, [r5, #22]
    2e1a:	2233      	movs	r2, #51	; 0x33
    2e1c:	210a      	movs	r1, #10
    2e1e:	4860      	ldr	r0, [pc, #384]	; (2fa0 <main+0x30c>)
    2e20:	4e79      	ldr	r6, [pc, #484]	; (3008 <main+0x374>)
    2e22:	47b0      	blx	r6
				u8g2_DrawGlyph(&lcd, 81, 51, weather.dayWetIcon[1]);
    2e24:	7deb      	ldrb	r3, [r5, #23]
    2e26:	2233      	movs	r2, #51	; 0x33
    2e28:	2151      	movs	r1, #81	; 0x51
    2e2a:	485d      	ldr	r0, [pc, #372]	; (2fa0 <main+0x30c>)
    2e2c:	47b0      	blx	r6
				u8g2_DrawGlyph(&lcd, 151, 51, weather.dayWetIcon[2]);
    2e2e:	7e2b      	ldrb	r3, [r5, #24]
    2e30:	2233      	movs	r2, #51	; 0x33
    2e32:	2197      	movs	r1, #151	; 0x97
    2e34:	485a      	ldr	r0, [pc, #360]	; (2fa0 <main+0x30c>)
    2e36:	47b0      	blx	r6
				u8g2_DrawGlyph(&lcd, 221, 51, weather.dayWetIcon[3]);
    2e38:	7e6b      	ldrb	r3, [r5, #25]
    2e3a:	2233      	movs	r2, #51	; 0x33
    2e3c:	21dd      	movs	r1, #221	; 0xdd
    2e3e:	4858      	ldr	r0, [pc, #352]	; (2fa0 <main+0x30c>)
    2e40:	47b0      	blx	r6
				u8g2_SetFont(&lcd, u8g2_font_ncenB14_tr);
    2e42:	4972      	ldr	r1, [pc, #456]	; (300c <main+0x378>)
    2e44:	4856      	ldr	r0, [pc, #344]	; (2fa0 <main+0x30c>)
    2e46:	47d8      	blx	fp
				sprintf(line1, "%02dC", weather.dayTempPart[0]/10);
    2e48:	2306      	movs	r3, #6
    2e4a:	5ee8      	ldrsh	r0, [r5, r3]
    2e4c:	4b70      	ldr	r3, [pc, #448]	; (3010 <main+0x37c>)
    2e4e:	469a      	mov	sl, r3
    2e50:	210a      	movs	r1, #10
    2e52:	4798      	blx	r3
    2e54:	b202      	sxth	r2, r0
    2e56:	496f      	ldr	r1, [pc, #444]	; (3014 <main+0x380>)
    2e58:	a804      	add	r0, sp, #16
    2e5a:	4c57      	ldr	r4, [pc, #348]	; (2fb8 <main+0x324>)
    2e5c:	47a0      	blx	r4
				sprintf(line2, "%03dP", weather.dayPressPart[0]);
    2e5e:	89ea      	ldrh	r2, [r5, #14]
    2e60:	4e6d      	ldr	r6, [pc, #436]	; (3018 <main+0x384>)
    2e62:	0031      	movs	r1, r6
    2e64:	a806      	add	r0, sp, #24
    2e66:	47a0      	blx	r4
				u8g2_DrawStr(&lcd, 10, 70, (void *)line1);
    2e68:	ab04      	add	r3, sp, #16
    2e6a:	2246      	movs	r2, #70	; 0x46
    2e6c:	210a      	movs	r1, #10
    2e6e:	484c      	ldr	r0, [pc, #304]	; (2fa0 <main+0x30c>)
    2e70:	4f6a      	ldr	r7, [pc, #424]	; (301c <main+0x388>)
    2e72:	47b8      	blx	r7
				u8g2_DrawStr(&lcd, 10, 86, (void *)line2);
    2e74:	ab06      	add	r3, sp, #24
    2e76:	2256      	movs	r2, #86	; 0x56
    2e78:	210a      	movs	r1, #10
    2e7a:	4849      	ldr	r0, [pc, #292]	; (2fa0 <main+0x30c>)
    2e7c:	47b8      	blx	r7
				sprintf(line1, "%02dC", weather.dayTempPart[1]/10);
    2e7e:	2308      	movs	r3, #8
    2e80:	5ee8      	ldrsh	r0, [r5, r3]
    2e82:	210a      	movs	r1, #10
    2e84:	47d0      	blx	sl
    2e86:	b202      	sxth	r2, r0
    2e88:	4962      	ldr	r1, [pc, #392]	; (3014 <main+0x380>)
    2e8a:	a804      	add	r0, sp, #16
    2e8c:	47a0      	blx	r4
				sprintf(line2, "%03dP", weather.dayPressPart[1]);
    2e8e:	8a2a      	ldrh	r2, [r5, #16]
    2e90:	0031      	movs	r1, r6
    2e92:	a806      	add	r0, sp, #24
    2e94:	47a0      	blx	r4
				u8g2_DrawStr(&lcd, 10+70, 70, (void *)line1);
    2e96:	ab04      	add	r3, sp, #16
    2e98:	2246      	movs	r2, #70	; 0x46
    2e9a:	2150      	movs	r1, #80	; 0x50
    2e9c:	4840      	ldr	r0, [pc, #256]	; (2fa0 <main+0x30c>)
    2e9e:	47b8      	blx	r7
				u8g2_DrawStr(&lcd, 10+70, 86, (void *)line2);
    2ea0:	ab06      	add	r3, sp, #24
    2ea2:	2256      	movs	r2, #86	; 0x56
    2ea4:	2150      	movs	r1, #80	; 0x50
    2ea6:	483e      	ldr	r0, [pc, #248]	; (2fa0 <main+0x30c>)
    2ea8:	47b8      	blx	r7
				sprintf(line1, "%02dC", weather.dayTempPart[2]/10);
    2eaa:	230a      	movs	r3, #10
    2eac:	5ee8      	ldrsh	r0, [r5, r3]
    2eae:	210a      	movs	r1, #10
    2eb0:	47d0      	blx	sl
    2eb2:	b202      	sxth	r2, r0
    2eb4:	4957      	ldr	r1, [pc, #348]	; (3014 <main+0x380>)
    2eb6:	a804      	add	r0, sp, #16
    2eb8:	47a0      	blx	r4
				sprintf(line2, "%03dP", weather.dayPressPart[2]);
    2eba:	8a6a      	ldrh	r2, [r5, #18]
    2ebc:	0031      	movs	r1, r6
    2ebe:	a806      	add	r0, sp, #24
    2ec0:	47a0      	blx	r4
				u8g2_DrawStr(&lcd, 10+140, 70, (void *)line1);
    2ec2:	ab04      	add	r3, sp, #16
    2ec4:	2246      	movs	r2, #70	; 0x46
    2ec6:	2196      	movs	r1, #150	; 0x96
    2ec8:	4835      	ldr	r0, [pc, #212]	; (2fa0 <main+0x30c>)
    2eca:	47b8      	blx	r7
				u8g2_DrawStr(&lcd, 10+140, 86, (void *)line2);
    2ecc:	ab06      	add	r3, sp, #24
    2ece:	2256      	movs	r2, #86	; 0x56
    2ed0:	2196      	movs	r1, #150	; 0x96
    2ed2:	4833      	ldr	r0, [pc, #204]	; (2fa0 <main+0x30c>)
    2ed4:	47b8      	blx	r7
				sprintf(line1, "%02dC", weather.dayTempPart[3]/10);
    2ed6:	230c      	movs	r3, #12
    2ed8:	5ee8      	ldrsh	r0, [r5, r3]
    2eda:	210a      	movs	r1, #10
    2edc:	47d0      	blx	sl
    2ede:	b202      	sxth	r2, r0
    2ee0:	494c      	ldr	r1, [pc, #304]	; (3014 <main+0x380>)
    2ee2:	a804      	add	r0, sp, #16
    2ee4:	47a0      	blx	r4
				sprintf(line2, "%03dP", weather.dayPressPart[3]);
    2ee6:	8aaa      	ldrh	r2, [r5, #20]
    2ee8:	0031      	movs	r1, r6
    2eea:	a806      	add	r0, sp, #24
    2eec:	47a0      	blx	r4
				u8g2_DrawStr(&lcd, 10+210, 70, (void *)line1);
    2eee:	ab04      	add	r3, sp, #16
    2ef0:	2246      	movs	r2, #70	; 0x46
    2ef2:	21dc      	movs	r1, #220	; 0xdc
    2ef4:	482a      	ldr	r0, [pc, #168]	; (2fa0 <main+0x30c>)
    2ef6:	47b8      	blx	r7
				u8g2_DrawStr(&lcd, 10+210, 86, (void *)line2);
    2ef8:	ab06      	add	r3, sp, #24
    2efa:	2256      	movs	r2, #86	; 0x56
    2efc:	21dc      	movs	r1, #220	; 0xdc
    2efe:	4828      	ldr	r0, [pc, #160]	; (2fa0 <main+0x30c>)
    2f00:	47b8      	blx	r7
				sprintf(infoStr, "%s %02d-%02d-20%02d", daysFull[sys_rtc.dayofweek], sys_rtc.date, sys_rtc.month, sys_rtc.year);
    2f02:	4a23      	ldr	r2, [pc, #140]	; (2f90 <main+0x2fc>)
    2f04:	7a11      	ldrb	r1, [r2, #8]
    2f06:	78d3      	ldrb	r3, [r2, #3]
    2f08:	7910      	ldrb	r0, [r2, #4]
    2f0a:	88d6      	ldrh	r6, [r2, #6]
    2f0c:	008a      	lsls	r2, r1, #2
    2f0e:	4944      	ldr	r1, [pc, #272]	; (3020 <main+0x38c>)
    2f10:	5852      	ldr	r2, [r2, r1]
    2f12:	9601      	str	r6, [sp, #4]
    2f14:	9000      	str	r0, [sp, #0]
    2f16:	4943      	ldr	r1, [pc, #268]	; (3024 <main+0x390>)
    2f18:	a808      	add	r0, sp, #32
    2f1a:	47a0      	blx	r4
				u8g2_DrawStr(&lcd, 15, 110, (void *)infoStr);
    2f1c:	ab08      	add	r3, sp, #32
    2f1e:	226e      	movs	r2, #110	; 0x6e
    2f20:	210f      	movs	r1, #15
    2f22:	481f      	ldr	r0, [pc, #124]	; (2fa0 <main+0x30c>)
    2f24:	47b8      	blx	r7
				float temp =  weather.currentTemp/10;
    2f26:	2300      	movs	r3, #0
    2f28:	5ee8      	ldrsh	r0, [r5, r3]
    2f2a:	210a      	movs	r1, #10
    2f2c:	47d0      	blx	sl
    2f2e:	b200      	sxth	r0, r0
    2f30:	4b3d      	ldr	r3, [pc, #244]	; (3028 <main+0x394>)
    2f32:	4798      	blx	r3
				sprintf(infoStr, "Now: %3.1fC; %03dmm; %02d%%", temp, weather.currentPress, weather.currentHum);
    2f34:	88ae      	ldrh	r6, [r5, #4]
    2f36:	78ad      	ldrb	r5, [r5, #2]
    2f38:	4b3c      	ldr	r3, [pc, #240]	; (302c <main+0x398>)
    2f3a:	4798      	blx	r3
    2f3c:	0002      	movs	r2, r0
    2f3e:	000b      	movs	r3, r1
    2f40:	9501      	str	r5, [sp, #4]
    2f42:	9600      	str	r6, [sp, #0]
    2f44:	493a      	ldr	r1, [pc, #232]	; (3030 <main+0x39c>)
    2f46:	a808      	add	r0, sp, #32
    2f48:	47a0      	blx	r4
				u8g2_DrawStr(&lcd, 15, 132, (void *)infoStr); //"Now 13.6C , 735mm, 63%"
    2f4a:	ab08      	add	r3, sp, #32
    2f4c:	2284      	movs	r2, #132	; 0x84
    2f4e:	210f      	movs	r1, #15
    2f50:	4813      	ldr	r0, [pc, #76]	; (2fa0 <main+0x30c>)
    2f52:	47b8      	blx	r7
				u8g2_SetFont(&lcd, u8g2_font_5x8_tf);
    2f54:	4937      	ldr	r1, [pc, #220]	; (3034 <main+0x3a0>)
    2f56:	4812      	ldr	r0, [pc, #72]	; (2fa0 <main+0x30c>)
    2f58:	47d8      	blx	fp
				u8g2_DrawStr(&lcd, 260, 134, (void *)"ID M430");
    2f5a:	2582      	movs	r5, #130	; 0x82
    2f5c:	006d      	lsls	r5, r5, #1
    2f5e:	4b36      	ldr	r3, [pc, #216]	; (3038 <main+0x3a4>)
    2f60:	2286      	movs	r2, #134	; 0x86
    2f62:	0029      	movs	r1, r5
    2f64:	480e      	ldr	r0, [pc, #56]	; (2fa0 <main+0x30c>)
    2f66:	47b8      	blx	r7
				u8g2_DrawStr(&lcd, 260, 142, (void *)"RF-79dB");
    2f68:	4b34      	ldr	r3, [pc, #208]	; (303c <main+0x3a8>)
    2f6a:	228e      	movs	r2, #142	; 0x8e
    2f6c:	0029      	movs	r1, r5
    2f6e:	480c      	ldr	r0, [pc, #48]	; (2fa0 <main+0x30c>)
    2f70:	47b8      	blx	r7
				u8g2_DrawStr(&lcd, 260, 150, (void *)"B 3.94V");
    2f72:	4b33      	ldr	r3, [pc, #204]	; (3040 <main+0x3ac>)
    2f74:	2296      	movs	r2, #150	; 0x96
    2f76:	0029      	movs	r1, r5
    2f78:	4809      	ldr	r0, [pc, #36]	; (2fa0 <main+0x30c>)
    2f7a:	47b8      	blx	r7
				u8g2_SendBuffer(&lcd);
    2f7c:	4808      	ldr	r0, [pc, #32]	; (2fa0 <main+0x30c>)
    2f7e:	4b31      	ldr	r3, [pc, #196]	; (3044 <main+0x3b0>)
    2f80:	4798      	blx	r3
				delay_ms(50);
    2f82:	2032      	movs	r0, #50	; 0x32
    2f84:	4b10      	ldr	r3, [pc, #64]	; (2fc8 <main+0x334>)
    2f86:	4798      	blx	r3
				while(!gpio_get_pin_level(EP_BUSY)){
    2f88:	e6c8      	b.n	2d1c <main+0x88>
    2f8a:	46c0      	nop			; (mov r8, r8)
    2f8c:	000016c5 	.word	0x000016c5
    2f90:	20000030 	.word	0x20000030
    2f94:	00002be5 	.word	0x00002be5
    2f98:	00001775 	.word	0x00001775
    2f9c:	0000a4c8 	.word	0x0000a4c8
    2fa0:	200021a0 	.word	0x200021a0
    2fa4:	000018a1 	.word	0x000018a1
    2fa8:	000028ed 	.word	0x000028ed
    2fac:	00002abd 	.word	0x00002abd
    2fb0:	20002240 	.word	0x20002240
    2fb4:	0000a578 	.word	0x0000a578
    2fb8:	00004d29 	.word	0x00004d29
    2fbc:	20002238 	.word	0x20002238
    2fc0:	00002bc9 	.word	0x00002bc9
    2fc4:	00002b1d 	.word	0x00002b1d
    2fc8:	000001e1 	.word	0x000001e1
    2fcc:	00000191 	.word	0x00000191
    2fd0:	41004400 	.word	0x41004400
    2fd4:	0000019f 	.word	0x0000019f
    2fd8:	2000002c 	.word	0x2000002c
    2fdc:	e000ed00 	.word	0xe000ed00
    2fe0:	41004000 	.word	0x41004000
    2fe4:	00001261 	.word	0x00001261
    2fe8:	00002c41 	.word	0x00002c41
    2fec:	00003155 	.word	0x00003155
    2ff0:	00002615 	.word	0x00002615
    2ff4:	00001861 	.word	0x00001861
    2ff8:	0000210d 	.word	0x0000210d
    2ffc:	0000a274 	.word	0x0000a274
    3000:	00001f29 	.word	0x00001f29
    3004:	2000003c 	.word	0x2000003c
    3008:	00001dbd 	.word	0x00001dbd
    300c:	00009a4c 	.word	0x00009a4c
    3010:	0000315d 	.word	0x0000315d
    3014:	0000a584 	.word	0x0000a584
    3018:	0000a58c 	.word	0x0000a58c
    301c:	00001ea9 	.word	0x00001ea9
    3020:	20000010 	.word	0x20000010
    3024:	0000a594 	.word	0x0000a594
    3028:	00003509 	.word	0x00003509
    302c:	00004899 	.word	0x00004899
    3030:	0000a5a8 	.word	0x0000a5a8
    3034:	00009398 	.word	0x00009398
    3038:	0000a5c4 	.word	0x0000a5c4
    303c:	0000a5cc 	.word	0x0000a5cc
    3040:	0000a5d4 	.word	0x0000a5d4
    3044:	0000187d 	.word	0x0000187d

00003048 <__udivsi3>:
    3048:	2200      	movs	r2, #0
    304a:	0843      	lsrs	r3, r0, #1
    304c:	428b      	cmp	r3, r1
    304e:	d374      	bcc.n	313a <__udivsi3+0xf2>
    3050:	0903      	lsrs	r3, r0, #4
    3052:	428b      	cmp	r3, r1
    3054:	d35f      	bcc.n	3116 <__udivsi3+0xce>
    3056:	0a03      	lsrs	r3, r0, #8
    3058:	428b      	cmp	r3, r1
    305a:	d344      	bcc.n	30e6 <__udivsi3+0x9e>
    305c:	0b03      	lsrs	r3, r0, #12
    305e:	428b      	cmp	r3, r1
    3060:	d328      	bcc.n	30b4 <__udivsi3+0x6c>
    3062:	0c03      	lsrs	r3, r0, #16
    3064:	428b      	cmp	r3, r1
    3066:	d30d      	bcc.n	3084 <__udivsi3+0x3c>
    3068:	22ff      	movs	r2, #255	; 0xff
    306a:	0209      	lsls	r1, r1, #8
    306c:	ba12      	rev	r2, r2
    306e:	0c03      	lsrs	r3, r0, #16
    3070:	428b      	cmp	r3, r1
    3072:	d302      	bcc.n	307a <__udivsi3+0x32>
    3074:	1212      	asrs	r2, r2, #8
    3076:	0209      	lsls	r1, r1, #8
    3078:	d065      	beq.n	3146 <__udivsi3+0xfe>
    307a:	0b03      	lsrs	r3, r0, #12
    307c:	428b      	cmp	r3, r1
    307e:	d319      	bcc.n	30b4 <__udivsi3+0x6c>
    3080:	e000      	b.n	3084 <__udivsi3+0x3c>
    3082:	0a09      	lsrs	r1, r1, #8
    3084:	0bc3      	lsrs	r3, r0, #15
    3086:	428b      	cmp	r3, r1
    3088:	d301      	bcc.n	308e <__udivsi3+0x46>
    308a:	03cb      	lsls	r3, r1, #15
    308c:	1ac0      	subs	r0, r0, r3
    308e:	4152      	adcs	r2, r2
    3090:	0b83      	lsrs	r3, r0, #14
    3092:	428b      	cmp	r3, r1
    3094:	d301      	bcc.n	309a <__udivsi3+0x52>
    3096:	038b      	lsls	r3, r1, #14
    3098:	1ac0      	subs	r0, r0, r3
    309a:	4152      	adcs	r2, r2
    309c:	0b43      	lsrs	r3, r0, #13
    309e:	428b      	cmp	r3, r1
    30a0:	d301      	bcc.n	30a6 <__udivsi3+0x5e>
    30a2:	034b      	lsls	r3, r1, #13
    30a4:	1ac0      	subs	r0, r0, r3
    30a6:	4152      	adcs	r2, r2
    30a8:	0b03      	lsrs	r3, r0, #12
    30aa:	428b      	cmp	r3, r1
    30ac:	d301      	bcc.n	30b2 <__udivsi3+0x6a>
    30ae:	030b      	lsls	r3, r1, #12
    30b0:	1ac0      	subs	r0, r0, r3
    30b2:	4152      	adcs	r2, r2
    30b4:	0ac3      	lsrs	r3, r0, #11
    30b6:	428b      	cmp	r3, r1
    30b8:	d301      	bcc.n	30be <__udivsi3+0x76>
    30ba:	02cb      	lsls	r3, r1, #11
    30bc:	1ac0      	subs	r0, r0, r3
    30be:	4152      	adcs	r2, r2
    30c0:	0a83      	lsrs	r3, r0, #10
    30c2:	428b      	cmp	r3, r1
    30c4:	d301      	bcc.n	30ca <__udivsi3+0x82>
    30c6:	028b      	lsls	r3, r1, #10
    30c8:	1ac0      	subs	r0, r0, r3
    30ca:	4152      	adcs	r2, r2
    30cc:	0a43      	lsrs	r3, r0, #9
    30ce:	428b      	cmp	r3, r1
    30d0:	d301      	bcc.n	30d6 <__udivsi3+0x8e>
    30d2:	024b      	lsls	r3, r1, #9
    30d4:	1ac0      	subs	r0, r0, r3
    30d6:	4152      	adcs	r2, r2
    30d8:	0a03      	lsrs	r3, r0, #8
    30da:	428b      	cmp	r3, r1
    30dc:	d301      	bcc.n	30e2 <__udivsi3+0x9a>
    30de:	020b      	lsls	r3, r1, #8
    30e0:	1ac0      	subs	r0, r0, r3
    30e2:	4152      	adcs	r2, r2
    30e4:	d2cd      	bcs.n	3082 <__udivsi3+0x3a>
    30e6:	09c3      	lsrs	r3, r0, #7
    30e8:	428b      	cmp	r3, r1
    30ea:	d301      	bcc.n	30f0 <__udivsi3+0xa8>
    30ec:	01cb      	lsls	r3, r1, #7
    30ee:	1ac0      	subs	r0, r0, r3
    30f0:	4152      	adcs	r2, r2
    30f2:	0983      	lsrs	r3, r0, #6
    30f4:	428b      	cmp	r3, r1
    30f6:	d301      	bcc.n	30fc <__udivsi3+0xb4>
    30f8:	018b      	lsls	r3, r1, #6
    30fa:	1ac0      	subs	r0, r0, r3
    30fc:	4152      	adcs	r2, r2
    30fe:	0943      	lsrs	r3, r0, #5
    3100:	428b      	cmp	r3, r1
    3102:	d301      	bcc.n	3108 <__udivsi3+0xc0>
    3104:	014b      	lsls	r3, r1, #5
    3106:	1ac0      	subs	r0, r0, r3
    3108:	4152      	adcs	r2, r2
    310a:	0903      	lsrs	r3, r0, #4
    310c:	428b      	cmp	r3, r1
    310e:	d301      	bcc.n	3114 <__udivsi3+0xcc>
    3110:	010b      	lsls	r3, r1, #4
    3112:	1ac0      	subs	r0, r0, r3
    3114:	4152      	adcs	r2, r2
    3116:	08c3      	lsrs	r3, r0, #3
    3118:	428b      	cmp	r3, r1
    311a:	d301      	bcc.n	3120 <__udivsi3+0xd8>
    311c:	00cb      	lsls	r3, r1, #3
    311e:	1ac0      	subs	r0, r0, r3
    3120:	4152      	adcs	r2, r2
    3122:	0883      	lsrs	r3, r0, #2
    3124:	428b      	cmp	r3, r1
    3126:	d301      	bcc.n	312c <__udivsi3+0xe4>
    3128:	008b      	lsls	r3, r1, #2
    312a:	1ac0      	subs	r0, r0, r3
    312c:	4152      	adcs	r2, r2
    312e:	0843      	lsrs	r3, r0, #1
    3130:	428b      	cmp	r3, r1
    3132:	d301      	bcc.n	3138 <__udivsi3+0xf0>
    3134:	004b      	lsls	r3, r1, #1
    3136:	1ac0      	subs	r0, r0, r3
    3138:	4152      	adcs	r2, r2
    313a:	1a41      	subs	r1, r0, r1
    313c:	d200      	bcs.n	3140 <__udivsi3+0xf8>
    313e:	4601      	mov	r1, r0
    3140:	4152      	adcs	r2, r2
    3142:	4610      	mov	r0, r2
    3144:	4770      	bx	lr
    3146:	e7ff      	b.n	3148 <__udivsi3+0x100>
    3148:	b501      	push	{r0, lr}
    314a:	2000      	movs	r0, #0
    314c:	f000 f8f0 	bl	3330 <__aeabi_idiv0>
    3150:	bd02      	pop	{r1, pc}
    3152:	46c0      	nop			; (mov r8, r8)

00003154 <__aeabi_uidivmod>:
    3154:	2900      	cmp	r1, #0
    3156:	d0f7      	beq.n	3148 <__udivsi3+0x100>
    3158:	e776      	b.n	3048 <__udivsi3>
    315a:	4770      	bx	lr

0000315c <__divsi3>:
    315c:	4603      	mov	r3, r0
    315e:	430b      	orrs	r3, r1
    3160:	d47f      	bmi.n	3262 <__divsi3+0x106>
    3162:	2200      	movs	r2, #0
    3164:	0843      	lsrs	r3, r0, #1
    3166:	428b      	cmp	r3, r1
    3168:	d374      	bcc.n	3254 <__divsi3+0xf8>
    316a:	0903      	lsrs	r3, r0, #4
    316c:	428b      	cmp	r3, r1
    316e:	d35f      	bcc.n	3230 <__divsi3+0xd4>
    3170:	0a03      	lsrs	r3, r0, #8
    3172:	428b      	cmp	r3, r1
    3174:	d344      	bcc.n	3200 <__divsi3+0xa4>
    3176:	0b03      	lsrs	r3, r0, #12
    3178:	428b      	cmp	r3, r1
    317a:	d328      	bcc.n	31ce <__divsi3+0x72>
    317c:	0c03      	lsrs	r3, r0, #16
    317e:	428b      	cmp	r3, r1
    3180:	d30d      	bcc.n	319e <__divsi3+0x42>
    3182:	22ff      	movs	r2, #255	; 0xff
    3184:	0209      	lsls	r1, r1, #8
    3186:	ba12      	rev	r2, r2
    3188:	0c03      	lsrs	r3, r0, #16
    318a:	428b      	cmp	r3, r1
    318c:	d302      	bcc.n	3194 <__divsi3+0x38>
    318e:	1212      	asrs	r2, r2, #8
    3190:	0209      	lsls	r1, r1, #8
    3192:	d065      	beq.n	3260 <__divsi3+0x104>
    3194:	0b03      	lsrs	r3, r0, #12
    3196:	428b      	cmp	r3, r1
    3198:	d319      	bcc.n	31ce <__divsi3+0x72>
    319a:	e000      	b.n	319e <__divsi3+0x42>
    319c:	0a09      	lsrs	r1, r1, #8
    319e:	0bc3      	lsrs	r3, r0, #15
    31a0:	428b      	cmp	r3, r1
    31a2:	d301      	bcc.n	31a8 <__divsi3+0x4c>
    31a4:	03cb      	lsls	r3, r1, #15
    31a6:	1ac0      	subs	r0, r0, r3
    31a8:	4152      	adcs	r2, r2
    31aa:	0b83      	lsrs	r3, r0, #14
    31ac:	428b      	cmp	r3, r1
    31ae:	d301      	bcc.n	31b4 <__divsi3+0x58>
    31b0:	038b      	lsls	r3, r1, #14
    31b2:	1ac0      	subs	r0, r0, r3
    31b4:	4152      	adcs	r2, r2
    31b6:	0b43      	lsrs	r3, r0, #13
    31b8:	428b      	cmp	r3, r1
    31ba:	d301      	bcc.n	31c0 <__divsi3+0x64>
    31bc:	034b      	lsls	r3, r1, #13
    31be:	1ac0      	subs	r0, r0, r3
    31c0:	4152      	adcs	r2, r2
    31c2:	0b03      	lsrs	r3, r0, #12
    31c4:	428b      	cmp	r3, r1
    31c6:	d301      	bcc.n	31cc <__divsi3+0x70>
    31c8:	030b      	lsls	r3, r1, #12
    31ca:	1ac0      	subs	r0, r0, r3
    31cc:	4152      	adcs	r2, r2
    31ce:	0ac3      	lsrs	r3, r0, #11
    31d0:	428b      	cmp	r3, r1
    31d2:	d301      	bcc.n	31d8 <__divsi3+0x7c>
    31d4:	02cb      	lsls	r3, r1, #11
    31d6:	1ac0      	subs	r0, r0, r3
    31d8:	4152      	adcs	r2, r2
    31da:	0a83      	lsrs	r3, r0, #10
    31dc:	428b      	cmp	r3, r1
    31de:	d301      	bcc.n	31e4 <__divsi3+0x88>
    31e0:	028b      	lsls	r3, r1, #10
    31e2:	1ac0      	subs	r0, r0, r3
    31e4:	4152      	adcs	r2, r2
    31e6:	0a43      	lsrs	r3, r0, #9
    31e8:	428b      	cmp	r3, r1
    31ea:	d301      	bcc.n	31f0 <__divsi3+0x94>
    31ec:	024b      	lsls	r3, r1, #9
    31ee:	1ac0      	subs	r0, r0, r3
    31f0:	4152      	adcs	r2, r2
    31f2:	0a03      	lsrs	r3, r0, #8
    31f4:	428b      	cmp	r3, r1
    31f6:	d301      	bcc.n	31fc <__divsi3+0xa0>
    31f8:	020b      	lsls	r3, r1, #8
    31fa:	1ac0      	subs	r0, r0, r3
    31fc:	4152      	adcs	r2, r2
    31fe:	d2cd      	bcs.n	319c <__divsi3+0x40>
    3200:	09c3      	lsrs	r3, r0, #7
    3202:	428b      	cmp	r3, r1
    3204:	d301      	bcc.n	320a <__divsi3+0xae>
    3206:	01cb      	lsls	r3, r1, #7
    3208:	1ac0      	subs	r0, r0, r3
    320a:	4152      	adcs	r2, r2
    320c:	0983      	lsrs	r3, r0, #6
    320e:	428b      	cmp	r3, r1
    3210:	d301      	bcc.n	3216 <__divsi3+0xba>
    3212:	018b      	lsls	r3, r1, #6
    3214:	1ac0      	subs	r0, r0, r3
    3216:	4152      	adcs	r2, r2
    3218:	0943      	lsrs	r3, r0, #5
    321a:	428b      	cmp	r3, r1
    321c:	d301      	bcc.n	3222 <__divsi3+0xc6>
    321e:	014b      	lsls	r3, r1, #5
    3220:	1ac0      	subs	r0, r0, r3
    3222:	4152      	adcs	r2, r2
    3224:	0903      	lsrs	r3, r0, #4
    3226:	428b      	cmp	r3, r1
    3228:	d301      	bcc.n	322e <__divsi3+0xd2>
    322a:	010b      	lsls	r3, r1, #4
    322c:	1ac0      	subs	r0, r0, r3
    322e:	4152      	adcs	r2, r2
    3230:	08c3      	lsrs	r3, r0, #3
    3232:	428b      	cmp	r3, r1
    3234:	d301      	bcc.n	323a <__divsi3+0xde>
    3236:	00cb      	lsls	r3, r1, #3
    3238:	1ac0      	subs	r0, r0, r3
    323a:	4152      	adcs	r2, r2
    323c:	0883      	lsrs	r3, r0, #2
    323e:	428b      	cmp	r3, r1
    3240:	d301      	bcc.n	3246 <__divsi3+0xea>
    3242:	008b      	lsls	r3, r1, #2
    3244:	1ac0      	subs	r0, r0, r3
    3246:	4152      	adcs	r2, r2
    3248:	0843      	lsrs	r3, r0, #1
    324a:	428b      	cmp	r3, r1
    324c:	d301      	bcc.n	3252 <__divsi3+0xf6>
    324e:	004b      	lsls	r3, r1, #1
    3250:	1ac0      	subs	r0, r0, r3
    3252:	4152      	adcs	r2, r2
    3254:	1a41      	subs	r1, r0, r1
    3256:	d200      	bcs.n	325a <__divsi3+0xfe>
    3258:	4601      	mov	r1, r0
    325a:	4152      	adcs	r2, r2
    325c:	4610      	mov	r0, r2
    325e:	4770      	bx	lr
    3260:	e05d      	b.n	331e <__divsi3+0x1c2>
    3262:	0fca      	lsrs	r2, r1, #31
    3264:	d000      	beq.n	3268 <__divsi3+0x10c>
    3266:	4249      	negs	r1, r1
    3268:	1003      	asrs	r3, r0, #32
    326a:	d300      	bcc.n	326e <__divsi3+0x112>
    326c:	4240      	negs	r0, r0
    326e:	4053      	eors	r3, r2
    3270:	2200      	movs	r2, #0
    3272:	469c      	mov	ip, r3
    3274:	0903      	lsrs	r3, r0, #4
    3276:	428b      	cmp	r3, r1
    3278:	d32d      	bcc.n	32d6 <__divsi3+0x17a>
    327a:	0a03      	lsrs	r3, r0, #8
    327c:	428b      	cmp	r3, r1
    327e:	d312      	bcc.n	32a6 <__divsi3+0x14a>
    3280:	22fc      	movs	r2, #252	; 0xfc
    3282:	0189      	lsls	r1, r1, #6
    3284:	ba12      	rev	r2, r2
    3286:	0a03      	lsrs	r3, r0, #8
    3288:	428b      	cmp	r3, r1
    328a:	d30c      	bcc.n	32a6 <__divsi3+0x14a>
    328c:	0189      	lsls	r1, r1, #6
    328e:	1192      	asrs	r2, r2, #6
    3290:	428b      	cmp	r3, r1
    3292:	d308      	bcc.n	32a6 <__divsi3+0x14a>
    3294:	0189      	lsls	r1, r1, #6
    3296:	1192      	asrs	r2, r2, #6
    3298:	428b      	cmp	r3, r1
    329a:	d304      	bcc.n	32a6 <__divsi3+0x14a>
    329c:	0189      	lsls	r1, r1, #6
    329e:	d03a      	beq.n	3316 <__divsi3+0x1ba>
    32a0:	1192      	asrs	r2, r2, #6
    32a2:	e000      	b.n	32a6 <__divsi3+0x14a>
    32a4:	0989      	lsrs	r1, r1, #6
    32a6:	09c3      	lsrs	r3, r0, #7
    32a8:	428b      	cmp	r3, r1
    32aa:	d301      	bcc.n	32b0 <__divsi3+0x154>
    32ac:	01cb      	lsls	r3, r1, #7
    32ae:	1ac0      	subs	r0, r0, r3
    32b0:	4152      	adcs	r2, r2
    32b2:	0983      	lsrs	r3, r0, #6
    32b4:	428b      	cmp	r3, r1
    32b6:	d301      	bcc.n	32bc <__divsi3+0x160>
    32b8:	018b      	lsls	r3, r1, #6
    32ba:	1ac0      	subs	r0, r0, r3
    32bc:	4152      	adcs	r2, r2
    32be:	0943      	lsrs	r3, r0, #5
    32c0:	428b      	cmp	r3, r1
    32c2:	d301      	bcc.n	32c8 <__divsi3+0x16c>
    32c4:	014b      	lsls	r3, r1, #5
    32c6:	1ac0      	subs	r0, r0, r3
    32c8:	4152      	adcs	r2, r2
    32ca:	0903      	lsrs	r3, r0, #4
    32cc:	428b      	cmp	r3, r1
    32ce:	d301      	bcc.n	32d4 <__divsi3+0x178>
    32d0:	010b      	lsls	r3, r1, #4
    32d2:	1ac0      	subs	r0, r0, r3
    32d4:	4152      	adcs	r2, r2
    32d6:	08c3      	lsrs	r3, r0, #3
    32d8:	428b      	cmp	r3, r1
    32da:	d301      	bcc.n	32e0 <__divsi3+0x184>
    32dc:	00cb      	lsls	r3, r1, #3
    32de:	1ac0      	subs	r0, r0, r3
    32e0:	4152      	adcs	r2, r2
    32e2:	0883      	lsrs	r3, r0, #2
    32e4:	428b      	cmp	r3, r1
    32e6:	d301      	bcc.n	32ec <__divsi3+0x190>
    32e8:	008b      	lsls	r3, r1, #2
    32ea:	1ac0      	subs	r0, r0, r3
    32ec:	4152      	adcs	r2, r2
    32ee:	d2d9      	bcs.n	32a4 <__divsi3+0x148>
    32f0:	0843      	lsrs	r3, r0, #1
    32f2:	428b      	cmp	r3, r1
    32f4:	d301      	bcc.n	32fa <__divsi3+0x19e>
    32f6:	004b      	lsls	r3, r1, #1
    32f8:	1ac0      	subs	r0, r0, r3
    32fa:	4152      	adcs	r2, r2
    32fc:	1a41      	subs	r1, r0, r1
    32fe:	d200      	bcs.n	3302 <__divsi3+0x1a6>
    3300:	4601      	mov	r1, r0
    3302:	4663      	mov	r3, ip
    3304:	4152      	adcs	r2, r2
    3306:	105b      	asrs	r3, r3, #1
    3308:	4610      	mov	r0, r2
    330a:	d301      	bcc.n	3310 <__divsi3+0x1b4>
    330c:	4240      	negs	r0, r0
    330e:	2b00      	cmp	r3, #0
    3310:	d500      	bpl.n	3314 <__divsi3+0x1b8>
    3312:	4249      	negs	r1, r1
    3314:	4770      	bx	lr
    3316:	4663      	mov	r3, ip
    3318:	105b      	asrs	r3, r3, #1
    331a:	d300      	bcc.n	331e <__divsi3+0x1c2>
    331c:	4240      	negs	r0, r0
    331e:	b501      	push	{r0, lr}
    3320:	2000      	movs	r0, #0
    3322:	f000 f805 	bl	3330 <__aeabi_idiv0>
    3326:	bd02      	pop	{r1, pc}

00003328 <__aeabi_idivmod>:
    3328:	2900      	cmp	r1, #0
    332a:	d0f8      	beq.n	331e <__divsi3+0x1c2>
    332c:	e716      	b.n	315c <__divsi3>
    332e:	4770      	bx	lr

00003330 <__aeabi_idiv0>:
    3330:	4770      	bx	lr
    3332:	46c0      	nop			; (mov r8, r8)

00003334 <__aeabi_uldivmod>:
    3334:	2b00      	cmp	r3, #0
    3336:	d111      	bne.n	335c <__aeabi_uldivmod+0x28>
    3338:	2a00      	cmp	r2, #0
    333a:	d10f      	bne.n	335c <__aeabi_uldivmod+0x28>
    333c:	2900      	cmp	r1, #0
    333e:	d100      	bne.n	3342 <__aeabi_uldivmod+0xe>
    3340:	2800      	cmp	r0, #0
    3342:	d002      	beq.n	334a <__aeabi_uldivmod+0x16>
    3344:	2100      	movs	r1, #0
    3346:	43c9      	mvns	r1, r1
    3348:	1c08      	adds	r0, r1, #0
    334a:	b407      	push	{r0, r1, r2}
    334c:	4802      	ldr	r0, [pc, #8]	; (3358 <__aeabi_uldivmod+0x24>)
    334e:	a102      	add	r1, pc, #8	; (adr r1, 3358 <__aeabi_uldivmod+0x24>)
    3350:	1840      	adds	r0, r0, r1
    3352:	9002      	str	r0, [sp, #8]
    3354:	bd03      	pop	{r0, r1, pc}
    3356:	46c0      	nop			; (mov r8, r8)
    3358:	ffffffd9 	.word	0xffffffd9
    335c:	b403      	push	{r0, r1}
    335e:	4668      	mov	r0, sp
    3360:	b501      	push	{r0, lr}
    3362:	9802      	ldr	r0, [sp, #8]
    3364:	f000 f810 	bl	3388 <__udivmoddi4>
    3368:	9b01      	ldr	r3, [sp, #4]
    336a:	469e      	mov	lr, r3
    336c:	b002      	add	sp, #8
    336e:	bc0c      	pop	{r2, r3}
    3370:	4770      	bx	lr
    3372:	46c0      	nop			; (mov r8, r8)

00003374 <__ffssi2>:
    3374:	b510      	push	{r4, lr}
    3376:	2300      	movs	r3, #0
    3378:	2800      	cmp	r0, #0
    337a:	d002      	beq.n	3382 <__ffssi2+0xe>
    337c:	f001 fb46 	bl	4a0c <__ctzsi2>
    3380:	1c43      	adds	r3, r0, #1
    3382:	0018      	movs	r0, r3
    3384:	bd10      	pop	{r4, pc}
    3386:	46c0      	nop			; (mov r8, r8)

00003388 <__udivmoddi4>:
    3388:	b5f0      	push	{r4, r5, r6, r7, lr}
    338a:	4657      	mov	r7, sl
    338c:	464e      	mov	r6, r9
    338e:	4645      	mov	r5, r8
    3390:	46de      	mov	lr, fp
    3392:	b5e0      	push	{r5, r6, r7, lr}
    3394:	0004      	movs	r4, r0
    3396:	b083      	sub	sp, #12
    3398:	000d      	movs	r5, r1
    339a:	4692      	mov	sl, r2
    339c:	4699      	mov	r9, r3
    339e:	428b      	cmp	r3, r1
    33a0:	d82f      	bhi.n	3402 <__udivmoddi4+0x7a>
    33a2:	d02c      	beq.n	33fe <__udivmoddi4+0x76>
    33a4:	4649      	mov	r1, r9
    33a6:	4650      	mov	r0, sl
    33a8:	f001 fb24 	bl	49f4 <__clzdi2>
    33ac:	0029      	movs	r1, r5
    33ae:	0006      	movs	r6, r0
    33b0:	0020      	movs	r0, r4
    33b2:	f001 fb1f 	bl	49f4 <__clzdi2>
    33b6:	1a33      	subs	r3, r6, r0
    33b8:	4698      	mov	r8, r3
    33ba:	3b20      	subs	r3, #32
    33bc:	469b      	mov	fp, r3
    33be:	d500      	bpl.n	33c2 <__udivmoddi4+0x3a>
    33c0:	e074      	b.n	34ac <__udivmoddi4+0x124>
    33c2:	4653      	mov	r3, sl
    33c4:	465a      	mov	r2, fp
    33c6:	4093      	lsls	r3, r2
    33c8:	001f      	movs	r7, r3
    33ca:	4653      	mov	r3, sl
    33cc:	4642      	mov	r2, r8
    33ce:	4093      	lsls	r3, r2
    33d0:	001e      	movs	r6, r3
    33d2:	42af      	cmp	r7, r5
    33d4:	d829      	bhi.n	342a <__udivmoddi4+0xa2>
    33d6:	d026      	beq.n	3426 <__udivmoddi4+0x9e>
    33d8:	465b      	mov	r3, fp
    33da:	1ba4      	subs	r4, r4, r6
    33dc:	41bd      	sbcs	r5, r7
    33de:	2b00      	cmp	r3, #0
    33e0:	da00      	bge.n	33e4 <__udivmoddi4+0x5c>
    33e2:	e079      	b.n	34d8 <__udivmoddi4+0x150>
    33e4:	2200      	movs	r2, #0
    33e6:	2300      	movs	r3, #0
    33e8:	9200      	str	r2, [sp, #0]
    33ea:	9301      	str	r3, [sp, #4]
    33ec:	2301      	movs	r3, #1
    33ee:	465a      	mov	r2, fp
    33f0:	4093      	lsls	r3, r2
    33f2:	9301      	str	r3, [sp, #4]
    33f4:	2301      	movs	r3, #1
    33f6:	4642      	mov	r2, r8
    33f8:	4093      	lsls	r3, r2
    33fa:	9300      	str	r3, [sp, #0]
    33fc:	e019      	b.n	3432 <__udivmoddi4+0xaa>
    33fe:	4282      	cmp	r2, r0
    3400:	d9d0      	bls.n	33a4 <__udivmoddi4+0x1c>
    3402:	2200      	movs	r2, #0
    3404:	2300      	movs	r3, #0
    3406:	9200      	str	r2, [sp, #0]
    3408:	9301      	str	r3, [sp, #4]
    340a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    340c:	2b00      	cmp	r3, #0
    340e:	d001      	beq.n	3414 <__udivmoddi4+0x8c>
    3410:	601c      	str	r4, [r3, #0]
    3412:	605d      	str	r5, [r3, #4]
    3414:	9800      	ldr	r0, [sp, #0]
    3416:	9901      	ldr	r1, [sp, #4]
    3418:	b003      	add	sp, #12
    341a:	bc3c      	pop	{r2, r3, r4, r5}
    341c:	4690      	mov	r8, r2
    341e:	4699      	mov	r9, r3
    3420:	46a2      	mov	sl, r4
    3422:	46ab      	mov	fp, r5
    3424:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3426:	42a3      	cmp	r3, r4
    3428:	d9d6      	bls.n	33d8 <__udivmoddi4+0x50>
    342a:	2200      	movs	r2, #0
    342c:	2300      	movs	r3, #0
    342e:	9200      	str	r2, [sp, #0]
    3430:	9301      	str	r3, [sp, #4]
    3432:	4643      	mov	r3, r8
    3434:	2b00      	cmp	r3, #0
    3436:	d0e8      	beq.n	340a <__udivmoddi4+0x82>
    3438:	07fb      	lsls	r3, r7, #31
    343a:	0872      	lsrs	r2, r6, #1
    343c:	431a      	orrs	r2, r3
    343e:	4646      	mov	r6, r8
    3440:	087b      	lsrs	r3, r7, #1
    3442:	e00e      	b.n	3462 <__udivmoddi4+0xda>
    3444:	42ab      	cmp	r3, r5
    3446:	d101      	bne.n	344c <__udivmoddi4+0xc4>
    3448:	42a2      	cmp	r2, r4
    344a:	d80c      	bhi.n	3466 <__udivmoddi4+0xde>
    344c:	1aa4      	subs	r4, r4, r2
    344e:	419d      	sbcs	r5, r3
    3450:	2001      	movs	r0, #1
    3452:	1924      	adds	r4, r4, r4
    3454:	416d      	adcs	r5, r5
    3456:	2100      	movs	r1, #0
    3458:	3e01      	subs	r6, #1
    345a:	1824      	adds	r4, r4, r0
    345c:	414d      	adcs	r5, r1
    345e:	2e00      	cmp	r6, #0
    3460:	d006      	beq.n	3470 <__udivmoddi4+0xe8>
    3462:	42ab      	cmp	r3, r5
    3464:	d9ee      	bls.n	3444 <__udivmoddi4+0xbc>
    3466:	3e01      	subs	r6, #1
    3468:	1924      	adds	r4, r4, r4
    346a:	416d      	adcs	r5, r5
    346c:	2e00      	cmp	r6, #0
    346e:	d1f8      	bne.n	3462 <__udivmoddi4+0xda>
    3470:	465b      	mov	r3, fp
    3472:	9800      	ldr	r0, [sp, #0]
    3474:	9901      	ldr	r1, [sp, #4]
    3476:	1900      	adds	r0, r0, r4
    3478:	4169      	adcs	r1, r5
    347a:	2b00      	cmp	r3, #0
    347c:	db22      	blt.n	34c4 <__udivmoddi4+0x13c>
    347e:	002b      	movs	r3, r5
    3480:	465a      	mov	r2, fp
    3482:	40d3      	lsrs	r3, r2
    3484:	002a      	movs	r2, r5
    3486:	4644      	mov	r4, r8
    3488:	40e2      	lsrs	r2, r4
    348a:	001c      	movs	r4, r3
    348c:	465b      	mov	r3, fp
    348e:	0015      	movs	r5, r2
    3490:	2b00      	cmp	r3, #0
    3492:	db2c      	blt.n	34ee <__udivmoddi4+0x166>
    3494:	0026      	movs	r6, r4
    3496:	409e      	lsls	r6, r3
    3498:	0033      	movs	r3, r6
    349a:	0026      	movs	r6, r4
    349c:	4647      	mov	r7, r8
    349e:	40be      	lsls	r6, r7
    34a0:	0032      	movs	r2, r6
    34a2:	1a80      	subs	r0, r0, r2
    34a4:	4199      	sbcs	r1, r3
    34a6:	9000      	str	r0, [sp, #0]
    34a8:	9101      	str	r1, [sp, #4]
    34aa:	e7ae      	b.n	340a <__udivmoddi4+0x82>
    34ac:	4642      	mov	r2, r8
    34ae:	2320      	movs	r3, #32
    34b0:	1a9b      	subs	r3, r3, r2
    34b2:	4652      	mov	r2, sl
    34b4:	40da      	lsrs	r2, r3
    34b6:	4641      	mov	r1, r8
    34b8:	0013      	movs	r3, r2
    34ba:	464a      	mov	r2, r9
    34bc:	408a      	lsls	r2, r1
    34be:	0017      	movs	r7, r2
    34c0:	431f      	orrs	r7, r3
    34c2:	e782      	b.n	33ca <__udivmoddi4+0x42>
    34c4:	4642      	mov	r2, r8
    34c6:	2320      	movs	r3, #32
    34c8:	1a9b      	subs	r3, r3, r2
    34ca:	002a      	movs	r2, r5
    34cc:	4646      	mov	r6, r8
    34ce:	409a      	lsls	r2, r3
    34d0:	0023      	movs	r3, r4
    34d2:	40f3      	lsrs	r3, r6
    34d4:	4313      	orrs	r3, r2
    34d6:	e7d5      	b.n	3484 <__udivmoddi4+0xfc>
    34d8:	4642      	mov	r2, r8
    34da:	2320      	movs	r3, #32
    34dc:	2100      	movs	r1, #0
    34de:	1a9b      	subs	r3, r3, r2
    34e0:	2200      	movs	r2, #0
    34e2:	9100      	str	r1, [sp, #0]
    34e4:	9201      	str	r2, [sp, #4]
    34e6:	2201      	movs	r2, #1
    34e8:	40da      	lsrs	r2, r3
    34ea:	9201      	str	r2, [sp, #4]
    34ec:	e782      	b.n	33f4 <__udivmoddi4+0x6c>
    34ee:	4642      	mov	r2, r8
    34f0:	2320      	movs	r3, #32
    34f2:	0026      	movs	r6, r4
    34f4:	1a9b      	subs	r3, r3, r2
    34f6:	40de      	lsrs	r6, r3
    34f8:	002f      	movs	r7, r5
    34fa:	46b4      	mov	ip, r6
    34fc:	4097      	lsls	r7, r2
    34fe:	4666      	mov	r6, ip
    3500:	003b      	movs	r3, r7
    3502:	4333      	orrs	r3, r6
    3504:	e7c9      	b.n	349a <__udivmoddi4+0x112>
    3506:	46c0      	nop			; (mov r8, r8)

00003508 <__aeabi_i2f>:
    3508:	b570      	push	{r4, r5, r6, lr}
    350a:	2800      	cmp	r0, #0
    350c:	d030      	beq.n	3570 <__aeabi_i2f+0x68>
    350e:	17c3      	asrs	r3, r0, #31
    3510:	18c4      	adds	r4, r0, r3
    3512:	405c      	eors	r4, r3
    3514:	0fc5      	lsrs	r5, r0, #31
    3516:	0020      	movs	r0, r4
    3518:	f001 fa4e 	bl	49b8 <__clzsi2>
    351c:	239e      	movs	r3, #158	; 0x9e
    351e:	1a1b      	subs	r3, r3, r0
    3520:	2b96      	cmp	r3, #150	; 0x96
    3522:	dc0d      	bgt.n	3540 <__aeabi_i2f+0x38>
    3524:	2296      	movs	r2, #150	; 0x96
    3526:	1ad2      	subs	r2, r2, r3
    3528:	4094      	lsls	r4, r2
    352a:	002a      	movs	r2, r5
    352c:	0264      	lsls	r4, r4, #9
    352e:	0a64      	lsrs	r4, r4, #9
    3530:	b2db      	uxtb	r3, r3
    3532:	0264      	lsls	r4, r4, #9
    3534:	05db      	lsls	r3, r3, #23
    3536:	0a60      	lsrs	r0, r4, #9
    3538:	07d2      	lsls	r2, r2, #31
    353a:	4318      	orrs	r0, r3
    353c:	4310      	orrs	r0, r2
    353e:	bd70      	pop	{r4, r5, r6, pc}
    3540:	2b99      	cmp	r3, #153	; 0x99
    3542:	dc19      	bgt.n	3578 <__aeabi_i2f+0x70>
    3544:	2299      	movs	r2, #153	; 0x99
    3546:	1ad2      	subs	r2, r2, r3
    3548:	2a00      	cmp	r2, #0
    354a:	dd29      	ble.n	35a0 <__aeabi_i2f+0x98>
    354c:	4094      	lsls	r4, r2
    354e:	0022      	movs	r2, r4
    3550:	4c14      	ldr	r4, [pc, #80]	; (35a4 <__aeabi_i2f+0x9c>)
    3552:	4014      	ands	r4, r2
    3554:	0751      	lsls	r1, r2, #29
    3556:	d004      	beq.n	3562 <__aeabi_i2f+0x5a>
    3558:	210f      	movs	r1, #15
    355a:	400a      	ands	r2, r1
    355c:	2a04      	cmp	r2, #4
    355e:	d000      	beq.n	3562 <__aeabi_i2f+0x5a>
    3560:	3404      	adds	r4, #4
    3562:	0162      	lsls	r2, r4, #5
    3564:	d413      	bmi.n	358e <__aeabi_i2f+0x86>
    3566:	01a4      	lsls	r4, r4, #6
    3568:	0a64      	lsrs	r4, r4, #9
    356a:	b2db      	uxtb	r3, r3
    356c:	002a      	movs	r2, r5
    356e:	e7e0      	b.n	3532 <__aeabi_i2f+0x2a>
    3570:	2200      	movs	r2, #0
    3572:	2300      	movs	r3, #0
    3574:	2400      	movs	r4, #0
    3576:	e7dc      	b.n	3532 <__aeabi_i2f+0x2a>
    3578:	2205      	movs	r2, #5
    357a:	0021      	movs	r1, r4
    357c:	1a12      	subs	r2, r2, r0
    357e:	40d1      	lsrs	r1, r2
    3580:	22b9      	movs	r2, #185	; 0xb9
    3582:	1ad2      	subs	r2, r2, r3
    3584:	4094      	lsls	r4, r2
    3586:	1e62      	subs	r2, r4, #1
    3588:	4194      	sbcs	r4, r2
    358a:	430c      	orrs	r4, r1
    358c:	e7da      	b.n	3544 <__aeabi_i2f+0x3c>
    358e:	4b05      	ldr	r3, [pc, #20]	; (35a4 <__aeabi_i2f+0x9c>)
    3590:	002a      	movs	r2, r5
    3592:	401c      	ands	r4, r3
    3594:	239f      	movs	r3, #159	; 0x9f
    3596:	01a4      	lsls	r4, r4, #6
    3598:	1a1b      	subs	r3, r3, r0
    359a:	0a64      	lsrs	r4, r4, #9
    359c:	b2db      	uxtb	r3, r3
    359e:	e7c8      	b.n	3532 <__aeabi_i2f+0x2a>
    35a0:	0022      	movs	r2, r4
    35a2:	e7d5      	b.n	3550 <__aeabi_i2f+0x48>
    35a4:	fbffffff 	.word	0xfbffffff

000035a8 <__aeabi_ddiv>:
    35a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    35aa:	4657      	mov	r7, sl
    35ac:	4645      	mov	r5, r8
    35ae:	46de      	mov	lr, fp
    35b0:	464e      	mov	r6, r9
    35b2:	b5e0      	push	{r5, r6, r7, lr}
    35b4:	004c      	lsls	r4, r1, #1
    35b6:	030e      	lsls	r6, r1, #12
    35b8:	b087      	sub	sp, #28
    35ba:	4683      	mov	fp, r0
    35bc:	4692      	mov	sl, r2
    35be:	001d      	movs	r5, r3
    35c0:	4680      	mov	r8, r0
    35c2:	0b36      	lsrs	r6, r6, #12
    35c4:	0d64      	lsrs	r4, r4, #21
    35c6:	0fcf      	lsrs	r7, r1, #31
    35c8:	2c00      	cmp	r4, #0
    35ca:	d04f      	beq.n	366c <__aeabi_ddiv+0xc4>
    35cc:	4b6f      	ldr	r3, [pc, #444]	; (378c <__aeabi_ddiv+0x1e4>)
    35ce:	429c      	cmp	r4, r3
    35d0:	d035      	beq.n	363e <__aeabi_ddiv+0x96>
    35d2:	2380      	movs	r3, #128	; 0x80
    35d4:	0f42      	lsrs	r2, r0, #29
    35d6:	041b      	lsls	r3, r3, #16
    35d8:	00f6      	lsls	r6, r6, #3
    35da:	4313      	orrs	r3, r2
    35dc:	4333      	orrs	r3, r6
    35de:	4699      	mov	r9, r3
    35e0:	00c3      	lsls	r3, r0, #3
    35e2:	4698      	mov	r8, r3
    35e4:	4b6a      	ldr	r3, [pc, #424]	; (3790 <__aeabi_ddiv+0x1e8>)
    35e6:	2600      	movs	r6, #0
    35e8:	469c      	mov	ip, r3
    35ea:	2300      	movs	r3, #0
    35ec:	4464      	add	r4, ip
    35ee:	9303      	str	r3, [sp, #12]
    35f0:	032b      	lsls	r3, r5, #12
    35f2:	0b1b      	lsrs	r3, r3, #12
    35f4:	469b      	mov	fp, r3
    35f6:	006b      	lsls	r3, r5, #1
    35f8:	0fed      	lsrs	r5, r5, #31
    35fa:	4650      	mov	r0, sl
    35fc:	0d5b      	lsrs	r3, r3, #21
    35fe:	9501      	str	r5, [sp, #4]
    3600:	d05e      	beq.n	36c0 <__aeabi_ddiv+0x118>
    3602:	4a62      	ldr	r2, [pc, #392]	; (378c <__aeabi_ddiv+0x1e4>)
    3604:	4293      	cmp	r3, r2
    3606:	d053      	beq.n	36b0 <__aeabi_ddiv+0x108>
    3608:	465a      	mov	r2, fp
    360a:	00d1      	lsls	r1, r2, #3
    360c:	2280      	movs	r2, #128	; 0x80
    360e:	0f40      	lsrs	r0, r0, #29
    3610:	0412      	lsls	r2, r2, #16
    3612:	4302      	orrs	r2, r0
    3614:	430a      	orrs	r2, r1
    3616:	4693      	mov	fp, r2
    3618:	4652      	mov	r2, sl
    361a:	00d1      	lsls	r1, r2, #3
    361c:	4a5c      	ldr	r2, [pc, #368]	; (3790 <__aeabi_ddiv+0x1e8>)
    361e:	4694      	mov	ip, r2
    3620:	2200      	movs	r2, #0
    3622:	4463      	add	r3, ip
    3624:	0038      	movs	r0, r7
    3626:	4068      	eors	r0, r5
    3628:	4684      	mov	ip, r0
    362a:	9002      	str	r0, [sp, #8]
    362c:	1ae4      	subs	r4, r4, r3
    362e:	4316      	orrs	r6, r2
    3630:	2e0f      	cmp	r6, #15
    3632:	d900      	bls.n	3636 <__aeabi_ddiv+0x8e>
    3634:	e0b4      	b.n	37a0 <__aeabi_ddiv+0x1f8>
    3636:	4b57      	ldr	r3, [pc, #348]	; (3794 <__aeabi_ddiv+0x1ec>)
    3638:	00b6      	lsls	r6, r6, #2
    363a:	599b      	ldr	r3, [r3, r6]
    363c:	469f      	mov	pc, r3
    363e:	0003      	movs	r3, r0
    3640:	4333      	orrs	r3, r6
    3642:	4699      	mov	r9, r3
    3644:	d16c      	bne.n	3720 <__aeabi_ddiv+0x178>
    3646:	2300      	movs	r3, #0
    3648:	4698      	mov	r8, r3
    364a:	3302      	adds	r3, #2
    364c:	2608      	movs	r6, #8
    364e:	9303      	str	r3, [sp, #12]
    3650:	e7ce      	b.n	35f0 <__aeabi_ddiv+0x48>
    3652:	46cb      	mov	fp, r9
    3654:	4641      	mov	r1, r8
    3656:	9a03      	ldr	r2, [sp, #12]
    3658:	9701      	str	r7, [sp, #4]
    365a:	2a02      	cmp	r2, #2
    365c:	d165      	bne.n	372a <__aeabi_ddiv+0x182>
    365e:	9b01      	ldr	r3, [sp, #4]
    3660:	4c4a      	ldr	r4, [pc, #296]	; (378c <__aeabi_ddiv+0x1e4>)
    3662:	469c      	mov	ip, r3
    3664:	2300      	movs	r3, #0
    3666:	2200      	movs	r2, #0
    3668:	4698      	mov	r8, r3
    366a:	e06b      	b.n	3744 <__aeabi_ddiv+0x19c>
    366c:	0003      	movs	r3, r0
    366e:	4333      	orrs	r3, r6
    3670:	4699      	mov	r9, r3
    3672:	d04e      	beq.n	3712 <__aeabi_ddiv+0x16a>
    3674:	2e00      	cmp	r6, #0
    3676:	d100      	bne.n	367a <__aeabi_ddiv+0xd2>
    3678:	e1bc      	b.n	39f4 <__aeabi_ddiv+0x44c>
    367a:	0030      	movs	r0, r6
    367c:	f001 f99c 	bl	49b8 <__clzsi2>
    3680:	0003      	movs	r3, r0
    3682:	3b0b      	subs	r3, #11
    3684:	2b1c      	cmp	r3, #28
    3686:	dd00      	ble.n	368a <__aeabi_ddiv+0xe2>
    3688:	e1ac      	b.n	39e4 <__aeabi_ddiv+0x43c>
    368a:	221d      	movs	r2, #29
    368c:	1ad3      	subs	r3, r2, r3
    368e:	465a      	mov	r2, fp
    3690:	0001      	movs	r1, r0
    3692:	40da      	lsrs	r2, r3
    3694:	3908      	subs	r1, #8
    3696:	408e      	lsls	r6, r1
    3698:	0013      	movs	r3, r2
    369a:	4333      	orrs	r3, r6
    369c:	4699      	mov	r9, r3
    369e:	465b      	mov	r3, fp
    36a0:	408b      	lsls	r3, r1
    36a2:	4698      	mov	r8, r3
    36a4:	2300      	movs	r3, #0
    36a6:	4c3c      	ldr	r4, [pc, #240]	; (3798 <__aeabi_ddiv+0x1f0>)
    36a8:	2600      	movs	r6, #0
    36aa:	1a24      	subs	r4, r4, r0
    36ac:	9303      	str	r3, [sp, #12]
    36ae:	e79f      	b.n	35f0 <__aeabi_ddiv+0x48>
    36b0:	4651      	mov	r1, sl
    36b2:	465a      	mov	r2, fp
    36b4:	4311      	orrs	r1, r2
    36b6:	d129      	bne.n	370c <__aeabi_ddiv+0x164>
    36b8:	2200      	movs	r2, #0
    36ba:	4693      	mov	fp, r2
    36bc:	3202      	adds	r2, #2
    36be:	e7b1      	b.n	3624 <__aeabi_ddiv+0x7c>
    36c0:	4659      	mov	r1, fp
    36c2:	4301      	orrs	r1, r0
    36c4:	d01e      	beq.n	3704 <__aeabi_ddiv+0x15c>
    36c6:	465b      	mov	r3, fp
    36c8:	2b00      	cmp	r3, #0
    36ca:	d100      	bne.n	36ce <__aeabi_ddiv+0x126>
    36cc:	e19e      	b.n	3a0c <__aeabi_ddiv+0x464>
    36ce:	4658      	mov	r0, fp
    36d0:	f001 f972 	bl	49b8 <__clzsi2>
    36d4:	0003      	movs	r3, r0
    36d6:	3b0b      	subs	r3, #11
    36d8:	2b1c      	cmp	r3, #28
    36da:	dd00      	ble.n	36de <__aeabi_ddiv+0x136>
    36dc:	e18f      	b.n	39fe <__aeabi_ddiv+0x456>
    36de:	0002      	movs	r2, r0
    36e0:	4659      	mov	r1, fp
    36e2:	3a08      	subs	r2, #8
    36e4:	4091      	lsls	r1, r2
    36e6:	468b      	mov	fp, r1
    36e8:	211d      	movs	r1, #29
    36ea:	1acb      	subs	r3, r1, r3
    36ec:	4651      	mov	r1, sl
    36ee:	40d9      	lsrs	r1, r3
    36f0:	000b      	movs	r3, r1
    36f2:	4659      	mov	r1, fp
    36f4:	430b      	orrs	r3, r1
    36f6:	4651      	mov	r1, sl
    36f8:	469b      	mov	fp, r3
    36fa:	4091      	lsls	r1, r2
    36fc:	4b26      	ldr	r3, [pc, #152]	; (3798 <__aeabi_ddiv+0x1f0>)
    36fe:	2200      	movs	r2, #0
    3700:	1a1b      	subs	r3, r3, r0
    3702:	e78f      	b.n	3624 <__aeabi_ddiv+0x7c>
    3704:	2300      	movs	r3, #0
    3706:	2201      	movs	r2, #1
    3708:	469b      	mov	fp, r3
    370a:	e78b      	b.n	3624 <__aeabi_ddiv+0x7c>
    370c:	4651      	mov	r1, sl
    370e:	2203      	movs	r2, #3
    3710:	e788      	b.n	3624 <__aeabi_ddiv+0x7c>
    3712:	2300      	movs	r3, #0
    3714:	4698      	mov	r8, r3
    3716:	3301      	adds	r3, #1
    3718:	2604      	movs	r6, #4
    371a:	2400      	movs	r4, #0
    371c:	9303      	str	r3, [sp, #12]
    371e:	e767      	b.n	35f0 <__aeabi_ddiv+0x48>
    3720:	2303      	movs	r3, #3
    3722:	46b1      	mov	r9, r6
    3724:	9303      	str	r3, [sp, #12]
    3726:	260c      	movs	r6, #12
    3728:	e762      	b.n	35f0 <__aeabi_ddiv+0x48>
    372a:	2a03      	cmp	r2, #3
    372c:	d100      	bne.n	3730 <__aeabi_ddiv+0x188>
    372e:	e25c      	b.n	3bea <__aeabi_ddiv+0x642>
    3730:	9b01      	ldr	r3, [sp, #4]
    3732:	2a01      	cmp	r2, #1
    3734:	d000      	beq.n	3738 <__aeabi_ddiv+0x190>
    3736:	e1e4      	b.n	3b02 <__aeabi_ddiv+0x55a>
    3738:	4013      	ands	r3, r2
    373a:	469c      	mov	ip, r3
    373c:	2300      	movs	r3, #0
    373e:	2400      	movs	r4, #0
    3740:	2200      	movs	r2, #0
    3742:	4698      	mov	r8, r3
    3744:	2100      	movs	r1, #0
    3746:	0312      	lsls	r2, r2, #12
    3748:	0b13      	lsrs	r3, r2, #12
    374a:	0d0a      	lsrs	r2, r1, #20
    374c:	0512      	lsls	r2, r2, #20
    374e:	431a      	orrs	r2, r3
    3750:	0523      	lsls	r3, r4, #20
    3752:	4c12      	ldr	r4, [pc, #72]	; (379c <__aeabi_ddiv+0x1f4>)
    3754:	4640      	mov	r0, r8
    3756:	4022      	ands	r2, r4
    3758:	4313      	orrs	r3, r2
    375a:	4662      	mov	r2, ip
    375c:	005b      	lsls	r3, r3, #1
    375e:	07d2      	lsls	r2, r2, #31
    3760:	085b      	lsrs	r3, r3, #1
    3762:	4313      	orrs	r3, r2
    3764:	0019      	movs	r1, r3
    3766:	b007      	add	sp, #28
    3768:	bc3c      	pop	{r2, r3, r4, r5}
    376a:	4690      	mov	r8, r2
    376c:	4699      	mov	r9, r3
    376e:	46a2      	mov	sl, r4
    3770:	46ab      	mov	fp, r5
    3772:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3774:	2300      	movs	r3, #0
    3776:	2280      	movs	r2, #128	; 0x80
    3778:	469c      	mov	ip, r3
    377a:	0312      	lsls	r2, r2, #12
    377c:	4698      	mov	r8, r3
    377e:	4c03      	ldr	r4, [pc, #12]	; (378c <__aeabi_ddiv+0x1e4>)
    3780:	e7e0      	b.n	3744 <__aeabi_ddiv+0x19c>
    3782:	2300      	movs	r3, #0
    3784:	4c01      	ldr	r4, [pc, #4]	; (378c <__aeabi_ddiv+0x1e4>)
    3786:	2200      	movs	r2, #0
    3788:	4698      	mov	r8, r3
    378a:	e7db      	b.n	3744 <__aeabi_ddiv+0x19c>
    378c:	000007ff 	.word	0x000007ff
    3790:	fffffc01 	.word	0xfffffc01
    3794:	0000a620 	.word	0x0000a620
    3798:	fffffc0d 	.word	0xfffffc0d
    379c:	800fffff 	.word	0x800fffff
    37a0:	45d9      	cmp	r9, fp
    37a2:	d900      	bls.n	37a6 <__aeabi_ddiv+0x1fe>
    37a4:	e139      	b.n	3a1a <__aeabi_ddiv+0x472>
    37a6:	d100      	bne.n	37aa <__aeabi_ddiv+0x202>
    37a8:	e134      	b.n	3a14 <__aeabi_ddiv+0x46c>
    37aa:	2300      	movs	r3, #0
    37ac:	4646      	mov	r6, r8
    37ae:	464d      	mov	r5, r9
    37b0:	469a      	mov	sl, r3
    37b2:	3c01      	subs	r4, #1
    37b4:	465b      	mov	r3, fp
    37b6:	0e0a      	lsrs	r2, r1, #24
    37b8:	021b      	lsls	r3, r3, #8
    37ba:	431a      	orrs	r2, r3
    37bc:	020b      	lsls	r3, r1, #8
    37be:	0c17      	lsrs	r7, r2, #16
    37c0:	9303      	str	r3, [sp, #12]
    37c2:	0413      	lsls	r3, r2, #16
    37c4:	0c1b      	lsrs	r3, r3, #16
    37c6:	0039      	movs	r1, r7
    37c8:	0028      	movs	r0, r5
    37ca:	4690      	mov	r8, r2
    37cc:	9301      	str	r3, [sp, #4]
    37ce:	f7ff fc3b 	bl	3048 <__udivsi3>
    37d2:	0002      	movs	r2, r0
    37d4:	9b01      	ldr	r3, [sp, #4]
    37d6:	4683      	mov	fp, r0
    37d8:	435a      	muls	r2, r3
    37da:	0028      	movs	r0, r5
    37dc:	0039      	movs	r1, r7
    37de:	4691      	mov	r9, r2
    37e0:	f7ff fcb8 	bl	3154 <__aeabi_uidivmod>
    37e4:	0c35      	lsrs	r5, r6, #16
    37e6:	0409      	lsls	r1, r1, #16
    37e8:	430d      	orrs	r5, r1
    37ea:	45a9      	cmp	r9, r5
    37ec:	d90d      	bls.n	380a <__aeabi_ddiv+0x262>
    37ee:	465b      	mov	r3, fp
    37f0:	4445      	add	r5, r8
    37f2:	3b01      	subs	r3, #1
    37f4:	45a8      	cmp	r8, r5
    37f6:	d900      	bls.n	37fa <__aeabi_ddiv+0x252>
    37f8:	e13a      	b.n	3a70 <__aeabi_ddiv+0x4c8>
    37fa:	45a9      	cmp	r9, r5
    37fc:	d800      	bhi.n	3800 <__aeabi_ddiv+0x258>
    37fe:	e137      	b.n	3a70 <__aeabi_ddiv+0x4c8>
    3800:	2302      	movs	r3, #2
    3802:	425b      	negs	r3, r3
    3804:	469c      	mov	ip, r3
    3806:	4445      	add	r5, r8
    3808:	44e3      	add	fp, ip
    380a:	464b      	mov	r3, r9
    380c:	1aeb      	subs	r3, r5, r3
    380e:	0039      	movs	r1, r7
    3810:	0018      	movs	r0, r3
    3812:	9304      	str	r3, [sp, #16]
    3814:	f7ff fc18 	bl	3048 <__udivsi3>
    3818:	9b01      	ldr	r3, [sp, #4]
    381a:	0005      	movs	r5, r0
    381c:	4343      	muls	r3, r0
    381e:	0039      	movs	r1, r7
    3820:	9804      	ldr	r0, [sp, #16]
    3822:	4699      	mov	r9, r3
    3824:	f7ff fc96 	bl	3154 <__aeabi_uidivmod>
    3828:	0433      	lsls	r3, r6, #16
    382a:	0409      	lsls	r1, r1, #16
    382c:	0c1b      	lsrs	r3, r3, #16
    382e:	430b      	orrs	r3, r1
    3830:	4599      	cmp	r9, r3
    3832:	d909      	bls.n	3848 <__aeabi_ddiv+0x2a0>
    3834:	4443      	add	r3, r8
    3836:	1e6a      	subs	r2, r5, #1
    3838:	4598      	cmp	r8, r3
    383a:	d900      	bls.n	383e <__aeabi_ddiv+0x296>
    383c:	e11a      	b.n	3a74 <__aeabi_ddiv+0x4cc>
    383e:	4599      	cmp	r9, r3
    3840:	d800      	bhi.n	3844 <__aeabi_ddiv+0x29c>
    3842:	e117      	b.n	3a74 <__aeabi_ddiv+0x4cc>
    3844:	3d02      	subs	r5, #2
    3846:	4443      	add	r3, r8
    3848:	464a      	mov	r2, r9
    384a:	1a9b      	subs	r3, r3, r2
    384c:	465a      	mov	r2, fp
    384e:	0412      	lsls	r2, r2, #16
    3850:	432a      	orrs	r2, r5
    3852:	9903      	ldr	r1, [sp, #12]
    3854:	4693      	mov	fp, r2
    3856:	0c10      	lsrs	r0, r2, #16
    3858:	0c0a      	lsrs	r2, r1, #16
    385a:	4691      	mov	r9, r2
    385c:	0409      	lsls	r1, r1, #16
    385e:	465a      	mov	r2, fp
    3860:	0c09      	lsrs	r1, r1, #16
    3862:	464e      	mov	r6, r9
    3864:	000d      	movs	r5, r1
    3866:	0412      	lsls	r2, r2, #16
    3868:	0c12      	lsrs	r2, r2, #16
    386a:	4345      	muls	r5, r0
    386c:	9105      	str	r1, [sp, #20]
    386e:	4351      	muls	r1, r2
    3870:	4372      	muls	r2, r6
    3872:	4370      	muls	r0, r6
    3874:	1952      	adds	r2, r2, r5
    3876:	0c0e      	lsrs	r6, r1, #16
    3878:	18b2      	adds	r2, r6, r2
    387a:	4295      	cmp	r5, r2
    387c:	d903      	bls.n	3886 <__aeabi_ddiv+0x2de>
    387e:	2580      	movs	r5, #128	; 0x80
    3880:	026d      	lsls	r5, r5, #9
    3882:	46ac      	mov	ip, r5
    3884:	4460      	add	r0, ip
    3886:	0c15      	lsrs	r5, r2, #16
    3888:	0409      	lsls	r1, r1, #16
    388a:	0412      	lsls	r2, r2, #16
    388c:	0c09      	lsrs	r1, r1, #16
    388e:	1828      	adds	r0, r5, r0
    3890:	1852      	adds	r2, r2, r1
    3892:	4283      	cmp	r3, r0
    3894:	d200      	bcs.n	3898 <__aeabi_ddiv+0x2f0>
    3896:	e0ce      	b.n	3a36 <__aeabi_ddiv+0x48e>
    3898:	d100      	bne.n	389c <__aeabi_ddiv+0x2f4>
    389a:	e0c8      	b.n	3a2e <__aeabi_ddiv+0x486>
    389c:	1a1d      	subs	r5, r3, r0
    389e:	4653      	mov	r3, sl
    38a0:	1a9e      	subs	r6, r3, r2
    38a2:	45b2      	cmp	sl, r6
    38a4:	4192      	sbcs	r2, r2
    38a6:	4252      	negs	r2, r2
    38a8:	1aab      	subs	r3, r5, r2
    38aa:	469a      	mov	sl, r3
    38ac:	4598      	cmp	r8, r3
    38ae:	d100      	bne.n	38b2 <__aeabi_ddiv+0x30a>
    38b0:	e117      	b.n	3ae2 <__aeabi_ddiv+0x53a>
    38b2:	0039      	movs	r1, r7
    38b4:	0018      	movs	r0, r3
    38b6:	f7ff fbc7 	bl	3048 <__udivsi3>
    38ba:	9b01      	ldr	r3, [sp, #4]
    38bc:	0005      	movs	r5, r0
    38be:	4343      	muls	r3, r0
    38c0:	0039      	movs	r1, r7
    38c2:	4650      	mov	r0, sl
    38c4:	9304      	str	r3, [sp, #16]
    38c6:	f7ff fc45 	bl	3154 <__aeabi_uidivmod>
    38ca:	9804      	ldr	r0, [sp, #16]
    38cc:	040b      	lsls	r3, r1, #16
    38ce:	0c31      	lsrs	r1, r6, #16
    38d0:	4319      	orrs	r1, r3
    38d2:	4288      	cmp	r0, r1
    38d4:	d909      	bls.n	38ea <__aeabi_ddiv+0x342>
    38d6:	4441      	add	r1, r8
    38d8:	1e6b      	subs	r3, r5, #1
    38da:	4588      	cmp	r8, r1
    38dc:	d900      	bls.n	38e0 <__aeabi_ddiv+0x338>
    38de:	e107      	b.n	3af0 <__aeabi_ddiv+0x548>
    38e0:	4288      	cmp	r0, r1
    38e2:	d800      	bhi.n	38e6 <__aeabi_ddiv+0x33e>
    38e4:	e104      	b.n	3af0 <__aeabi_ddiv+0x548>
    38e6:	3d02      	subs	r5, #2
    38e8:	4441      	add	r1, r8
    38ea:	9b04      	ldr	r3, [sp, #16]
    38ec:	1acb      	subs	r3, r1, r3
    38ee:	0018      	movs	r0, r3
    38f0:	0039      	movs	r1, r7
    38f2:	9304      	str	r3, [sp, #16]
    38f4:	f7ff fba8 	bl	3048 <__udivsi3>
    38f8:	9b01      	ldr	r3, [sp, #4]
    38fa:	4682      	mov	sl, r0
    38fc:	4343      	muls	r3, r0
    38fe:	0039      	movs	r1, r7
    3900:	9804      	ldr	r0, [sp, #16]
    3902:	9301      	str	r3, [sp, #4]
    3904:	f7ff fc26 	bl	3154 <__aeabi_uidivmod>
    3908:	9801      	ldr	r0, [sp, #4]
    390a:	040b      	lsls	r3, r1, #16
    390c:	0431      	lsls	r1, r6, #16
    390e:	0c09      	lsrs	r1, r1, #16
    3910:	4319      	orrs	r1, r3
    3912:	4288      	cmp	r0, r1
    3914:	d90d      	bls.n	3932 <__aeabi_ddiv+0x38a>
    3916:	4653      	mov	r3, sl
    3918:	4441      	add	r1, r8
    391a:	3b01      	subs	r3, #1
    391c:	4588      	cmp	r8, r1
    391e:	d900      	bls.n	3922 <__aeabi_ddiv+0x37a>
    3920:	e0e8      	b.n	3af4 <__aeabi_ddiv+0x54c>
    3922:	4288      	cmp	r0, r1
    3924:	d800      	bhi.n	3928 <__aeabi_ddiv+0x380>
    3926:	e0e5      	b.n	3af4 <__aeabi_ddiv+0x54c>
    3928:	2302      	movs	r3, #2
    392a:	425b      	negs	r3, r3
    392c:	469c      	mov	ip, r3
    392e:	4441      	add	r1, r8
    3930:	44e2      	add	sl, ip
    3932:	9b01      	ldr	r3, [sp, #4]
    3934:	042d      	lsls	r5, r5, #16
    3936:	1ace      	subs	r6, r1, r3
    3938:	4651      	mov	r1, sl
    393a:	4329      	orrs	r1, r5
    393c:	9d05      	ldr	r5, [sp, #20]
    393e:	464f      	mov	r7, r9
    3940:	002a      	movs	r2, r5
    3942:	040b      	lsls	r3, r1, #16
    3944:	0c08      	lsrs	r0, r1, #16
    3946:	0c1b      	lsrs	r3, r3, #16
    3948:	435a      	muls	r2, r3
    394a:	4345      	muls	r5, r0
    394c:	437b      	muls	r3, r7
    394e:	4378      	muls	r0, r7
    3950:	195b      	adds	r3, r3, r5
    3952:	0c17      	lsrs	r7, r2, #16
    3954:	18fb      	adds	r3, r7, r3
    3956:	429d      	cmp	r5, r3
    3958:	d903      	bls.n	3962 <__aeabi_ddiv+0x3ba>
    395a:	2580      	movs	r5, #128	; 0x80
    395c:	026d      	lsls	r5, r5, #9
    395e:	46ac      	mov	ip, r5
    3960:	4460      	add	r0, ip
    3962:	0c1d      	lsrs	r5, r3, #16
    3964:	0412      	lsls	r2, r2, #16
    3966:	041b      	lsls	r3, r3, #16
    3968:	0c12      	lsrs	r2, r2, #16
    396a:	1828      	adds	r0, r5, r0
    396c:	189b      	adds	r3, r3, r2
    396e:	4286      	cmp	r6, r0
    3970:	d200      	bcs.n	3974 <__aeabi_ddiv+0x3cc>
    3972:	e093      	b.n	3a9c <__aeabi_ddiv+0x4f4>
    3974:	d100      	bne.n	3978 <__aeabi_ddiv+0x3d0>
    3976:	e08e      	b.n	3a96 <__aeabi_ddiv+0x4ee>
    3978:	2301      	movs	r3, #1
    397a:	4319      	orrs	r1, r3
    397c:	4ba0      	ldr	r3, [pc, #640]	; (3c00 <__aeabi_ddiv+0x658>)
    397e:	18e3      	adds	r3, r4, r3
    3980:	2b00      	cmp	r3, #0
    3982:	dc00      	bgt.n	3986 <__aeabi_ddiv+0x3de>
    3984:	e099      	b.n	3aba <__aeabi_ddiv+0x512>
    3986:	074a      	lsls	r2, r1, #29
    3988:	d000      	beq.n	398c <__aeabi_ddiv+0x3e4>
    398a:	e09e      	b.n	3aca <__aeabi_ddiv+0x522>
    398c:	465a      	mov	r2, fp
    398e:	01d2      	lsls	r2, r2, #7
    3990:	d506      	bpl.n	39a0 <__aeabi_ddiv+0x3f8>
    3992:	465a      	mov	r2, fp
    3994:	4b9b      	ldr	r3, [pc, #620]	; (3c04 <__aeabi_ddiv+0x65c>)
    3996:	401a      	ands	r2, r3
    3998:	2380      	movs	r3, #128	; 0x80
    399a:	4693      	mov	fp, r2
    399c:	00db      	lsls	r3, r3, #3
    399e:	18e3      	adds	r3, r4, r3
    39a0:	4a99      	ldr	r2, [pc, #612]	; (3c08 <__aeabi_ddiv+0x660>)
    39a2:	4293      	cmp	r3, r2
    39a4:	dd68      	ble.n	3a78 <__aeabi_ddiv+0x4d0>
    39a6:	2301      	movs	r3, #1
    39a8:	9a02      	ldr	r2, [sp, #8]
    39aa:	4c98      	ldr	r4, [pc, #608]	; (3c0c <__aeabi_ddiv+0x664>)
    39ac:	401a      	ands	r2, r3
    39ae:	2300      	movs	r3, #0
    39b0:	4694      	mov	ip, r2
    39b2:	4698      	mov	r8, r3
    39b4:	2200      	movs	r2, #0
    39b6:	e6c5      	b.n	3744 <__aeabi_ddiv+0x19c>
    39b8:	2280      	movs	r2, #128	; 0x80
    39ba:	464b      	mov	r3, r9
    39bc:	0312      	lsls	r2, r2, #12
    39be:	4213      	tst	r3, r2
    39c0:	d00a      	beq.n	39d8 <__aeabi_ddiv+0x430>
    39c2:	465b      	mov	r3, fp
    39c4:	4213      	tst	r3, r2
    39c6:	d106      	bne.n	39d6 <__aeabi_ddiv+0x42e>
    39c8:	431a      	orrs	r2, r3
    39ca:	0312      	lsls	r2, r2, #12
    39cc:	0b12      	lsrs	r2, r2, #12
    39ce:	46ac      	mov	ip, r5
    39d0:	4688      	mov	r8, r1
    39d2:	4c8e      	ldr	r4, [pc, #568]	; (3c0c <__aeabi_ddiv+0x664>)
    39d4:	e6b6      	b.n	3744 <__aeabi_ddiv+0x19c>
    39d6:	464b      	mov	r3, r9
    39d8:	431a      	orrs	r2, r3
    39da:	0312      	lsls	r2, r2, #12
    39dc:	0b12      	lsrs	r2, r2, #12
    39de:	46bc      	mov	ip, r7
    39e0:	4c8a      	ldr	r4, [pc, #552]	; (3c0c <__aeabi_ddiv+0x664>)
    39e2:	e6af      	b.n	3744 <__aeabi_ddiv+0x19c>
    39e4:	0003      	movs	r3, r0
    39e6:	465a      	mov	r2, fp
    39e8:	3b28      	subs	r3, #40	; 0x28
    39ea:	409a      	lsls	r2, r3
    39ec:	2300      	movs	r3, #0
    39ee:	4691      	mov	r9, r2
    39f0:	4698      	mov	r8, r3
    39f2:	e657      	b.n	36a4 <__aeabi_ddiv+0xfc>
    39f4:	4658      	mov	r0, fp
    39f6:	f000 ffdf 	bl	49b8 <__clzsi2>
    39fa:	3020      	adds	r0, #32
    39fc:	e640      	b.n	3680 <__aeabi_ddiv+0xd8>
    39fe:	0003      	movs	r3, r0
    3a00:	4652      	mov	r2, sl
    3a02:	3b28      	subs	r3, #40	; 0x28
    3a04:	409a      	lsls	r2, r3
    3a06:	2100      	movs	r1, #0
    3a08:	4693      	mov	fp, r2
    3a0a:	e677      	b.n	36fc <__aeabi_ddiv+0x154>
    3a0c:	f000 ffd4 	bl	49b8 <__clzsi2>
    3a10:	3020      	adds	r0, #32
    3a12:	e65f      	b.n	36d4 <__aeabi_ddiv+0x12c>
    3a14:	4588      	cmp	r8, r1
    3a16:	d200      	bcs.n	3a1a <__aeabi_ddiv+0x472>
    3a18:	e6c7      	b.n	37aa <__aeabi_ddiv+0x202>
    3a1a:	464b      	mov	r3, r9
    3a1c:	07de      	lsls	r6, r3, #31
    3a1e:	085d      	lsrs	r5, r3, #1
    3a20:	4643      	mov	r3, r8
    3a22:	085b      	lsrs	r3, r3, #1
    3a24:	431e      	orrs	r6, r3
    3a26:	4643      	mov	r3, r8
    3a28:	07db      	lsls	r3, r3, #31
    3a2a:	469a      	mov	sl, r3
    3a2c:	e6c2      	b.n	37b4 <__aeabi_ddiv+0x20c>
    3a2e:	2500      	movs	r5, #0
    3a30:	4592      	cmp	sl, r2
    3a32:	d300      	bcc.n	3a36 <__aeabi_ddiv+0x48e>
    3a34:	e733      	b.n	389e <__aeabi_ddiv+0x2f6>
    3a36:	9e03      	ldr	r6, [sp, #12]
    3a38:	4659      	mov	r1, fp
    3a3a:	46b4      	mov	ip, r6
    3a3c:	44e2      	add	sl, ip
    3a3e:	45b2      	cmp	sl, r6
    3a40:	41ad      	sbcs	r5, r5
    3a42:	426d      	negs	r5, r5
    3a44:	4445      	add	r5, r8
    3a46:	18eb      	adds	r3, r5, r3
    3a48:	3901      	subs	r1, #1
    3a4a:	4598      	cmp	r8, r3
    3a4c:	d207      	bcs.n	3a5e <__aeabi_ddiv+0x4b6>
    3a4e:	4298      	cmp	r0, r3
    3a50:	d900      	bls.n	3a54 <__aeabi_ddiv+0x4ac>
    3a52:	e07f      	b.n	3b54 <__aeabi_ddiv+0x5ac>
    3a54:	d100      	bne.n	3a58 <__aeabi_ddiv+0x4b0>
    3a56:	e0bc      	b.n	3bd2 <__aeabi_ddiv+0x62a>
    3a58:	1a1d      	subs	r5, r3, r0
    3a5a:	468b      	mov	fp, r1
    3a5c:	e71f      	b.n	389e <__aeabi_ddiv+0x2f6>
    3a5e:	4598      	cmp	r8, r3
    3a60:	d1fa      	bne.n	3a58 <__aeabi_ddiv+0x4b0>
    3a62:	9d03      	ldr	r5, [sp, #12]
    3a64:	4555      	cmp	r5, sl
    3a66:	d9f2      	bls.n	3a4e <__aeabi_ddiv+0x4a6>
    3a68:	4643      	mov	r3, r8
    3a6a:	468b      	mov	fp, r1
    3a6c:	1a1d      	subs	r5, r3, r0
    3a6e:	e716      	b.n	389e <__aeabi_ddiv+0x2f6>
    3a70:	469b      	mov	fp, r3
    3a72:	e6ca      	b.n	380a <__aeabi_ddiv+0x262>
    3a74:	0015      	movs	r5, r2
    3a76:	e6e7      	b.n	3848 <__aeabi_ddiv+0x2a0>
    3a78:	465a      	mov	r2, fp
    3a7a:	08c9      	lsrs	r1, r1, #3
    3a7c:	0752      	lsls	r2, r2, #29
    3a7e:	430a      	orrs	r2, r1
    3a80:	055b      	lsls	r3, r3, #21
    3a82:	4690      	mov	r8, r2
    3a84:	0d5c      	lsrs	r4, r3, #21
    3a86:	465a      	mov	r2, fp
    3a88:	2301      	movs	r3, #1
    3a8a:	9902      	ldr	r1, [sp, #8]
    3a8c:	0252      	lsls	r2, r2, #9
    3a8e:	4019      	ands	r1, r3
    3a90:	0b12      	lsrs	r2, r2, #12
    3a92:	468c      	mov	ip, r1
    3a94:	e656      	b.n	3744 <__aeabi_ddiv+0x19c>
    3a96:	2b00      	cmp	r3, #0
    3a98:	d100      	bne.n	3a9c <__aeabi_ddiv+0x4f4>
    3a9a:	e76f      	b.n	397c <__aeabi_ddiv+0x3d4>
    3a9c:	4446      	add	r6, r8
    3a9e:	1e4a      	subs	r2, r1, #1
    3aa0:	45b0      	cmp	r8, r6
    3aa2:	d929      	bls.n	3af8 <__aeabi_ddiv+0x550>
    3aa4:	0011      	movs	r1, r2
    3aa6:	4286      	cmp	r6, r0
    3aa8:	d000      	beq.n	3aac <__aeabi_ddiv+0x504>
    3aaa:	e765      	b.n	3978 <__aeabi_ddiv+0x3d0>
    3aac:	9a03      	ldr	r2, [sp, #12]
    3aae:	4293      	cmp	r3, r2
    3ab0:	d000      	beq.n	3ab4 <__aeabi_ddiv+0x50c>
    3ab2:	e761      	b.n	3978 <__aeabi_ddiv+0x3d0>
    3ab4:	e762      	b.n	397c <__aeabi_ddiv+0x3d4>
    3ab6:	2101      	movs	r1, #1
    3ab8:	4249      	negs	r1, r1
    3aba:	2001      	movs	r0, #1
    3abc:	1ac2      	subs	r2, r0, r3
    3abe:	2a38      	cmp	r2, #56	; 0x38
    3ac0:	dd21      	ble.n	3b06 <__aeabi_ddiv+0x55e>
    3ac2:	9b02      	ldr	r3, [sp, #8]
    3ac4:	4003      	ands	r3, r0
    3ac6:	469c      	mov	ip, r3
    3ac8:	e638      	b.n	373c <__aeabi_ddiv+0x194>
    3aca:	220f      	movs	r2, #15
    3acc:	400a      	ands	r2, r1
    3ace:	2a04      	cmp	r2, #4
    3ad0:	d100      	bne.n	3ad4 <__aeabi_ddiv+0x52c>
    3ad2:	e75b      	b.n	398c <__aeabi_ddiv+0x3e4>
    3ad4:	000a      	movs	r2, r1
    3ad6:	1d11      	adds	r1, r2, #4
    3ad8:	4291      	cmp	r1, r2
    3ada:	4192      	sbcs	r2, r2
    3adc:	4252      	negs	r2, r2
    3ade:	4493      	add	fp, r2
    3ae0:	e754      	b.n	398c <__aeabi_ddiv+0x3e4>
    3ae2:	4b47      	ldr	r3, [pc, #284]	; (3c00 <__aeabi_ddiv+0x658>)
    3ae4:	18e3      	adds	r3, r4, r3
    3ae6:	2b00      	cmp	r3, #0
    3ae8:	dde5      	ble.n	3ab6 <__aeabi_ddiv+0x50e>
    3aea:	2201      	movs	r2, #1
    3aec:	4252      	negs	r2, r2
    3aee:	e7f2      	b.n	3ad6 <__aeabi_ddiv+0x52e>
    3af0:	001d      	movs	r5, r3
    3af2:	e6fa      	b.n	38ea <__aeabi_ddiv+0x342>
    3af4:	469a      	mov	sl, r3
    3af6:	e71c      	b.n	3932 <__aeabi_ddiv+0x38a>
    3af8:	42b0      	cmp	r0, r6
    3afa:	d839      	bhi.n	3b70 <__aeabi_ddiv+0x5c8>
    3afc:	d06e      	beq.n	3bdc <__aeabi_ddiv+0x634>
    3afe:	0011      	movs	r1, r2
    3b00:	e73a      	b.n	3978 <__aeabi_ddiv+0x3d0>
    3b02:	9302      	str	r3, [sp, #8]
    3b04:	e73a      	b.n	397c <__aeabi_ddiv+0x3d4>
    3b06:	2a1f      	cmp	r2, #31
    3b08:	dc3c      	bgt.n	3b84 <__aeabi_ddiv+0x5dc>
    3b0a:	2320      	movs	r3, #32
    3b0c:	1a9b      	subs	r3, r3, r2
    3b0e:	000c      	movs	r4, r1
    3b10:	4658      	mov	r0, fp
    3b12:	4099      	lsls	r1, r3
    3b14:	4098      	lsls	r0, r3
    3b16:	1e4b      	subs	r3, r1, #1
    3b18:	4199      	sbcs	r1, r3
    3b1a:	465b      	mov	r3, fp
    3b1c:	40d4      	lsrs	r4, r2
    3b1e:	40d3      	lsrs	r3, r2
    3b20:	4320      	orrs	r0, r4
    3b22:	4308      	orrs	r0, r1
    3b24:	001a      	movs	r2, r3
    3b26:	0743      	lsls	r3, r0, #29
    3b28:	d009      	beq.n	3b3e <__aeabi_ddiv+0x596>
    3b2a:	230f      	movs	r3, #15
    3b2c:	4003      	ands	r3, r0
    3b2e:	2b04      	cmp	r3, #4
    3b30:	d005      	beq.n	3b3e <__aeabi_ddiv+0x596>
    3b32:	0001      	movs	r1, r0
    3b34:	1d08      	adds	r0, r1, #4
    3b36:	4288      	cmp	r0, r1
    3b38:	419b      	sbcs	r3, r3
    3b3a:	425b      	negs	r3, r3
    3b3c:	18d2      	adds	r2, r2, r3
    3b3e:	0213      	lsls	r3, r2, #8
    3b40:	d53a      	bpl.n	3bb8 <__aeabi_ddiv+0x610>
    3b42:	2301      	movs	r3, #1
    3b44:	9a02      	ldr	r2, [sp, #8]
    3b46:	2401      	movs	r4, #1
    3b48:	401a      	ands	r2, r3
    3b4a:	2300      	movs	r3, #0
    3b4c:	4694      	mov	ip, r2
    3b4e:	4698      	mov	r8, r3
    3b50:	2200      	movs	r2, #0
    3b52:	e5f7      	b.n	3744 <__aeabi_ddiv+0x19c>
    3b54:	2102      	movs	r1, #2
    3b56:	4249      	negs	r1, r1
    3b58:	468c      	mov	ip, r1
    3b5a:	9d03      	ldr	r5, [sp, #12]
    3b5c:	44e3      	add	fp, ip
    3b5e:	46ac      	mov	ip, r5
    3b60:	44e2      	add	sl, ip
    3b62:	45aa      	cmp	sl, r5
    3b64:	41ad      	sbcs	r5, r5
    3b66:	426d      	negs	r5, r5
    3b68:	4445      	add	r5, r8
    3b6a:	18ed      	adds	r5, r5, r3
    3b6c:	1a2d      	subs	r5, r5, r0
    3b6e:	e696      	b.n	389e <__aeabi_ddiv+0x2f6>
    3b70:	1e8a      	subs	r2, r1, #2
    3b72:	9903      	ldr	r1, [sp, #12]
    3b74:	004d      	lsls	r5, r1, #1
    3b76:	428d      	cmp	r5, r1
    3b78:	4189      	sbcs	r1, r1
    3b7a:	4249      	negs	r1, r1
    3b7c:	4441      	add	r1, r8
    3b7e:	1876      	adds	r6, r6, r1
    3b80:	9503      	str	r5, [sp, #12]
    3b82:	e78f      	b.n	3aa4 <__aeabi_ddiv+0x4fc>
    3b84:	201f      	movs	r0, #31
    3b86:	4240      	negs	r0, r0
    3b88:	1ac3      	subs	r3, r0, r3
    3b8a:	4658      	mov	r0, fp
    3b8c:	40d8      	lsrs	r0, r3
    3b8e:	0003      	movs	r3, r0
    3b90:	2a20      	cmp	r2, #32
    3b92:	d028      	beq.n	3be6 <__aeabi_ddiv+0x63e>
    3b94:	2040      	movs	r0, #64	; 0x40
    3b96:	465d      	mov	r5, fp
    3b98:	1a82      	subs	r2, r0, r2
    3b9a:	4095      	lsls	r5, r2
    3b9c:	4329      	orrs	r1, r5
    3b9e:	1e4a      	subs	r2, r1, #1
    3ba0:	4191      	sbcs	r1, r2
    3ba2:	4319      	orrs	r1, r3
    3ba4:	2307      	movs	r3, #7
    3ba6:	2200      	movs	r2, #0
    3ba8:	400b      	ands	r3, r1
    3baa:	d009      	beq.n	3bc0 <__aeabi_ddiv+0x618>
    3bac:	230f      	movs	r3, #15
    3bae:	2200      	movs	r2, #0
    3bb0:	400b      	ands	r3, r1
    3bb2:	0008      	movs	r0, r1
    3bb4:	2b04      	cmp	r3, #4
    3bb6:	d1bd      	bne.n	3b34 <__aeabi_ddiv+0x58c>
    3bb8:	0001      	movs	r1, r0
    3bba:	0753      	lsls	r3, r2, #29
    3bbc:	0252      	lsls	r2, r2, #9
    3bbe:	0b12      	lsrs	r2, r2, #12
    3bc0:	08c9      	lsrs	r1, r1, #3
    3bc2:	4319      	orrs	r1, r3
    3bc4:	2301      	movs	r3, #1
    3bc6:	4688      	mov	r8, r1
    3bc8:	9902      	ldr	r1, [sp, #8]
    3bca:	2400      	movs	r4, #0
    3bcc:	4019      	ands	r1, r3
    3bce:	468c      	mov	ip, r1
    3bd0:	e5b8      	b.n	3744 <__aeabi_ddiv+0x19c>
    3bd2:	4552      	cmp	r2, sl
    3bd4:	d8be      	bhi.n	3b54 <__aeabi_ddiv+0x5ac>
    3bd6:	468b      	mov	fp, r1
    3bd8:	2500      	movs	r5, #0
    3bda:	e660      	b.n	389e <__aeabi_ddiv+0x2f6>
    3bdc:	9d03      	ldr	r5, [sp, #12]
    3bde:	429d      	cmp	r5, r3
    3be0:	d3c6      	bcc.n	3b70 <__aeabi_ddiv+0x5c8>
    3be2:	0011      	movs	r1, r2
    3be4:	e762      	b.n	3aac <__aeabi_ddiv+0x504>
    3be6:	2500      	movs	r5, #0
    3be8:	e7d8      	b.n	3b9c <__aeabi_ddiv+0x5f4>
    3bea:	2280      	movs	r2, #128	; 0x80
    3bec:	465b      	mov	r3, fp
    3bee:	0312      	lsls	r2, r2, #12
    3bf0:	431a      	orrs	r2, r3
    3bf2:	9b01      	ldr	r3, [sp, #4]
    3bf4:	0312      	lsls	r2, r2, #12
    3bf6:	0b12      	lsrs	r2, r2, #12
    3bf8:	469c      	mov	ip, r3
    3bfa:	4688      	mov	r8, r1
    3bfc:	4c03      	ldr	r4, [pc, #12]	; (3c0c <__aeabi_ddiv+0x664>)
    3bfe:	e5a1      	b.n	3744 <__aeabi_ddiv+0x19c>
    3c00:	000003ff 	.word	0x000003ff
    3c04:	feffffff 	.word	0xfeffffff
    3c08:	000007fe 	.word	0x000007fe
    3c0c:	000007ff 	.word	0x000007ff

00003c10 <__aeabi_dmul>:
    3c10:	b5f0      	push	{r4, r5, r6, r7, lr}
    3c12:	4657      	mov	r7, sl
    3c14:	4645      	mov	r5, r8
    3c16:	46de      	mov	lr, fp
    3c18:	464e      	mov	r6, r9
    3c1a:	b5e0      	push	{r5, r6, r7, lr}
    3c1c:	030c      	lsls	r4, r1, #12
    3c1e:	4698      	mov	r8, r3
    3c20:	004e      	lsls	r6, r1, #1
    3c22:	0b23      	lsrs	r3, r4, #12
    3c24:	b087      	sub	sp, #28
    3c26:	0007      	movs	r7, r0
    3c28:	4692      	mov	sl, r2
    3c2a:	469b      	mov	fp, r3
    3c2c:	0d76      	lsrs	r6, r6, #21
    3c2e:	0fcd      	lsrs	r5, r1, #31
    3c30:	2e00      	cmp	r6, #0
    3c32:	d06b      	beq.n	3d0c <__aeabi_dmul+0xfc>
    3c34:	4b6d      	ldr	r3, [pc, #436]	; (3dec <__aeabi_dmul+0x1dc>)
    3c36:	429e      	cmp	r6, r3
    3c38:	d035      	beq.n	3ca6 <__aeabi_dmul+0x96>
    3c3a:	2480      	movs	r4, #128	; 0x80
    3c3c:	465b      	mov	r3, fp
    3c3e:	0f42      	lsrs	r2, r0, #29
    3c40:	0424      	lsls	r4, r4, #16
    3c42:	00db      	lsls	r3, r3, #3
    3c44:	4314      	orrs	r4, r2
    3c46:	431c      	orrs	r4, r3
    3c48:	00c3      	lsls	r3, r0, #3
    3c4a:	4699      	mov	r9, r3
    3c4c:	4b68      	ldr	r3, [pc, #416]	; (3df0 <__aeabi_dmul+0x1e0>)
    3c4e:	46a3      	mov	fp, r4
    3c50:	469c      	mov	ip, r3
    3c52:	2300      	movs	r3, #0
    3c54:	2700      	movs	r7, #0
    3c56:	4466      	add	r6, ip
    3c58:	9302      	str	r3, [sp, #8]
    3c5a:	4643      	mov	r3, r8
    3c5c:	031c      	lsls	r4, r3, #12
    3c5e:	005a      	lsls	r2, r3, #1
    3c60:	0fdb      	lsrs	r3, r3, #31
    3c62:	4650      	mov	r0, sl
    3c64:	0b24      	lsrs	r4, r4, #12
    3c66:	0d52      	lsrs	r2, r2, #21
    3c68:	4698      	mov	r8, r3
    3c6a:	d100      	bne.n	3c6e <__aeabi_dmul+0x5e>
    3c6c:	e076      	b.n	3d5c <__aeabi_dmul+0x14c>
    3c6e:	4b5f      	ldr	r3, [pc, #380]	; (3dec <__aeabi_dmul+0x1dc>)
    3c70:	429a      	cmp	r2, r3
    3c72:	d06d      	beq.n	3d50 <__aeabi_dmul+0x140>
    3c74:	2380      	movs	r3, #128	; 0x80
    3c76:	0f41      	lsrs	r1, r0, #29
    3c78:	041b      	lsls	r3, r3, #16
    3c7a:	430b      	orrs	r3, r1
    3c7c:	495c      	ldr	r1, [pc, #368]	; (3df0 <__aeabi_dmul+0x1e0>)
    3c7e:	00e4      	lsls	r4, r4, #3
    3c80:	468c      	mov	ip, r1
    3c82:	431c      	orrs	r4, r3
    3c84:	00c3      	lsls	r3, r0, #3
    3c86:	2000      	movs	r0, #0
    3c88:	4462      	add	r2, ip
    3c8a:	4641      	mov	r1, r8
    3c8c:	18b6      	adds	r6, r6, r2
    3c8e:	4069      	eors	r1, r5
    3c90:	1c72      	adds	r2, r6, #1
    3c92:	9101      	str	r1, [sp, #4]
    3c94:	4694      	mov	ip, r2
    3c96:	4307      	orrs	r7, r0
    3c98:	2f0f      	cmp	r7, #15
    3c9a:	d900      	bls.n	3c9e <__aeabi_dmul+0x8e>
    3c9c:	e0b0      	b.n	3e00 <__aeabi_dmul+0x1f0>
    3c9e:	4a55      	ldr	r2, [pc, #340]	; (3df4 <__aeabi_dmul+0x1e4>)
    3ca0:	00bf      	lsls	r7, r7, #2
    3ca2:	59d2      	ldr	r2, [r2, r7]
    3ca4:	4697      	mov	pc, r2
    3ca6:	465b      	mov	r3, fp
    3ca8:	4303      	orrs	r3, r0
    3caa:	4699      	mov	r9, r3
    3cac:	d000      	beq.n	3cb0 <__aeabi_dmul+0xa0>
    3cae:	e087      	b.n	3dc0 <__aeabi_dmul+0x1b0>
    3cb0:	2300      	movs	r3, #0
    3cb2:	469b      	mov	fp, r3
    3cb4:	3302      	adds	r3, #2
    3cb6:	2708      	movs	r7, #8
    3cb8:	9302      	str	r3, [sp, #8]
    3cba:	e7ce      	b.n	3c5a <__aeabi_dmul+0x4a>
    3cbc:	4642      	mov	r2, r8
    3cbe:	9201      	str	r2, [sp, #4]
    3cc0:	2802      	cmp	r0, #2
    3cc2:	d067      	beq.n	3d94 <__aeabi_dmul+0x184>
    3cc4:	2803      	cmp	r0, #3
    3cc6:	d100      	bne.n	3cca <__aeabi_dmul+0xba>
    3cc8:	e20e      	b.n	40e8 <__aeabi_dmul+0x4d8>
    3cca:	2801      	cmp	r0, #1
    3ccc:	d000      	beq.n	3cd0 <__aeabi_dmul+0xc0>
    3cce:	e162      	b.n	3f96 <__aeabi_dmul+0x386>
    3cd0:	2300      	movs	r3, #0
    3cd2:	2400      	movs	r4, #0
    3cd4:	2200      	movs	r2, #0
    3cd6:	4699      	mov	r9, r3
    3cd8:	9901      	ldr	r1, [sp, #4]
    3cda:	4001      	ands	r1, r0
    3cdc:	b2cd      	uxtb	r5, r1
    3cde:	2100      	movs	r1, #0
    3ce0:	0312      	lsls	r2, r2, #12
    3ce2:	0d0b      	lsrs	r3, r1, #20
    3ce4:	0b12      	lsrs	r2, r2, #12
    3ce6:	051b      	lsls	r3, r3, #20
    3ce8:	4313      	orrs	r3, r2
    3cea:	4a43      	ldr	r2, [pc, #268]	; (3df8 <__aeabi_dmul+0x1e8>)
    3cec:	0524      	lsls	r4, r4, #20
    3cee:	4013      	ands	r3, r2
    3cf0:	431c      	orrs	r4, r3
    3cf2:	0064      	lsls	r4, r4, #1
    3cf4:	07ed      	lsls	r5, r5, #31
    3cf6:	0864      	lsrs	r4, r4, #1
    3cf8:	432c      	orrs	r4, r5
    3cfa:	4648      	mov	r0, r9
    3cfc:	0021      	movs	r1, r4
    3cfe:	b007      	add	sp, #28
    3d00:	bc3c      	pop	{r2, r3, r4, r5}
    3d02:	4690      	mov	r8, r2
    3d04:	4699      	mov	r9, r3
    3d06:	46a2      	mov	sl, r4
    3d08:	46ab      	mov	fp, r5
    3d0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3d0c:	4303      	orrs	r3, r0
    3d0e:	4699      	mov	r9, r3
    3d10:	d04f      	beq.n	3db2 <__aeabi_dmul+0x1a2>
    3d12:	465b      	mov	r3, fp
    3d14:	2b00      	cmp	r3, #0
    3d16:	d100      	bne.n	3d1a <__aeabi_dmul+0x10a>
    3d18:	e189      	b.n	402e <__aeabi_dmul+0x41e>
    3d1a:	4658      	mov	r0, fp
    3d1c:	f000 fe4c 	bl	49b8 <__clzsi2>
    3d20:	0003      	movs	r3, r0
    3d22:	3b0b      	subs	r3, #11
    3d24:	2b1c      	cmp	r3, #28
    3d26:	dd00      	ble.n	3d2a <__aeabi_dmul+0x11a>
    3d28:	e17a      	b.n	4020 <__aeabi_dmul+0x410>
    3d2a:	221d      	movs	r2, #29
    3d2c:	1ad3      	subs	r3, r2, r3
    3d2e:	003a      	movs	r2, r7
    3d30:	0001      	movs	r1, r0
    3d32:	465c      	mov	r4, fp
    3d34:	40da      	lsrs	r2, r3
    3d36:	3908      	subs	r1, #8
    3d38:	408c      	lsls	r4, r1
    3d3a:	0013      	movs	r3, r2
    3d3c:	408f      	lsls	r7, r1
    3d3e:	4323      	orrs	r3, r4
    3d40:	469b      	mov	fp, r3
    3d42:	46b9      	mov	r9, r7
    3d44:	2300      	movs	r3, #0
    3d46:	4e2d      	ldr	r6, [pc, #180]	; (3dfc <__aeabi_dmul+0x1ec>)
    3d48:	2700      	movs	r7, #0
    3d4a:	1a36      	subs	r6, r6, r0
    3d4c:	9302      	str	r3, [sp, #8]
    3d4e:	e784      	b.n	3c5a <__aeabi_dmul+0x4a>
    3d50:	4653      	mov	r3, sl
    3d52:	4323      	orrs	r3, r4
    3d54:	d12a      	bne.n	3dac <__aeabi_dmul+0x19c>
    3d56:	2400      	movs	r4, #0
    3d58:	2002      	movs	r0, #2
    3d5a:	e796      	b.n	3c8a <__aeabi_dmul+0x7a>
    3d5c:	4653      	mov	r3, sl
    3d5e:	4323      	orrs	r3, r4
    3d60:	d020      	beq.n	3da4 <__aeabi_dmul+0x194>
    3d62:	2c00      	cmp	r4, #0
    3d64:	d100      	bne.n	3d68 <__aeabi_dmul+0x158>
    3d66:	e157      	b.n	4018 <__aeabi_dmul+0x408>
    3d68:	0020      	movs	r0, r4
    3d6a:	f000 fe25 	bl	49b8 <__clzsi2>
    3d6e:	0003      	movs	r3, r0
    3d70:	3b0b      	subs	r3, #11
    3d72:	2b1c      	cmp	r3, #28
    3d74:	dd00      	ble.n	3d78 <__aeabi_dmul+0x168>
    3d76:	e149      	b.n	400c <__aeabi_dmul+0x3fc>
    3d78:	211d      	movs	r1, #29
    3d7a:	1acb      	subs	r3, r1, r3
    3d7c:	4651      	mov	r1, sl
    3d7e:	0002      	movs	r2, r0
    3d80:	40d9      	lsrs	r1, r3
    3d82:	4653      	mov	r3, sl
    3d84:	3a08      	subs	r2, #8
    3d86:	4094      	lsls	r4, r2
    3d88:	4093      	lsls	r3, r2
    3d8a:	430c      	orrs	r4, r1
    3d8c:	4a1b      	ldr	r2, [pc, #108]	; (3dfc <__aeabi_dmul+0x1ec>)
    3d8e:	1a12      	subs	r2, r2, r0
    3d90:	2000      	movs	r0, #0
    3d92:	e77a      	b.n	3c8a <__aeabi_dmul+0x7a>
    3d94:	2501      	movs	r5, #1
    3d96:	9b01      	ldr	r3, [sp, #4]
    3d98:	4c14      	ldr	r4, [pc, #80]	; (3dec <__aeabi_dmul+0x1dc>)
    3d9a:	401d      	ands	r5, r3
    3d9c:	2300      	movs	r3, #0
    3d9e:	2200      	movs	r2, #0
    3da0:	4699      	mov	r9, r3
    3da2:	e79c      	b.n	3cde <__aeabi_dmul+0xce>
    3da4:	2400      	movs	r4, #0
    3da6:	2200      	movs	r2, #0
    3da8:	2001      	movs	r0, #1
    3daa:	e76e      	b.n	3c8a <__aeabi_dmul+0x7a>
    3dac:	4653      	mov	r3, sl
    3dae:	2003      	movs	r0, #3
    3db0:	e76b      	b.n	3c8a <__aeabi_dmul+0x7a>
    3db2:	2300      	movs	r3, #0
    3db4:	469b      	mov	fp, r3
    3db6:	3301      	adds	r3, #1
    3db8:	2704      	movs	r7, #4
    3dba:	2600      	movs	r6, #0
    3dbc:	9302      	str	r3, [sp, #8]
    3dbe:	e74c      	b.n	3c5a <__aeabi_dmul+0x4a>
    3dc0:	2303      	movs	r3, #3
    3dc2:	4681      	mov	r9, r0
    3dc4:	270c      	movs	r7, #12
    3dc6:	9302      	str	r3, [sp, #8]
    3dc8:	e747      	b.n	3c5a <__aeabi_dmul+0x4a>
    3dca:	2280      	movs	r2, #128	; 0x80
    3dcc:	2300      	movs	r3, #0
    3dce:	2500      	movs	r5, #0
    3dd0:	0312      	lsls	r2, r2, #12
    3dd2:	4699      	mov	r9, r3
    3dd4:	4c05      	ldr	r4, [pc, #20]	; (3dec <__aeabi_dmul+0x1dc>)
    3dd6:	e782      	b.n	3cde <__aeabi_dmul+0xce>
    3dd8:	465c      	mov	r4, fp
    3dda:	464b      	mov	r3, r9
    3ddc:	9802      	ldr	r0, [sp, #8]
    3dde:	e76f      	b.n	3cc0 <__aeabi_dmul+0xb0>
    3de0:	465c      	mov	r4, fp
    3de2:	464b      	mov	r3, r9
    3de4:	9501      	str	r5, [sp, #4]
    3de6:	9802      	ldr	r0, [sp, #8]
    3de8:	e76a      	b.n	3cc0 <__aeabi_dmul+0xb0>
    3dea:	46c0      	nop			; (mov r8, r8)
    3dec:	000007ff 	.word	0x000007ff
    3df0:	fffffc01 	.word	0xfffffc01
    3df4:	0000a660 	.word	0x0000a660
    3df8:	800fffff 	.word	0x800fffff
    3dfc:	fffffc0d 	.word	0xfffffc0d
    3e00:	464a      	mov	r2, r9
    3e02:	4649      	mov	r1, r9
    3e04:	0c17      	lsrs	r7, r2, #16
    3e06:	0c1a      	lsrs	r2, r3, #16
    3e08:	041b      	lsls	r3, r3, #16
    3e0a:	0c1b      	lsrs	r3, r3, #16
    3e0c:	0408      	lsls	r0, r1, #16
    3e0e:	0019      	movs	r1, r3
    3e10:	0c00      	lsrs	r0, r0, #16
    3e12:	4341      	muls	r1, r0
    3e14:	0015      	movs	r5, r2
    3e16:	4688      	mov	r8, r1
    3e18:	0019      	movs	r1, r3
    3e1a:	437d      	muls	r5, r7
    3e1c:	4379      	muls	r1, r7
    3e1e:	9503      	str	r5, [sp, #12]
    3e20:	4689      	mov	r9, r1
    3e22:	0029      	movs	r1, r5
    3e24:	0015      	movs	r5, r2
    3e26:	4345      	muls	r5, r0
    3e28:	444d      	add	r5, r9
    3e2a:	9502      	str	r5, [sp, #8]
    3e2c:	4645      	mov	r5, r8
    3e2e:	0c2d      	lsrs	r5, r5, #16
    3e30:	46aa      	mov	sl, r5
    3e32:	9d02      	ldr	r5, [sp, #8]
    3e34:	4455      	add	r5, sl
    3e36:	45a9      	cmp	r9, r5
    3e38:	d906      	bls.n	3e48 <__aeabi_dmul+0x238>
    3e3a:	468a      	mov	sl, r1
    3e3c:	2180      	movs	r1, #128	; 0x80
    3e3e:	0249      	lsls	r1, r1, #9
    3e40:	4689      	mov	r9, r1
    3e42:	44ca      	add	sl, r9
    3e44:	4651      	mov	r1, sl
    3e46:	9103      	str	r1, [sp, #12]
    3e48:	0c29      	lsrs	r1, r5, #16
    3e4a:	9104      	str	r1, [sp, #16]
    3e4c:	4641      	mov	r1, r8
    3e4e:	0409      	lsls	r1, r1, #16
    3e50:	042d      	lsls	r5, r5, #16
    3e52:	0c09      	lsrs	r1, r1, #16
    3e54:	4688      	mov	r8, r1
    3e56:	0029      	movs	r1, r5
    3e58:	0c25      	lsrs	r5, r4, #16
    3e5a:	0424      	lsls	r4, r4, #16
    3e5c:	4441      	add	r1, r8
    3e5e:	0c24      	lsrs	r4, r4, #16
    3e60:	9105      	str	r1, [sp, #20]
    3e62:	0021      	movs	r1, r4
    3e64:	4341      	muls	r1, r0
    3e66:	4688      	mov	r8, r1
    3e68:	0021      	movs	r1, r4
    3e6a:	4379      	muls	r1, r7
    3e6c:	468a      	mov	sl, r1
    3e6e:	4368      	muls	r0, r5
    3e70:	4641      	mov	r1, r8
    3e72:	4450      	add	r0, sl
    3e74:	4681      	mov	r9, r0
    3e76:	0c08      	lsrs	r0, r1, #16
    3e78:	4448      	add	r0, r9
    3e7a:	436f      	muls	r7, r5
    3e7c:	4582      	cmp	sl, r0
    3e7e:	d903      	bls.n	3e88 <__aeabi_dmul+0x278>
    3e80:	2180      	movs	r1, #128	; 0x80
    3e82:	0249      	lsls	r1, r1, #9
    3e84:	4689      	mov	r9, r1
    3e86:	444f      	add	r7, r9
    3e88:	0c01      	lsrs	r1, r0, #16
    3e8a:	4689      	mov	r9, r1
    3e8c:	0039      	movs	r1, r7
    3e8e:	4449      	add	r1, r9
    3e90:	9102      	str	r1, [sp, #8]
    3e92:	4641      	mov	r1, r8
    3e94:	040f      	lsls	r7, r1, #16
    3e96:	9904      	ldr	r1, [sp, #16]
    3e98:	0c3f      	lsrs	r7, r7, #16
    3e9a:	4688      	mov	r8, r1
    3e9c:	0400      	lsls	r0, r0, #16
    3e9e:	19c0      	adds	r0, r0, r7
    3ea0:	4480      	add	r8, r0
    3ea2:	4641      	mov	r1, r8
    3ea4:	9104      	str	r1, [sp, #16]
    3ea6:	4659      	mov	r1, fp
    3ea8:	0c0f      	lsrs	r7, r1, #16
    3eaa:	0409      	lsls	r1, r1, #16
    3eac:	0c09      	lsrs	r1, r1, #16
    3eae:	4688      	mov	r8, r1
    3eb0:	4359      	muls	r1, r3
    3eb2:	468a      	mov	sl, r1
    3eb4:	0039      	movs	r1, r7
    3eb6:	4351      	muls	r1, r2
    3eb8:	4689      	mov	r9, r1
    3eba:	4641      	mov	r1, r8
    3ebc:	434a      	muls	r2, r1
    3ebe:	4651      	mov	r1, sl
    3ec0:	0c09      	lsrs	r1, r1, #16
    3ec2:	468b      	mov	fp, r1
    3ec4:	437b      	muls	r3, r7
    3ec6:	18d2      	adds	r2, r2, r3
    3ec8:	445a      	add	r2, fp
    3eca:	4293      	cmp	r3, r2
    3ecc:	d903      	bls.n	3ed6 <__aeabi_dmul+0x2c6>
    3ece:	2380      	movs	r3, #128	; 0x80
    3ed0:	025b      	lsls	r3, r3, #9
    3ed2:	469b      	mov	fp, r3
    3ed4:	44d9      	add	r9, fp
    3ed6:	4651      	mov	r1, sl
    3ed8:	0409      	lsls	r1, r1, #16
    3eda:	0c09      	lsrs	r1, r1, #16
    3edc:	468a      	mov	sl, r1
    3ede:	4641      	mov	r1, r8
    3ee0:	4361      	muls	r1, r4
    3ee2:	437c      	muls	r4, r7
    3ee4:	0c13      	lsrs	r3, r2, #16
    3ee6:	0412      	lsls	r2, r2, #16
    3ee8:	444b      	add	r3, r9
    3eea:	4452      	add	r2, sl
    3eec:	46a1      	mov	r9, r4
    3eee:	468a      	mov	sl, r1
    3ef0:	003c      	movs	r4, r7
    3ef2:	4641      	mov	r1, r8
    3ef4:	436c      	muls	r4, r5
    3ef6:	434d      	muls	r5, r1
    3ef8:	4651      	mov	r1, sl
    3efa:	444d      	add	r5, r9
    3efc:	0c0f      	lsrs	r7, r1, #16
    3efe:	197d      	adds	r5, r7, r5
    3f00:	45a9      	cmp	r9, r5
    3f02:	d903      	bls.n	3f0c <__aeabi_dmul+0x2fc>
    3f04:	2180      	movs	r1, #128	; 0x80
    3f06:	0249      	lsls	r1, r1, #9
    3f08:	4688      	mov	r8, r1
    3f0a:	4444      	add	r4, r8
    3f0c:	9f04      	ldr	r7, [sp, #16]
    3f0e:	9903      	ldr	r1, [sp, #12]
    3f10:	46b8      	mov	r8, r7
    3f12:	4441      	add	r1, r8
    3f14:	468b      	mov	fp, r1
    3f16:	4583      	cmp	fp, r0
    3f18:	4180      	sbcs	r0, r0
    3f1a:	4241      	negs	r1, r0
    3f1c:	4688      	mov	r8, r1
    3f1e:	4651      	mov	r1, sl
    3f20:	0408      	lsls	r0, r1, #16
    3f22:	042f      	lsls	r7, r5, #16
    3f24:	0c00      	lsrs	r0, r0, #16
    3f26:	183f      	adds	r7, r7, r0
    3f28:	4658      	mov	r0, fp
    3f2a:	9902      	ldr	r1, [sp, #8]
    3f2c:	1810      	adds	r0, r2, r0
    3f2e:	4689      	mov	r9, r1
    3f30:	4290      	cmp	r0, r2
    3f32:	4192      	sbcs	r2, r2
    3f34:	444f      	add	r7, r9
    3f36:	46ba      	mov	sl, r7
    3f38:	4252      	negs	r2, r2
    3f3a:	4699      	mov	r9, r3
    3f3c:	4693      	mov	fp, r2
    3f3e:	44c2      	add	sl, r8
    3f40:	44d1      	add	r9, sl
    3f42:	44cb      	add	fp, r9
    3f44:	428f      	cmp	r7, r1
    3f46:	41bf      	sbcs	r7, r7
    3f48:	45c2      	cmp	sl, r8
    3f4a:	4189      	sbcs	r1, r1
    3f4c:	4599      	cmp	r9, r3
    3f4e:	419b      	sbcs	r3, r3
    3f50:	4593      	cmp	fp, r2
    3f52:	4192      	sbcs	r2, r2
    3f54:	427f      	negs	r7, r7
    3f56:	4249      	negs	r1, r1
    3f58:	0c2d      	lsrs	r5, r5, #16
    3f5a:	4252      	negs	r2, r2
    3f5c:	430f      	orrs	r7, r1
    3f5e:	425b      	negs	r3, r3
    3f60:	4313      	orrs	r3, r2
    3f62:	197f      	adds	r7, r7, r5
    3f64:	18ff      	adds	r7, r7, r3
    3f66:	465b      	mov	r3, fp
    3f68:	193c      	adds	r4, r7, r4
    3f6a:	0ddb      	lsrs	r3, r3, #23
    3f6c:	9a05      	ldr	r2, [sp, #20]
    3f6e:	0264      	lsls	r4, r4, #9
    3f70:	431c      	orrs	r4, r3
    3f72:	0243      	lsls	r3, r0, #9
    3f74:	4313      	orrs	r3, r2
    3f76:	1e5d      	subs	r5, r3, #1
    3f78:	41ab      	sbcs	r3, r5
    3f7a:	465a      	mov	r2, fp
    3f7c:	0dc0      	lsrs	r0, r0, #23
    3f7e:	4303      	orrs	r3, r0
    3f80:	0252      	lsls	r2, r2, #9
    3f82:	4313      	orrs	r3, r2
    3f84:	01e2      	lsls	r2, r4, #7
    3f86:	d556      	bpl.n	4036 <__aeabi_dmul+0x426>
    3f88:	2001      	movs	r0, #1
    3f8a:	085a      	lsrs	r2, r3, #1
    3f8c:	4003      	ands	r3, r0
    3f8e:	4313      	orrs	r3, r2
    3f90:	07e2      	lsls	r2, r4, #31
    3f92:	4313      	orrs	r3, r2
    3f94:	0864      	lsrs	r4, r4, #1
    3f96:	485a      	ldr	r0, [pc, #360]	; (4100 <__aeabi_dmul+0x4f0>)
    3f98:	4460      	add	r0, ip
    3f9a:	2800      	cmp	r0, #0
    3f9c:	dd4d      	ble.n	403a <__aeabi_dmul+0x42a>
    3f9e:	075a      	lsls	r2, r3, #29
    3fa0:	d009      	beq.n	3fb6 <__aeabi_dmul+0x3a6>
    3fa2:	220f      	movs	r2, #15
    3fa4:	401a      	ands	r2, r3
    3fa6:	2a04      	cmp	r2, #4
    3fa8:	d005      	beq.n	3fb6 <__aeabi_dmul+0x3a6>
    3faa:	1d1a      	adds	r2, r3, #4
    3fac:	429a      	cmp	r2, r3
    3fae:	419b      	sbcs	r3, r3
    3fb0:	425b      	negs	r3, r3
    3fb2:	18e4      	adds	r4, r4, r3
    3fb4:	0013      	movs	r3, r2
    3fb6:	01e2      	lsls	r2, r4, #7
    3fb8:	d504      	bpl.n	3fc4 <__aeabi_dmul+0x3b4>
    3fba:	2080      	movs	r0, #128	; 0x80
    3fbc:	4a51      	ldr	r2, [pc, #324]	; (4104 <__aeabi_dmul+0x4f4>)
    3fbe:	00c0      	lsls	r0, r0, #3
    3fc0:	4014      	ands	r4, r2
    3fc2:	4460      	add	r0, ip
    3fc4:	4a50      	ldr	r2, [pc, #320]	; (4108 <__aeabi_dmul+0x4f8>)
    3fc6:	4290      	cmp	r0, r2
    3fc8:	dd00      	ble.n	3fcc <__aeabi_dmul+0x3bc>
    3fca:	e6e3      	b.n	3d94 <__aeabi_dmul+0x184>
    3fcc:	2501      	movs	r5, #1
    3fce:	08db      	lsrs	r3, r3, #3
    3fd0:	0762      	lsls	r2, r4, #29
    3fd2:	431a      	orrs	r2, r3
    3fd4:	0264      	lsls	r4, r4, #9
    3fd6:	9b01      	ldr	r3, [sp, #4]
    3fd8:	4691      	mov	r9, r2
    3fda:	0b22      	lsrs	r2, r4, #12
    3fdc:	0544      	lsls	r4, r0, #21
    3fde:	0d64      	lsrs	r4, r4, #21
    3fe0:	401d      	ands	r5, r3
    3fe2:	e67c      	b.n	3cde <__aeabi_dmul+0xce>
    3fe4:	2280      	movs	r2, #128	; 0x80
    3fe6:	4659      	mov	r1, fp
    3fe8:	0312      	lsls	r2, r2, #12
    3fea:	4211      	tst	r1, r2
    3fec:	d008      	beq.n	4000 <__aeabi_dmul+0x3f0>
    3fee:	4214      	tst	r4, r2
    3ff0:	d106      	bne.n	4000 <__aeabi_dmul+0x3f0>
    3ff2:	4322      	orrs	r2, r4
    3ff4:	0312      	lsls	r2, r2, #12
    3ff6:	0b12      	lsrs	r2, r2, #12
    3ff8:	4645      	mov	r5, r8
    3ffa:	4699      	mov	r9, r3
    3ffc:	4c43      	ldr	r4, [pc, #268]	; (410c <__aeabi_dmul+0x4fc>)
    3ffe:	e66e      	b.n	3cde <__aeabi_dmul+0xce>
    4000:	465b      	mov	r3, fp
    4002:	431a      	orrs	r2, r3
    4004:	0312      	lsls	r2, r2, #12
    4006:	0b12      	lsrs	r2, r2, #12
    4008:	4c40      	ldr	r4, [pc, #256]	; (410c <__aeabi_dmul+0x4fc>)
    400a:	e668      	b.n	3cde <__aeabi_dmul+0xce>
    400c:	0003      	movs	r3, r0
    400e:	4654      	mov	r4, sl
    4010:	3b28      	subs	r3, #40	; 0x28
    4012:	409c      	lsls	r4, r3
    4014:	2300      	movs	r3, #0
    4016:	e6b9      	b.n	3d8c <__aeabi_dmul+0x17c>
    4018:	f000 fcce 	bl	49b8 <__clzsi2>
    401c:	3020      	adds	r0, #32
    401e:	e6a6      	b.n	3d6e <__aeabi_dmul+0x15e>
    4020:	0003      	movs	r3, r0
    4022:	3b28      	subs	r3, #40	; 0x28
    4024:	409f      	lsls	r7, r3
    4026:	2300      	movs	r3, #0
    4028:	46bb      	mov	fp, r7
    402a:	4699      	mov	r9, r3
    402c:	e68a      	b.n	3d44 <__aeabi_dmul+0x134>
    402e:	f000 fcc3 	bl	49b8 <__clzsi2>
    4032:	3020      	adds	r0, #32
    4034:	e674      	b.n	3d20 <__aeabi_dmul+0x110>
    4036:	46b4      	mov	ip, r6
    4038:	e7ad      	b.n	3f96 <__aeabi_dmul+0x386>
    403a:	2501      	movs	r5, #1
    403c:	1a2a      	subs	r2, r5, r0
    403e:	2a38      	cmp	r2, #56	; 0x38
    4040:	dd06      	ble.n	4050 <__aeabi_dmul+0x440>
    4042:	9b01      	ldr	r3, [sp, #4]
    4044:	2400      	movs	r4, #0
    4046:	401d      	ands	r5, r3
    4048:	2300      	movs	r3, #0
    404a:	2200      	movs	r2, #0
    404c:	4699      	mov	r9, r3
    404e:	e646      	b.n	3cde <__aeabi_dmul+0xce>
    4050:	2a1f      	cmp	r2, #31
    4052:	dc21      	bgt.n	4098 <__aeabi_dmul+0x488>
    4054:	2520      	movs	r5, #32
    4056:	0020      	movs	r0, r4
    4058:	1aad      	subs	r5, r5, r2
    405a:	001e      	movs	r6, r3
    405c:	40ab      	lsls	r3, r5
    405e:	40a8      	lsls	r0, r5
    4060:	40d6      	lsrs	r6, r2
    4062:	1e5d      	subs	r5, r3, #1
    4064:	41ab      	sbcs	r3, r5
    4066:	4330      	orrs	r0, r6
    4068:	4318      	orrs	r0, r3
    406a:	40d4      	lsrs	r4, r2
    406c:	0743      	lsls	r3, r0, #29
    406e:	d009      	beq.n	4084 <__aeabi_dmul+0x474>
    4070:	230f      	movs	r3, #15
    4072:	4003      	ands	r3, r0
    4074:	2b04      	cmp	r3, #4
    4076:	d005      	beq.n	4084 <__aeabi_dmul+0x474>
    4078:	0003      	movs	r3, r0
    407a:	1d18      	adds	r0, r3, #4
    407c:	4298      	cmp	r0, r3
    407e:	419b      	sbcs	r3, r3
    4080:	425b      	negs	r3, r3
    4082:	18e4      	adds	r4, r4, r3
    4084:	0223      	lsls	r3, r4, #8
    4086:	d521      	bpl.n	40cc <__aeabi_dmul+0x4bc>
    4088:	2501      	movs	r5, #1
    408a:	9b01      	ldr	r3, [sp, #4]
    408c:	2401      	movs	r4, #1
    408e:	401d      	ands	r5, r3
    4090:	2300      	movs	r3, #0
    4092:	2200      	movs	r2, #0
    4094:	4699      	mov	r9, r3
    4096:	e622      	b.n	3cde <__aeabi_dmul+0xce>
    4098:	251f      	movs	r5, #31
    409a:	0021      	movs	r1, r4
    409c:	426d      	negs	r5, r5
    409e:	1a28      	subs	r0, r5, r0
    40a0:	40c1      	lsrs	r1, r0
    40a2:	0008      	movs	r0, r1
    40a4:	2a20      	cmp	r2, #32
    40a6:	d01d      	beq.n	40e4 <__aeabi_dmul+0x4d4>
    40a8:	355f      	adds	r5, #95	; 0x5f
    40aa:	1aaa      	subs	r2, r5, r2
    40ac:	4094      	lsls	r4, r2
    40ae:	4323      	orrs	r3, r4
    40b0:	1e5c      	subs	r4, r3, #1
    40b2:	41a3      	sbcs	r3, r4
    40b4:	2507      	movs	r5, #7
    40b6:	4303      	orrs	r3, r0
    40b8:	401d      	ands	r5, r3
    40ba:	2200      	movs	r2, #0
    40bc:	2d00      	cmp	r5, #0
    40be:	d009      	beq.n	40d4 <__aeabi_dmul+0x4c4>
    40c0:	220f      	movs	r2, #15
    40c2:	2400      	movs	r4, #0
    40c4:	401a      	ands	r2, r3
    40c6:	0018      	movs	r0, r3
    40c8:	2a04      	cmp	r2, #4
    40ca:	d1d6      	bne.n	407a <__aeabi_dmul+0x46a>
    40cc:	0003      	movs	r3, r0
    40ce:	0765      	lsls	r5, r4, #29
    40d0:	0264      	lsls	r4, r4, #9
    40d2:	0b22      	lsrs	r2, r4, #12
    40d4:	08db      	lsrs	r3, r3, #3
    40d6:	432b      	orrs	r3, r5
    40d8:	2501      	movs	r5, #1
    40da:	4699      	mov	r9, r3
    40dc:	9b01      	ldr	r3, [sp, #4]
    40de:	2400      	movs	r4, #0
    40e0:	401d      	ands	r5, r3
    40e2:	e5fc      	b.n	3cde <__aeabi_dmul+0xce>
    40e4:	2400      	movs	r4, #0
    40e6:	e7e2      	b.n	40ae <__aeabi_dmul+0x49e>
    40e8:	2280      	movs	r2, #128	; 0x80
    40ea:	2501      	movs	r5, #1
    40ec:	0312      	lsls	r2, r2, #12
    40ee:	4322      	orrs	r2, r4
    40f0:	9901      	ldr	r1, [sp, #4]
    40f2:	0312      	lsls	r2, r2, #12
    40f4:	0b12      	lsrs	r2, r2, #12
    40f6:	400d      	ands	r5, r1
    40f8:	4699      	mov	r9, r3
    40fa:	4c04      	ldr	r4, [pc, #16]	; (410c <__aeabi_dmul+0x4fc>)
    40fc:	e5ef      	b.n	3cde <__aeabi_dmul+0xce>
    40fe:	46c0      	nop			; (mov r8, r8)
    4100:	000003ff 	.word	0x000003ff
    4104:	feffffff 	.word	0xfeffffff
    4108:	000007fe 	.word	0x000007fe
    410c:	000007ff 	.word	0x000007ff

00004110 <__aeabi_dsub>:
    4110:	b5f0      	push	{r4, r5, r6, r7, lr}
    4112:	4646      	mov	r6, r8
    4114:	46d6      	mov	lr, sl
    4116:	464f      	mov	r7, r9
    4118:	030c      	lsls	r4, r1, #12
    411a:	b5c0      	push	{r6, r7, lr}
    411c:	0fcd      	lsrs	r5, r1, #31
    411e:	004e      	lsls	r6, r1, #1
    4120:	0a61      	lsrs	r1, r4, #9
    4122:	0f44      	lsrs	r4, r0, #29
    4124:	430c      	orrs	r4, r1
    4126:	00c1      	lsls	r1, r0, #3
    4128:	0058      	lsls	r0, r3, #1
    412a:	0d40      	lsrs	r0, r0, #21
    412c:	4684      	mov	ip, r0
    412e:	468a      	mov	sl, r1
    4130:	000f      	movs	r7, r1
    4132:	0319      	lsls	r1, r3, #12
    4134:	0f50      	lsrs	r0, r2, #29
    4136:	0a49      	lsrs	r1, r1, #9
    4138:	4301      	orrs	r1, r0
    413a:	48c6      	ldr	r0, [pc, #792]	; (4454 <__aeabi_dsub+0x344>)
    413c:	0d76      	lsrs	r6, r6, #21
    413e:	46a8      	mov	r8, r5
    4140:	0fdb      	lsrs	r3, r3, #31
    4142:	00d2      	lsls	r2, r2, #3
    4144:	4584      	cmp	ip, r0
    4146:	d100      	bne.n	414a <__aeabi_dsub+0x3a>
    4148:	e0d8      	b.n	42fc <__aeabi_dsub+0x1ec>
    414a:	2001      	movs	r0, #1
    414c:	4043      	eors	r3, r0
    414e:	42ab      	cmp	r3, r5
    4150:	d100      	bne.n	4154 <__aeabi_dsub+0x44>
    4152:	e0a6      	b.n	42a2 <__aeabi_dsub+0x192>
    4154:	4660      	mov	r0, ip
    4156:	1a35      	subs	r5, r6, r0
    4158:	2d00      	cmp	r5, #0
    415a:	dc00      	bgt.n	415e <__aeabi_dsub+0x4e>
    415c:	e105      	b.n	436a <__aeabi_dsub+0x25a>
    415e:	2800      	cmp	r0, #0
    4160:	d110      	bne.n	4184 <__aeabi_dsub+0x74>
    4162:	000b      	movs	r3, r1
    4164:	4313      	orrs	r3, r2
    4166:	d100      	bne.n	416a <__aeabi_dsub+0x5a>
    4168:	e0d7      	b.n	431a <__aeabi_dsub+0x20a>
    416a:	1e6b      	subs	r3, r5, #1
    416c:	2b00      	cmp	r3, #0
    416e:	d000      	beq.n	4172 <__aeabi_dsub+0x62>
    4170:	e14b      	b.n	440a <__aeabi_dsub+0x2fa>
    4172:	4653      	mov	r3, sl
    4174:	1a9f      	subs	r7, r3, r2
    4176:	45ba      	cmp	sl, r7
    4178:	4180      	sbcs	r0, r0
    417a:	1a64      	subs	r4, r4, r1
    417c:	4240      	negs	r0, r0
    417e:	1a24      	subs	r4, r4, r0
    4180:	2601      	movs	r6, #1
    4182:	e01e      	b.n	41c2 <__aeabi_dsub+0xb2>
    4184:	4bb3      	ldr	r3, [pc, #716]	; (4454 <__aeabi_dsub+0x344>)
    4186:	429e      	cmp	r6, r3
    4188:	d048      	beq.n	421c <__aeabi_dsub+0x10c>
    418a:	2380      	movs	r3, #128	; 0x80
    418c:	041b      	lsls	r3, r3, #16
    418e:	4319      	orrs	r1, r3
    4190:	2d38      	cmp	r5, #56	; 0x38
    4192:	dd00      	ble.n	4196 <__aeabi_dsub+0x86>
    4194:	e119      	b.n	43ca <__aeabi_dsub+0x2ba>
    4196:	2d1f      	cmp	r5, #31
    4198:	dd00      	ble.n	419c <__aeabi_dsub+0x8c>
    419a:	e14c      	b.n	4436 <__aeabi_dsub+0x326>
    419c:	2320      	movs	r3, #32
    419e:	000f      	movs	r7, r1
    41a0:	1b5b      	subs	r3, r3, r5
    41a2:	0010      	movs	r0, r2
    41a4:	409a      	lsls	r2, r3
    41a6:	409f      	lsls	r7, r3
    41a8:	40e8      	lsrs	r0, r5
    41aa:	1e53      	subs	r3, r2, #1
    41ac:	419a      	sbcs	r2, r3
    41ae:	40e9      	lsrs	r1, r5
    41b0:	4307      	orrs	r7, r0
    41b2:	4317      	orrs	r7, r2
    41b4:	4653      	mov	r3, sl
    41b6:	1bdf      	subs	r7, r3, r7
    41b8:	1a61      	subs	r1, r4, r1
    41ba:	45ba      	cmp	sl, r7
    41bc:	41a4      	sbcs	r4, r4
    41be:	4264      	negs	r4, r4
    41c0:	1b0c      	subs	r4, r1, r4
    41c2:	0223      	lsls	r3, r4, #8
    41c4:	d400      	bmi.n	41c8 <__aeabi_dsub+0xb8>
    41c6:	e0c5      	b.n	4354 <__aeabi_dsub+0x244>
    41c8:	0264      	lsls	r4, r4, #9
    41ca:	0a65      	lsrs	r5, r4, #9
    41cc:	2d00      	cmp	r5, #0
    41ce:	d100      	bne.n	41d2 <__aeabi_dsub+0xc2>
    41d0:	e0f6      	b.n	43c0 <__aeabi_dsub+0x2b0>
    41d2:	0028      	movs	r0, r5
    41d4:	f000 fbf0 	bl	49b8 <__clzsi2>
    41d8:	0003      	movs	r3, r0
    41da:	3b08      	subs	r3, #8
    41dc:	2b1f      	cmp	r3, #31
    41de:	dd00      	ble.n	41e2 <__aeabi_dsub+0xd2>
    41e0:	e0e9      	b.n	43b6 <__aeabi_dsub+0x2a6>
    41e2:	2220      	movs	r2, #32
    41e4:	003c      	movs	r4, r7
    41e6:	1ad2      	subs	r2, r2, r3
    41e8:	409d      	lsls	r5, r3
    41ea:	40d4      	lsrs	r4, r2
    41ec:	409f      	lsls	r7, r3
    41ee:	4325      	orrs	r5, r4
    41f0:	429e      	cmp	r6, r3
    41f2:	dd00      	ble.n	41f6 <__aeabi_dsub+0xe6>
    41f4:	e0db      	b.n	43ae <__aeabi_dsub+0x29e>
    41f6:	1b9e      	subs	r6, r3, r6
    41f8:	1c73      	adds	r3, r6, #1
    41fa:	2b1f      	cmp	r3, #31
    41fc:	dd00      	ble.n	4200 <__aeabi_dsub+0xf0>
    41fe:	e10a      	b.n	4416 <__aeabi_dsub+0x306>
    4200:	2220      	movs	r2, #32
    4202:	0038      	movs	r0, r7
    4204:	1ad2      	subs	r2, r2, r3
    4206:	0029      	movs	r1, r5
    4208:	4097      	lsls	r7, r2
    420a:	002c      	movs	r4, r5
    420c:	4091      	lsls	r1, r2
    420e:	40d8      	lsrs	r0, r3
    4210:	1e7a      	subs	r2, r7, #1
    4212:	4197      	sbcs	r7, r2
    4214:	40dc      	lsrs	r4, r3
    4216:	2600      	movs	r6, #0
    4218:	4301      	orrs	r1, r0
    421a:	430f      	orrs	r7, r1
    421c:	077b      	lsls	r3, r7, #29
    421e:	d009      	beq.n	4234 <__aeabi_dsub+0x124>
    4220:	230f      	movs	r3, #15
    4222:	403b      	ands	r3, r7
    4224:	2b04      	cmp	r3, #4
    4226:	d005      	beq.n	4234 <__aeabi_dsub+0x124>
    4228:	1d3b      	adds	r3, r7, #4
    422a:	42bb      	cmp	r3, r7
    422c:	41bf      	sbcs	r7, r7
    422e:	427f      	negs	r7, r7
    4230:	19e4      	adds	r4, r4, r7
    4232:	001f      	movs	r7, r3
    4234:	0223      	lsls	r3, r4, #8
    4236:	d525      	bpl.n	4284 <__aeabi_dsub+0x174>
    4238:	4b86      	ldr	r3, [pc, #536]	; (4454 <__aeabi_dsub+0x344>)
    423a:	3601      	adds	r6, #1
    423c:	429e      	cmp	r6, r3
    423e:	d100      	bne.n	4242 <__aeabi_dsub+0x132>
    4240:	e0af      	b.n	43a2 <__aeabi_dsub+0x292>
    4242:	4b85      	ldr	r3, [pc, #532]	; (4458 <__aeabi_dsub+0x348>)
    4244:	2501      	movs	r5, #1
    4246:	401c      	ands	r4, r3
    4248:	4643      	mov	r3, r8
    424a:	0762      	lsls	r2, r4, #29
    424c:	08ff      	lsrs	r7, r7, #3
    424e:	0264      	lsls	r4, r4, #9
    4250:	0576      	lsls	r6, r6, #21
    4252:	4317      	orrs	r7, r2
    4254:	0b24      	lsrs	r4, r4, #12
    4256:	0d76      	lsrs	r6, r6, #21
    4258:	401d      	ands	r5, r3
    425a:	2100      	movs	r1, #0
    425c:	0324      	lsls	r4, r4, #12
    425e:	0b23      	lsrs	r3, r4, #12
    4260:	0d0c      	lsrs	r4, r1, #20
    4262:	4a7e      	ldr	r2, [pc, #504]	; (445c <__aeabi_dsub+0x34c>)
    4264:	0524      	lsls	r4, r4, #20
    4266:	431c      	orrs	r4, r3
    4268:	4014      	ands	r4, r2
    426a:	0533      	lsls	r3, r6, #20
    426c:	4323      	orrs	r3, r4
    426e:	005b      	lsls	r3, r3, #1
    4270:	07ed      	lsls	r5, r5, #31
    4272:	085b      	lsrs	r3, r3, #1
    4274:	432b      	orrs	r3, r5
    4276:	0038      	movs	r0, r7
    4278:	0019      	movs	r1, r3
    427a:	bc1c      	pop	{r2, r3, r4}
    427c:	4690      	mov	r8, r2
    427e:	4699      	mov	r9, r3
    4280:	46a2      	mov	sl, r4
    4282:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4284:	2501      	movs	r5, #1
    4286:	4643      	mov	r3, r8
    4288:	0762      	lsls	r2, r4, #29
    428a:	08ff      	lsrs	r7, r7, #3
    428c:	4317      	orrs	r7, r2
    428e:	08e4      	lsrs	r4, r4, #3
    4290:	401d      	ands	r5, r3
    4292:	4b70      	ldr	r3, [pc, #448]	; (4454 <__aeabi_dsub+0x344>)
    4294:	429e      	cmp	r6, r3
    4296:	d036      	beq.n	4306 <__aeabi_dsub+0x1f6>
    4298:	0324      	lsls	r4, r4, #12
    429a:	0576      	lsls	r6, r6, #21
    429c:	0b24      	lsrs	r4, r4, #12
    429e:	0d76      	lsrs	r6, r6, #21
    42a0:	e7db      	b.n	425a <__aeabi_dsub+0x14a>
    42a2:	4663      	mov	r3, ip
    42a4:	1af3      	subs	r3, r6, r3
    42a6:	2b00      	cmp	r3, #0
    42a8:	dc00      	bgt.n	42ac <__aeabi_dsub+0x19c>
    42aa:	e094      	b.n	43d6 <__aeabi_dsub+0x2c6>
    42ac:	4660      	mov	r0, ip
    42ae:	2800      	cmp	r0, #0
    42b0:	d035      	beq.n	431e <__aeabi_dsub+0x20e>
    42b2:	4868      	ldr	r0, [pc, #416]	; (4454 <__aeabi_dsub+0x344>)
    42b4:	4286      	cmp	r6, r0
    42b6:	d0b1      	beq.n	421c <__aeabi_dsub+0x10c>
    42b8:	2780      	movs	r7, #128	; 0x80
    42ba:	043f      	lsls	r7, r7, #16
    42bc:	4339      	orrs	r1, r7
    42be:	2b38      	cmp	r3, #56	; 0x38
    42c0:	dc00      	bgt.n	42c4 <__aeabi_dsub+0x1b4>
    42c2:	e0fd      	b.n	44c0 <__aeabi_dsub+0x3b0>
    42c4:	430a      	orrs	r2, r1
    42c6:	0017      	movs	r7, r2
    42c8:	2100      	movs	r1, #0
    42ca:	1e7a      	subs	r2, r7, #1
    42cc:	4197      	sbcs	r7, r2
    42ce:	4457      	add	r7, sl
    42d0:	4557      	cmp	r7, sl
    42d2:	4180      	sbcs	r0, r0
    42d4:	1909      	adds	r1, r1, r4
    42d6:	4244      	negs	r4, r0
    42d8:	190c      	adds	r4, r1, r4
    42da:	0223      	lsls	r3, r4, #8
    42dc:	d53a      	bpl.n	4354 <__aeabi_dsub+0x244>
    42de:	4b5d      	ldr	r3, [pc, #372]	; (4454 <__aeabi_dsub+0x344>)
    42e0:	3601      	adds	r6, #1
    42e2:	429e      	cmp	r6, r3
    42e4:	d100      	bne.n	42e8 <__aeabi_dsub+0x1d8>
    42e6:	e14b      	b.n	4580 <__aeabi_dsub+0x470>
    42e8:	2201      	movs	r2, #1
    42ea:	4b5b      	ldr	r3, [pc, #364]	; (4458 <__aeabi_dsub+0x348>)
    42ec:	401c      	ands	r4, r3
    42ee:	087b      	lsrs	r3, r7, #1
    42f0:	4017      	ands	r7, r2
    42f2:	431f      	orrs	r7, r3
    42f4:	07e2      	lsls	r2, r4, #31
    42f6:	4317      	orrs	r7, r2
    42f8:	0864      	lsrs	r4, r4, #1
    42fa:	e78f      	b.n	421c <__aeabi_dsub+0x10c>
    42fc:	0008      	movs	r0, r1
    42fe:	4310      	orrs	r0, r2
    4300:	d000      	beq.n	4304 <__aeabi_dsub+0x1f4>
    4302:	e724      	b.n	414e <__aeabi_dsub+0x3e>
    4304:	e721      	b.n	414a <__aeabi_dsub+0x3a>
    4306:	0023      	movs	r3, r4
    4308:	433b      	orrs	r3, r7
    430a:	d100      	bne.n	430e <__aeabi_dsub+0x1fe>
    430c:	e1b9      	b.n	4682 <__aeabi_dsub+0x572>
    430e:	2280      	movs	r2, #128	; 0x80
    4310:	0312      	lsls	r2, r2, #12
    4312:	4314      	orrs	r4, r2
    4314:	0324      	lsls	r4, r4, #12
    4316:	0b24      	lsrs	r4, r4, #12
    4318:	e79f      	b.n	425a <__aeabi_dsub+0x14a>
    431a:	002e      	movs	r6, r5
    431c:	e77e      	b.n	421c <__aeabi_dsub+0x10c>
    431e:	0008      	movs	r0, r1
    4320:	4310      	orrs	r0, r2
    4322:	d100      	bne.n	4326 <__aeabi_dsub+0x216>
    4324:	e0ca      	b.n	44bc <__aeabi_dsub+0x3ac>
    4326:	1e58      	subs	r0, r3, #1
    4328:	4684      	mov	ip, r0
    432a:	2800      	cmp	r0, #0
    432c:	d000      	beq.n	4330 <__aeabi_dsub+0x220>
    432e:	e0e7      	b.n	4500 <__aeabi_dsub+0x3f0>
    4330:	4452      	add	r2, sl
    4332:	4552      	cmp	r2, sl
    4334:	4180      	sbcs	r0, r0
    4336:	1864      	adds	r4, r4, r1
    4338:	4240      	negs	r0, r0
    433a:	1824      	adds	r4, r4, r0
    433c:	0017      	movs	r7, r2
    433e:	2601      	movs	r6, #1
    4340:	0223      	lsls	r3, r4, #8
    4342:	d507      	bpl.n	4354 <__aeabi_dsub+0x244>
    4344:	2602      	movs	r6, #2
    4346:	e7cf      	b.n	42e8 <__aeabi_dsub+0x1d8>
    4348:	4664      	mov	r4, ip
    434a:	432c      	orrs	r4, r5
    434c:	d100      	bne.n	4350 <__aeabi_dsub+0x240>
    434e:	e1b3      	b.n	46b8 <__aeabi_dsub+0x5a8>
    4350:	002c      	movs	r4, r5
    4352:	4667      	mov	r7, ip
    4354:	077b      	lsls	r3, r7, #29
    4356:	d000      	beq.n	435a <__aeabi_dsub+0x24a>
    4358:	e762      	b.n	4220 <__aeabi_dsub+0x110>
    435a:	0763      	lsls	r3, r4, #29
    435c:	08ff      	lsrs	r7, r7, #3
    435e:	431f      	orrs	r7, r3
    4360:	2501      	movs	r5, #1
    4362:	4643      	mov	r3, r8
    4364:	08e4      	lsrs	r4, r4, #3
    4366:	401d      	ands	r5, r3
    4368:	e793      	b.n	4292 <__aeabi_dsub+0x182>
    436a:	2d00      	cmp	r5, #0
    436c:	d178      	bne.n	4460 <__aeabi_dsub+0x350>
    436e:	1c75      	adds	r5, r6, #1
    4370:	056d      	lsls	r5, r5, #21
    4372:	0d6d      	lsrs	r5, r5, #21
    4374:	2d01      	cmp	r5, #1
    4376:	dc00      	bgt.n	437a <__aeabi_dsub+0x26a>
    4378:	e0f2      	b.n	4560 <__aeabi_dsub+0x450>
    437a:	4650      	mov	r0, sl
    437c:	1a80      	subs	r0, r0, r2
    437e:	4582      	cmp	sl, r0
    4380:	41bf      	sbcs	r7, r7
    4382:	1a65      	subs	r5, r4, r1
    4384:	427f      	negs	r7, r7
    4386:	1bed      	subs	r5, r5, r7
    4388:	4684      	mov	ip, r0
    438a:	0228      	lsls	r0, r5, #8
    438c:	d400      	bmi.n	4390 <__aeabi_dsub+0x280>
    438e:	e08c      	b.n	44aa <__aeabi_dsub+0x39a>
    4390:	4650      	mov	r0, sl
    4392:	1a17      	subs	r7, r2, r0
    4394:	42ba      	cmp	r2, r7
    4396:	4192      	sbcs	r2, r2
    4398:	1b0c      	subs	r4, r1, r4
    439a:	4255      	negs	r5, r2
    439c:	1b65      	subs	r5, r4, r5
    439e:	4698      	mov	r8, r3
    43a0:	e714      	b.n	41cc <__aeabi_dsub+0xbc>
    43a2:	2501      	movs	r5, #1
    43a4:	4643      	mov	r3, r8
    43a6:	2400      	movs	r4, #0
    43a8:	401d      	ands	r5, r3
    43aa:	2700      	movs	r7, #0
    43ac:	e755      	b.n	425a <__aeabi_dsub+0x14a>
    43ae:	4c2a      	ldr	r4, [pc, #168]	; (4458 <__aeabi_dsub+0x348>)
    43b0:	1af6      	subs	r6, r6, r3
    43b2:	402c      	ands	r4, r5
    43b4:	e732      	b.n	421c <__aeabi_dsub+0x10c>
    43b6:	003d      	movs	r5, r7
    43b8:	3828      	subs	r0, #40	; 0x28
    43ba:	4085      	lsls	r5, r0
    43bc:	2700      	movs	r7, #0
    43be:	e717      	b.n	41f0 <__aeabi_dsub+0xe0>
    43c0:	0038      	movs	r0, r7
    43c2:	f000 faf9 	bl	49b8 <__clzsi2>
    43c6:	3020      	adds	r0, #32
    43c8:	e706      	b.n	41d8 <__aeabi_dsub+0xc8>
    43ca:	430a      	orrs	r2, r1
    43cc:	0017      	movs	r7, r2
    43ce:	2100      	movs	r1, #0
    43d0:	1e7a      	subs	r2, r7, #1
    43d2:	4197      	sbcs	r7, r2
    43d4:	e6ee      	b.n	41b4 <__aeabi_dsub+0xa4>
    43d6:	2b00      	cmp	r3, #0
    43d8:	d000      	beq.n	43dc <__aeabi_dsub+0x2cc>
    43da:	e0e5      	b.n	45a8 <__aeabi_dsub+0x498>
    43dc:	1c73      	adds	r3, r6, #1
    43de:	469c      	mov	ip, r3
    43e0:	055b      	lsls	r3, r3, #21
    43e2:	0d5b      	lsrs	r3, r3, #21
    43e4:	2b01      	cmp	r3, #1
    43e6:	dc00      	bgt.n	43ea <__aeabi_dsub+0x2da>
    43e8:	e09f      	b.n	452a <__aeabi_dsub+0x41a>
    43ea:	4b1a      	ldr	r3, [pc, #104]	; (4454 <__aeabi_dsub+0x344>)
    43ec:	459c      	cmp	ip, r3
    43ee:	d100      	bne.n	43f2 <__aeabi_dsub+0x2e2>
    43f0:	e0c5      	b.n	457e <__aeabi_dsub+0x46e>
    43f2:	4452      	add	r2, sl
    43f4:	4552      	cmp	r2, sl
    43f6:	4180      	sbcs	r0, r0
    43f8:	1864      	adds	r4, r4, r1
    43fa:	4240      	negs	r0, r0
    43fc:	1824      	adds	r4, r4, r0
    43fe:	07e7      	lsls	r7, r4, #31
    4400:	0852      	lsrs	r2, r2, #1
    4402:	4317      	orrs	r7, r2
    4404:	0864      	lsrs	r4, r4, #1
    4406:	4666      	mov	r6, ip
    4408:	e708      	b.n	421c <__aeabi_dsub+0x10c>
    440a:	4812      	ldr	r0, [pc, #72]	; (4454 <__aeabi_dsub+0x344>)
    440c:	4285      	cmp	r5, r0
    440e:	d100      	bne.n	4412 <__aeabi_dsub+0x302>
    4410:	e085      	b.n	451e <__aeabi_dsub+0x40e>
    4412:	001d      	movs	r5, r3
    4414:	e6bc      	b.n	4190 <__aeabi_dsub+0x80>
    4416:	0029      	movs	r1, r5
    4418:	3e1f      	subs	r6, #31
    441a:	40f1      	lsrs	r1, r6
    441c:	2b20      	cmp	r3, #32
    441e:	d100      	bne.n	4422 <__aeabi_dsub+0x312>
    4420:	e07f      	b.n	4522 <__aeabi_dsub+0x412>
    4422:	2240      	movs	r2, #64	; 0x40
    4424:	1ad3      	subs	r3, r2, r3
    4426:	409d      	lsls	r5, r3
    4428:	432f      	orrs	r7, r5
    442a:	1e7d      	subs	r5, r7, #1
    442c:	41af      	sbcs	r7, r5
    442e:	2400      	movs	r4, #0
    4430:	430f      	orrs	r7, r1
    4432:	2600      	movs	r6, #0
    4434:	e78e      	b.n	4354 <__aeabi_dsub+0x244>
    4436:	002b      	movs	r3, r5
    4438:	000f      	movs	r7, r1
    443a:	3b20      	subs	r3, #32
    443c:	40df      	lsrs	r7, r3
    443e:	2d20      	cmp	r5, #32
    4440:	d071      	beq.n	4526 <__aeabi_dsub+0x416>
    4442:	2340      	movs	r3, #64	; 0x40
    4444:	1b5d      	subs	r5, r3, r5
    4446:	40a9      	lsls	r1, r5
    4448:	430a      	orrs	r2, r1
    444a:	1e51      	subs	r1, r2, #1
    444c:	418a      	sbcs	r2, r1
    444e:	2100      	movs	r1, #0
    4450:	4317      	orrs	r7, r2
    4452:	e6af      	b.n	41b4 <__aeabi_dsub+0xa4>
    4454:	000007ff 	.word	0x000007ff
    4458:	ff7fffff 	.word	0xff7fffff
    445c:	800fffff 	.word	0x800fffff
    4460:	2e00      	cmp	r6, #0
    4462:	d03e      	beq.n	44e2 <__aeabi_dsub+0x3d2>
    4464:	4eb3      	ldr	r6, [pc, #716]	; (4734 <__aeabi_dsub+0x624>)
    4466:	45b4      	cmp	ip, r6
    4468:	d045      	beq.n	44f6 <__aeabi_dsub+0x3e6>
    446a:	2680      	movs	r6, #128	; 0x80
    446c:	0436      	lsls	r6, r6, #16
    446e:	426d      	negs	r5, r5
    4470:	4334      	orrs	r4, r6
    4472:	2d38      	cmp	r5, #56	; 0x38
    4474:	dd00      	ble.n	4478 <__aeabi_dsub+0x368>
    4476:	e0a8      	b.n	45ca <__aeabi_dsub+0x4ba>
    4478:	2d1f      	cmp	r5, #31
    447a:	dd00      	ble.n	447e <__aeabi_dsub+0x36e>
    447c:	e11f      	b.n	46be <__aeabi_dsub+0x5ae>
    447e:	2620      	movs	r6, #32
    4480:	0027      	movs	r7, r4
    4482:	4650      	mov	r0, sl
    4484:	1b76      	subs	r6, r6, r5
    4486:	40b7      	lsls	r7, r6
    4488:	40e8      	lsrs	r0, r5
    448a:	4307      	orrs	r7, r0
    448c:	4650      	mov	r0, sl
    448e:	40b0      	lsls	r0, r6
    4490:	1e46      	subs	r6, r0, #1
    4492:	41b0      	sbcs	r0, r6
    4494:	40ec      	lsrs	r4, r5
    4496:	4338      	orrs	r0, r7
    4498:	1a17      	subs	r7, r2, r0
    449a:	42ba      	cmp	r2, r7
    449c:	4192      	sbcs	r2, r2
    449e:	1b0c      	subs	r4, r1, r4
    44a0:	4252      	negs	r2, r2
    44a2:	1aa4      	subs	r4, r4, r2
    44a4:	4666      	mov	r6, ip
    44a6:	4698      	mov	r8, r3
    44a8:	e68b      	b.n	41c2 <__aeabi_dsub+0xb2>
    44aa:	4664      	mov	r4, ip
    44ac:	4667      	mov	r7, ip
    44ae:	432c      	orrs	r4, r5
    44b0:	d000      	beq.n	44b4 <__aeabi_dsub+0x3a4>
    44b2:	e68b      	b.n	41cc <__aeabi_dsub+0xbc>
    44b4:	2500      	movs	r5, #0
    44b6:	2600      	movs	r6, #0
    44b8:	2700      	movs	r7, #0
    44ba:	e6ea      	b.n	4292 <__aeabi_dsub+0x182>
    44bc:	001e      	movs	r6, r3
    44be:	e6ad      	b.n	421c <__aeabi_dsub+0x10c>
    44c0:	2b1f      	cmp	r3, #31
    44c2:	dc60      	bgt.n	4586 <__aeabi_dsub+0x476>
    44c4:	2720      	movs	r7, #32
    44c6:	1af8      	subs	r0, r7, r3
    44c8:	000f      	movs	r7, r1
    44ca:	4684      	mov	ip, r0
    44cc:	4087      	lsls	r7, r0
    44ce:	0010      	movs	r0, r2
    44d0:	40d8      	lsrs	r0, r3
    44d2:	4307      	orrs	r7, r0
    44d4:	4660      	mov	r0, ip
    44d6:	4082      	lsls	r2, r0
    44d8:	1e50      	subs	r0, r2, #1
    44da:	4182      	sbcs	r2, r0
    44dc:	40d9      	lsrs	r1, r3
    44de:	4317      	orrs	r7, r2
    44e0:	e6f5      	b.n	42ce <__aeabi_dsub+0x1be>
    44e2:	0026      	movs	r6, r4
    44e4:	4650      	mov	r0, sl
    44e6:	4306      	orrs	r6, r0
    44e8:	d005      	beq.n	44f6 <__aeabi_dsub+0x3e6>
    44ea:	43ed      	mvns	r5, r5
    44ec:	2d00      	cmp	r5, #0
    44ee:	d0d3      	beq.n	4498 <__aeabi_dsub+0x388>
    44f0:	4e90      	ldr	r6, [pc, #576]	; (4734 <__aeabi_dsub+0x624>)
    44f2:	45b4      	cmp	ip, r6
    44f4:	d1bd      	bne.n	4472 <__aeabi_dsub+0x362>
    44f6:	000c      	movs	r4, r1
    44f8:	0017      	movs	r7, r2
    44fa:	4666      	mov	r6, ip
    44fc:	4698      	mov	r8, r3
    44fe:	e68d      	b.n	421c <__aeabi_dsub+0x10c>
    4500:	488c      	ldr	r0, [pc, #560]	; (4734 <__aeabi_dsub+0x624>)
    4502:	4283      	cmp	r3, r0
    4504:	d00b      	beq.n	451e <__aeabi_dsub+0x40e>
    4506:	4663      	mov	r3, ip
    4508:	e6d9      	b.n	42be <__aeabi_dsub+0x1ae>
    450a:	2d00      	cmp	r5, #0
    450c:	d000      	beq.n	4510 <__aeabi_dsub+0x400>
    450e:	e096      	b.n	463e <__aeabi_dsub+0x52e>
    4510:	0008      	movs	r0, r1
    4512:	4310      	orrs	r0, r2
    4514:	d100      	bne.n	4518 <__aeabi_dsub+0x408>
    4516:	e0e2      	b.n	46de <__aeabi_dsub+0x5ce>
    4518:	000c      	movs	r4, r1
    451a:	0017      	movs	r7, r2
    451c:	4698      	mov	r8, r3
    451e:	4e85      	ldr	r6, [pc, #532]	; (4734 <__aeabi_dsub+0x624>)
    4520:	e67c      	b.n	421c <__aeabi_dsub+0x10c>
    4522:	2500      	movs	r5, #0
    4524:	e780      	b.n	4428 <__aeabi_dsub+0x318>
    4526:	2100      	movs	r1, #0
    4528:	e78e      	b.n	4448 <__aeabi_dsub+0x338>
    452a:	0023      	movs	r3, r4
    452c:	4650      	mov	r0, sl
    452e:	4303      	orrs	r3, r0
    4530:	2e00      	cmp	r6, #0
    4532:	d000      	beq.n	4536 <__aeabi_dsub+0x426>
    4534:	e0a8      	b.n	4688 <__aeabi_dsub+0x578>
    4536:	2b00      	cmp	r3, #0
    4538:	d100      	bne.n	453c <__aeabi_dsub+0x42c>
    453a:	e0de      	b.n	46fa <__aeabi_dsub+0x5ea>
    453c:	000b      	movs	r3, r1
    453e:	4313      	orrs	r3, r2
    4540:	d100      	bne.n	4544 <__aeabi_dsub+0x434>
    4542:	e66b      	b.n	421c <__aeabi_dsub+0x10c>
    4544:	4452      	add	r2, sl
    4546:	4552      	cmp	r2, sl
    4548:	4180      	sbcs	r0, r0
    454a:	1864      	adds	r4, r4, r1
    454c:	4240      	negs	r0, r0
    454e:	1824      	adds	r4, r4, r0
    4550:	0017      	movs	r7, r2
    4552:	0223      	lsls	r3, r4, #8
    4554:	d400      	bmi.n	4558 <__aeabi_dsub+0x448>
    4556:	e6fd      	b.n	4354 <__aeabi_dsub+0x244>
    4558:	4b77      	ldr	r3, [pc, #476]	; (4738 <__aeabi_dsub+0x628>)
    455a:	4666      	mov	r6, ip
    455c:	401c      	ands	r4, r3
    455e:	e65d      	b.n	421c <__aeabi_dsub+0x10c>
    4560:	0025      	movs	r5, r4
    4562:	4650      	mov	r0, sl
    4564:	4305      	orrs	r5, r0
    4566:	2e00      	cmp	r6, #0
    4568:	d1cf      	bne.n	450a <__aeabi_dsub+0x3fa>
    456a:	2d00      	cmp	r5, #0
    456c:	d14f      	bne.n	460e <__aeabi_dsub+0x4fe>
    456e:	000c      	movs	r4, r1
    4570:	4314      	orrs	r4, r2
    4572:	d100      	bne.n	4576 <__aeabi_dsub+0x466>
    4574:	e0a0      	b.n	46b8 <__aeabi_dsub+0x5a8>
    4576:	000c      	movs	r4, r1
    4578:	0017      	movs	r7, r2
    457a:	4698      	mov	r8, r3
    457c:	e64e      	b.n	421c <__aeabi_dsub+0x10c>
    457e:	4666      	mov	r6, ip
    4580:	2400      	movs	r4, #0
    4582:	2700      	movs	r7, #0
    4584:	e685      	b.n	4292 <__aeabi_dsub+0x182>
    4586:	001f      	movs	r7, r3
    4588:	0008      	movs	r0, r1
    458a:	3f20      	subs	r7, #32
    458c:	40f8      	lsrs	r0, r7
    458e:	0007      	movs	r7, r0
    4590:	2b20      	cmp	r3, #32
    4592:	d100      	bne.n	4596 <__aeabi_dsub+0x486>
    4594:	e08e      	b.n	46b4 <__aeabi_dsub+0x5a4>
    4596:	2040      	movs	r0, #64	; 0x40
    4598:	1ac3      	subs	r3, r0, r3
    459a:	4099      	lsls	r1, r3
    459c:	430a      	orrs	r2, r1
    459e:	1e51      	subs	r1, r2, #1
    45a0:	418a      	sbcs	r2, r1
    45a2:	2100      	movs	r1, #0
    45a4:	4317      	orrs	r7, r2
    45a6:	e692      	b.n	42ce <__aeabi_dsub+0x1be>
    45a8:	2e00      	cmp	r6, #0
    45aa:	d114      	bne.n	45d6 <__aeabi_dsub+0x4c6>
    45ac:	0026      	movs	r6, r4
    45ae:	4650      	mov	r0, sl
    45b0:	4306      	orrs	r6, r0
    45b2:	d062      	beq.n	467a <__aeabi_dsub+0x56a>
    45b4:	43db      	mvns	r3, r3
    45b6:	2b00      	cmp	r3, #0
    45b8:	d15c      	bne.n	4674 <__aeabi_dsub+0x564>
    45ba:	1887      	adds	r7, r0, r2
    45bc:	4297      	cmp	r7, r2
    45be:	4192      	sbcs	r2, r2
    45c0:	1864      	adds	r4, r4, r1
    45c2:	4252      	negs	r2, r2
    45c4:	18a4      	adds	r4, r4, r2
    45c6:	4666      	mov	r6, ip
    45c8:	e687      	b.n	42da <__aeabi_dsub+0x1ca>
    45ca:	4650      	mov	r0, sl
    45cc:	4320      	orrs	r0, r4
    45ce:	1e44      	subs	r4, r0, #1
    45d0:	41a0      	sbcs	r0, r4
    45d2:	2400      	movs	r4, #0
    45d4:	e760      	b.n	4498 <__aeabi_dsub+0x388>
    45d6:	4e57      	ldr	r6, [pc, #348]	; (4734 <__aeabi_dsub+0x624>)
    45d8:	45b4      	cmp	ip, r6
    45da:	d04e      	beq.n	467a <__aeabi_dsub+0x56a>
    45dc:	2680      	movs	r6, #128	; 0x80
    45de:	0436      	lsls	r6, r6, #16
    45e0:	425b      	negs	r3, r3
    45e2:	4334      	orrs	r4, r6
    45e4:	2b38      	cmp	r3, #56	; 0x38
    45e6:	dd00      	ble.n	45ea <__aeabi_dsub+0x4da>
    45e8:	e07f      	b.n	46ea <__aeabi_dsub+0x5da>
    45ea:	2b1f      	cmp	r3, #31
    45ec:	dd00      	ble.n	45f0 <__aeabi_dsub+0x4e0>
    45ee:	e08b      	b.n	4708 <__aeabi_dsub+0x5f8>
    45f0:	2620      	movs	r6, #32
    45f2:	0027      	movs	r7, r4
    45f4:	4650      	mov	r0, sl
    45f6:	1af6      	subs	r6, r6, r3
    45f8:	40b7      	lsls	r7, r6
    45fa:	40d8      	lsrs	r0, r3
    45fc:	4307      	orrs	r7, r0
    45fe:	4650      	mov	r0, sl
    4600:	40b0      	lsls	r0, r6
    4602:	1e46      	subs	r6, r0, #1
    4604:	41b0      	sbcs	r0, r6
    4606:	4307      	orrs	r7, r0
    4608:	40dc      	lsrs	r4, r3
    460a:	18bf      	adds	r7, r7, r2
    460c:	e7d6      	b.n	45bc <__aeabi_dsub+0x4ac>
    460e:	000d      	movs	r5, r1
    4610:	4315      	orrs	r5, r2
    4612:	d100      	bne.n	4616 <__aeabi_dsub+0x506>
    4614:	e602      	b.n	421c <__aeabi_dsub+0x10c>
    4616:	4650      	mov	r0, sl
    4618:	1a80      	subs	r0, r0, r2
    461a:	4582      	cmp	sl, r0
    461c:	41bf      	sbcs	r7, r7
    461e:	1a65      	subs	r5, r4, r1
    4620:	427f      	negs	r7, r7
    4622:	1bed      	subs	r5, r5, r7
    4624:	4684      	mov	ip, r0
    4626:	0228      	lsls	r0, r5, #8
    4628:	d400      	bmi.n	462c <__aeabi_dsub+0x51c>
    462a:	e68d      	b.n	4348 <__aeabi_dsub+0x238>
    462c:	4650      	mov	r0, sl
    462e:	1a17      	subs	r7, r2, r0
    4630:	42ba      	cmp	r2, r7
    4632:	4192      	sbcs	r2, r2
    4634:	1b0c      	subs	r4, r1, r4
    4636:	4252      	negs	r2, r2
    4638:	1aa4      	subs	r4, r4, r2
    463a:	4698      	mov	r8, r3
    463c:	e5ee      	b.n	421c <__aeabi_dsub+0x10c>
    463e:	000d      	movs	r5, r1
    4640:	4315      	orrs	r5, r2
    4642:	d100      	bne.n	4646 <__aeabi_dsub+0x536>
    4644:	e76b      	b.n	451e <__aeabi_dsub+0x40e>
    4646:	4650      	mov	r0, sl
    4648:	0767      	lsls	r7, r4, #29
    464a:	08c0      	lsrs	r0, r0, #3
    464c:	4307      	orrs	r7, r0
    464e:	2080      	movs	r0, #128	; 0x80
    4650:	08e4      	lsrs	r4, r4, #3
    4652:	0300      	lsls	r0, r0, #12
    4654:	4204      	tst	r4, r0
    4656:	d007      	beq.n	4668 <__aeabi_dsub+0x558>
    4658:	08cd      	lsrs	r5, r1, #3
    465a:	4205      	tst	r5, r0
    465c:	d104      	bne.n	4668 <__aeabi_dsub+0x558>
    465e:	002c      	movs	r4, r5
    4660:	4698      	mov	r8, r3
    4662:	08d7      	lsrs	r7, r2, #3
    4664:	0749      	lsls	r1, r1, #29
    4666:	430f      	orrs	r7, r1
    4668:	0f7b      	lsrs	r3, r7, #29
    466a:	00e4      	lsls	r4, r4, #3
    466c:	431c      	orrs	r4, r3
    466e:	00ff      	lsls	r7, r7, #3
    4670:	4e30      	ldr	r6, [pc, #192]	; (4734 <__aeabi_dsub+0x624>)
    4672:	e5d3      	b.n	421c <__aeabi_dsub+0x10c>
    4674:	4e2f      	ldr	r6, [pc, #188]	; (4734 <__aeabi_dsub+0x624>)
    4676:	45b4      	cmp	ip, r6
    4678:	d1b4      	bne.n	45e4 <__aeabi_dsub+0x4d4>
    467a:	000c      	movs	r4, r1
    467c:	0017      	movs	r7, r2
    467e:	4666      	mov	r6, ip
    4680:	e5cc      	b.n	421c <__aeabi_dsub+0x10c>
    4682:	2700      	movs	r7, #0
    4684:	2400      	movs	r4, #0
    4686:	e5e8      	b.n	425a <__aeabi_dsub+0x14a>
    4688:	2b00      	cmp	r3, #0
    468a:	d039      	beq.n	4700 <__aeabi_dsub+0x5f0>
    468c:	000b      	movs	r3, r1
    468e:	4313      	orrs	r3, r2
    4690:	d100      	bne.n	4694 <__aeabi_dsub+0x584>
    4692:	e744      	b.n	451e <__aeabi_dsub+0x40e>
    4694:	08c0      	lsrs	r0, r0, #3
    4696:	0767      	lsls	r7, r4, #29
    4698:	4307      	orrs	r7, r0
    469a:	2080      	movs	r0, #128	; 0x80
    469c:	08e4      	lsrs	r4, r4, #3
    469e:	0300      	lsls	r0, r0, #12
    46a0:	4204      	tst	r4, r0
    46a2:	d0e1      	beq.n	4668 <__aeabi_dsub+0x558>
    46a4:	08cb      	lsrs	r3, r1, #3
    46a6:	4203      	tst	r3, r0
    46a8:	d1de      	bne.n	4668 <__aeabi_dsub+0x558>
    46aa:	08d7      	lsrs	r7, r2, #3
    46ac:	0749      	lsls	r1, r1, #29
    46ae:	430f      	orrs	r7, r1
    46b0:	001c      	movs	r4, r3
    46b2:	e7d9      	b.n	4668 <__aeabi_dsub+0x558>
    46b4:	2100      	movs	r1, #0
    46b6:	e771      	b.n	459c <__aeabi_dsub+0x48c>
    46b8:	2500      	movs	r5, #0
    46ba:	2700      	movs	r7, #0
    46bc:	e5e9      	b.n	4292 <__aeabi_dsub+0x182>
    46be:	002e      	movs	r6, r5
    46c0:	0027      	movs	r7, r4
    46c2:	3e20      	subs	r6, #32
    46c4:	40f7      	lsrs	r7, r6
    46c6:	2d20      	cmp	r5, #32
    46c8:	d02f      	beq.n	472a <__aeabi_dsub+0x61a>
    46ca:	2640      	movs	r6, #64	; 0x40
    46cc:	1b75      	subs	r5, r6, r5
    46ce:	40ac      	lsls	r4, r5
    46d0:	4650      	mov	r0, sl
    46d2:	4320      	orrs	r0, r4
    46d4:	1e44      	subs	r4, r0, #1
    46d6:	41a0      	sbcs	r0, r4
    46d8:	2400      	movs	r4, #0
    46da:	4338      	orrs	r0, r7
    46dc:	e6dc      	b.n	4498 <__aeabi_dsub+0x388>
    46de:	2480      	movs	r4, #128	; 0x80
    46e0:	2500      	movs	r5, #0
    46e2:	0324      	lsls	r4, r4, #12
    46e4:	4e13      	ldr	r6, [pc, #76]	; (4734 <__aeabi_dsub+0x624>)
    46e6:	2700      	movs	r7, #0
    46e8:	e5d3      	b.n	4292 <__aeabi_dsub+0x182>
    46ea:	4650      	mov	r0, sl
    46ec:	4320      	orrs	r0, r4
    46ee:	0007      	movs	r7, r0
    46f0:	1e78      	subs	r0, r7, #1
    46f2:	4187      	sbcs	r7, r0
    46f4:	2400      	movs	r4, #0
    46f6:	18bf      	adds	r7, r7, r2
    46f8:	e760      	b.n	45bc <__aeabi_dsub+0x4ac>
    46fa:	000c      	movs	r4, r1
    46fc:	0017      	movs	r7, r2
    46fe:	e58d      	b.n	421c <__aeabi_dsub+0x10c>
    4700:	000c      	movs	r4, r1
    4702:	0017      	movs	r7, r2
    4704:	4e0b      	ldr	r6, [pc, #44]	; (4734 <__aeabi_dsub+0x624>)
    4706:	e589      	b.n	421c <__aeabi_dsub+0x10c>
    4708:	001e      	movs	r6, r3
    470a:	0027      	movs	r7, r4
    470c:	3e20      	subs	r6, #32
    470e:	40f7      	lsrs	r7, r6
    4710:	2b20      	cmp	r3, #32
    4712:	d00c      	beq.n	472e <__aeabi_dsub+0x61e>
    4714:	2640      	movs	r6, #64	; 0x40
    4716:	1af3      	subs	r3, r6, r3
    4718:	409c      	lsls	r4, r3
    471a:	4650      	mov	r0, sl
    471c:	4320      	orrs	r0, r4
    471e:	1e44      	subs	r4, r0, #1
    4720:	41a0      	sbcs	r0, r4
    4722:	4307      	orrs	r7, r0
    4724:	2400      	movs	r4, #0
    4726:	18bf      	adds	r7, r7, r2
    4728:	e748      	b.n	45bc <__aeabi_dsub+0x4ac>
    472a:	2400      	movs	r4, #0
    472c:	e7d0      	b.n	46d0 <__aeabi_dsub+0x5c0>
    472e:	2400      	movs	r4, #0
    4730:	e7f3      	b.n	471a <__aeabi_dsub+0x60a>
    4732:	46c0      	nop			; (mov r8, r8)
    4734:	000007ff 	.word	0x000007ff
    4738:	ff7fffff 	.word	0xff7fffff

0000473c <__aeabi_d2iz>:
    473c:	b530      	push	{r4, r5, lr}
    473e:	4d13      	ldr	r5, [pc, #76]	; (478c <__aeabi_d2iz+0x50>)
    4740:	030a      	lsls	r2, r1, #12
    4742:	004b      	lsls	r3, r1, #1
    4744:	0b12      	lsrs	r2, r2, #12
    4746:	0d5b      	lsrs	r3, r3, #21
    4748:	0fc9      	lsrs	r1, r1, #31
    474a:	2400      	movs	r4, #0
    474c:	42ab      	cmp	r3, r5
    474e:	dd10      	ble.n	4772 <__aeabi_d2iz+0x36>
    4750:	4c0f      	ldr	r4, [pc, #60]	; (4790 <__aeabi_d2iz+0x54>)
    4752:	42a3      	cmp	r3, r4
    4754:	dc0f      	bgt.n	4776 <__aeabi_d2iz+0x3a>
    4756:	2480      	movs	r4, #128	; 0x80
    4758:	4d0e      	ldr	r5, [pc, #56]	; (4794 <__aeabi_d2iz+0x58>)
    475a:	0364      	lsls	r4, r4, #13
    475c:	4322      	orrs	r2, r4
    475e:	1aed      	subs	r5, r5, r3
    4760:	2d1f      	cmp	r5, #31
    4762:	dd0b      	ble.n	477c <__aeabi_d2iz+0x40>
    4764:	480c      	ldr	r0, [pc, #48]	; (4798 <__aeabi_d2iz+0x5c>)
    4766:	1ac3      	subs	r3, r0, r3
    4768:	40da      	lsrs	r2, r3
    476a:	4254      	negs	r4, r2
    476c:	2900      	cmp	r1, #0
    476e:	d100      	bne.n	4772 <__aeabi_d2iz+0x36>
    4770:	0014      	movs	r4, r2
    4772:	0020      	movs	r0, r4
    4774:	bd30      	pop	{r4, r5, pc}
    4776:	4b09      	ldr	r3, [pc, #36]	; (479c <__aeabi_d2iz+0x60>)
    4778:	18cc      	adds	r4, r1, r3
    477a:	e7fa      	b.n	4772 <__aeabi_d2iz+0x36>
    477c:	4c08      	ldr	r4, [pc, #32]	; (47a0 <__aeabi_d2iz+0x64>)
    477e:	40e8      	lsrs	r0, r5
    4780:	46a4      	mov	ip, r4
    4782:	4463      	add	r3, ip
    4784:	409a      	lsls	r2, r3
    4786:	4302      	orrs	r2, r0
    4788:	e7ef      	b.n	476a <__aeabi_d2iz+0x2e>
    478a:	46c0      	nop			; (mov r8, r8)
    478c:	000003fe 	.word	0x000003fe
    4790:	0000041d 	.word	0x0000041d
    4794:	00000433 	.word	0x00000433
    4798:	00000413 	.word	0x00000413
    479c:	7fffffff 	.word	0x7fffffff
    47a0:	fffffbed 	.word	0xfffffbed

000047a4 <__aeabi_i2d>:
    47a4:	b570      	push	{r4, r5, r6, lr}
    47a6:	2800      	cmp	r0, #0
    47a8:	d030      	beq.n	480c <__aeabi_i2d+0x68>
    47aa:	17c3      	asrs	r3, r0, #31
    47ac:	18c4      	adds	r4, r0, r3
    47ae:	405c      	eors	r4, r3
    47b0:	0fc5      	lsrs	r5, r0, #31
    47b2:	0020      	movs	r0, r4
    47b4:	f000 f900 	bl	49b8 <__clzsi2>
    47b8:	4b17      	ldr	r3, [pc, #92]	; (4818 <__aeabi_i2d+0x74>)
    47ba:	4a18      	ldr	r2, [pc, #96]	; (481c <__aeabi_i2d+0x78>)
    47bc:	1a1b      	subs	r3, r3, r0
    47be:	1ad2      	subs	r2, r2, r3
    47c0:	2a1f      	cmp	r2, #31
    47c2:	dd18      	ble.n	47f6 <__aeabi_i2d+0x52>
    47c4:	4a16      	ldr	r2, [pc, #88]	; (4820 <__aeabi_i2d+0x7c>)
    47c6:	1ad2      	subs	r2, r2, r3
    47c8:	4094      	lsls	r4, r2
    47ca:	2200      	movs	r2, #0
    47cc:	0324      	lsls	r4, r4, #12
    47ce:	055b      	lsls	r3, r3, #21
    47d0:	0b24      	lsrs	r4, r4, #12
    47d2:	0d5b      	lsrs	r3, r3, #21
    47d4:	2100      	movs	r1, #0
    47d6:	0010      	movs	r0, r2
    47d8:	0324      	lsls	r4, r4, #12
    47da:	0d0a      	lsrs	r2, r1, #20
    47dc:	0b24      	lsrs	r4, r4, #12
    47de:	0512      	lsls	r2, r2, #20
    47e0:	4322      	orrs	r2, r4
    47e2:	4c10      	ldr	r4, [pc, #64]	; (4824 <__aeabi_i2d+0x80>)
    47e4:	051b      	lsls	r3, r3, #20
    47e6:	4022      	ands	r2, r4
    47e8:	4313      	orrs	r3, r2
    47ea:	005b      	lsls	r3, r3, #1
    47ec:	07ed      	lsls	r5, r5, #31
    47ee:	085b      	lsrs	r3, r3, #1
    47f0:	432b      	orrs	r3, r5
    47f2:	0019      	movs	r1, r3
    47f4:	bd70      	pop	{r4, r5, r6, pc}
    47f6:	0021      	movs	r1, r4
    47f8:	4091      	lsls	r1, r2
    47fa:	000a      	movs	r2, r1
    47fc:	210b      	movs	r1, #11
    47fe:	1a08      	subs	r0, r1, r0
    4800:	40c4      	lsrs	r4, r0
    4802:	055b      	lsls	r3, r3, #21
    4804:	0324      	lsls	r4, r4, #12
    4806:	0b24      	lsrs	r4, r4, #12
    4808:	0d5b      	lsrs	r3, r3, #21
    480a:	e7e3      	b.n	47d4 <__aeabi_i2d+0x30>
    480c:	2500      	movs	r5, #0
    480e:	2300      	movs	r3, #0
    4810:	2400      	movs	r4, #0
    4812:	2200      	movs	r2, #0
    4814:	e7de      	b.n	47d4 <__aeabi_i2d+0x30>
    4816:	46c0      	nop			; (mov r8, r8)
    4818:	0000041e 	.word	0x0000041e
    481c:	00000433 	.word	0x00000433
    4820:	00000413 	.word	0x00000413
    4824:	800fffff 	.word	0x800fffff

00004828 <__aeabi_ui2d>:
    4828:	b510      	push	{r4, lr}
    482a:	1e04      	subs	r4, r0, #0
    482c:	d028      	beq.n	4880 <__aeabi_ui2d+0x58>
    482e:	f000 f8c3 	bl	49b8 <__clzsi2>
    4832:	4b15      	ldr	r3, [pc, #84]	; (4888 <__aeabi_ui2d+0x60>)
    4834:	4a15      	ldr	r2, [pc, #84]	; (488c <__aeabi_ui2d+0x64>)
    4836:	1a1b      	subs	r3, r3, r0
    4838:	1ad2      	subs	r2, r2, r3
    483a:	2a1f      	cmp	r2, #31
    483c:	dd15      	ble.n	486a <__aeabi_ui2d+0x42>
    483e:	4a14      	ldr	r2, [pc, #80]	; (4890 <__aeabi_ui2d+0x68>)
    4840:	1ad2      	subs	r2, r2, r3
    4842:	4094      	lsls	r4, r2
    4844:	2200      	movs	r2, #0
    4846:	0324      	lsls	r4, r4, #12
    4848:	055b      	lsls	r3, r3, #21
    484a:	0b24      	lsrs	r4, r4, #12
    484c:	0d5b      	lsrs	r3, r3, #21
    484e:	2100      	movs	r1, #0
    4850:	0010      	movs	r0, r2
    4852:	0324      	lsls	r4, r4, #12
    4854:	0d0a      	lsrs	r2, r1, #20
    4856:	0b24      	lsrs	r4, r4, #12
    4858:	0512      	lsls	r2, r2, #20
    485a:	4322      	orrs	r2, r4
    485c:	4c0d      	ldr	r4, [pc, #52]	; (4894 <__aeabi_ui2d+0x6c>)
    485e:	051b      	lsls	r3, r3, #20
    4860:	4022      	ands	r2, r4
    4862:	4313      	orrs	r3, r2
    4864:	005b      	lsls	r3, r3, #1
    4866:	0859      	lsrs	r1, r3, #1
    4868:	bd10      	pop	{r4, pc}
    486a:	0021      	movs	r1, r4
    486c:	4091      	lsls	r1, r2
    486e:	000a      	movs	r2, r1
    4870:	210b      	movs	r1, #11
    4872:	1a08      	subs	r0, r1, r0
    4874:	40c4      	lsrs	r4, r0
    4876:	055b      	lsls	r3, r3, #21
    4878:	0324      	lsls	r4, r4, #12
    487a:	0b24      	lsrs	r4, r4, #12
    487c:	0d5b      	lsrs	r3, r3, #21
    487e:	e7e6      	b.n	484e <__aeabi_ui2d+0x26>
    4880:	2300      	movs	r3, #0
    4882:	2400      	movs	r4, #0
    4884:	2200      	movs	r2, #0
    4886:	e7e2      	b.n	484e <__aeabi_ui2d+0x26>
    4888:	0000041e 	.word	0x0000041e
    488c:	00000433 	.word	0x00000433
    4890:	00000413 	.word	0x00000413
    4894:	800fffff 	.word	0x800fffff

00004898 <__aeabi_f2d>:
    4898:	0041      	lsls	r1, r0, #1
    489a:	0e09      	lsrs	r1, r1, #24
    489c:	1c4b      	adds	r3, r1, #1
    489e:	b570      	push	{r4, r5, r6, lr}
    48a0:	b2db      	uxtb	r3, r3
    48a2:	0246      	lsls	r6, r0, #9
    48a4:	0a75      	lsrs	r5, r6, #9
    48a6:	0fc4      	lsrs	r4, r0, #31
    48a8:	2b01      	cmp	r3, #1
    48aa:	dd14      	ble.n	48d6 <__aeabi_f2d+0x3e>
    48ac:	23e0      	movs	r3, #224	; 0xe0
    48ae:	009b      	lsls	r3, r3, #2
    48b0:	076d      	lsls	r5, r5, #29
    48b2:	0b36      	lsrs	r6, r6, #12
    48b4:	18cb      	adds	r3, r1, r3
    48b6:	2100      	movs	r1, #0
    48b8:	0d0a      	lsrs	r2, r1, #20
    48ba:	0028      	movs	r0, r5
    48bc:	0512      	lsls	r2, r2, #20
    48be:	4d1c      	ldr	r5, [pc, #112]	; (4930 <__aeabi_f2d+0x98>)
    48c0:	4332      	orrs	r2, r6
    48c2:	055b      	lsls	r3, r3, #21
    48c4:	402a      	ands	r2, r5
    48c6:	085b      	lsrs	r3, r3, #1
    48c8:	4313      	orrs	r3, r2
    48ca:	005b      	lsls	r3, r3, #1
    48cc:	07e4      	lsls	r4, r4, #31
    48ce:	085b      	lsrs	r3, r3, #1
    48d0:	4323      	orrs	r3, r4
    48d2:	0019      	movs	r1, r3
    48d4:	bd70      	pop	{r4, r5, r6, pc}
    48d6:	2900      	cmp	r1, #0
    48d8:	d114      	bne.n	4904 <__aeabi_f2d+0x6c>
    48da:	2d00      	cmp	r5, #0
    48dc:	d01e      	beq.n	491c <__aeabi_f2d+0x84>
    48de:	0028      	movs	r0, r5
    48e0:	f000 f86a 	bl	49b8 <__clzsi2>
    48e4:	280a      	cmp	r0, #10
    48e6:	dc1c      	bgt.n	4922 <__aeabi_f2d+0x8a>
    48e8:	230b      	movs	r3, #11
    48ea:	002a      	movs	r2, r5
    48ec:	1a1b      	subs	r3, r3, r0
    48ee:	40da      	lsrs	r2, r3
    48f0:	0003      	movs	r3, r0
    48f2:	3315      	adds	r3, #21
    48f4:	409d      	lsls	r5, r3
    48f6:	4b0f      	ldr	r3, [pc, #60]	; (4934 <__aeabi_f2d+0x9c>)
    48f8:	0312      	lsls	r2, r2, #12
    48fa:	1a1b      	subs	r3, r3, r0
    48fc:	055b      	lsls	r3, r3, #21
    48fe:	0b16      	lsrs	r6, r2, #12
    4900:	0d5b      	lsrs	r3, r3, #21
    4902:	e7d8      	b.n	48b6 <__aeabi_f2d+0x1e>
    4904:	2d00      	cmp	r5, #0
    4906:	d006      	beq.n	4916 <__aeabi_f2d+0x7e>
    4908:	0b32      	lsrs	r2, r6, #12
    490a:	2680      	movs	r6, #128	; 0x80
    490c:	0336      	lsls	r6, r6, #12
    490e:	076d      	lsls	r5, r5, #29
    4910:	4316      	orrs	r6, r2
    4912:	4b09      	ldr	r3, [pc, #36]	; (4938 <__aeabi_f2d+0xa0>)
    4914:	e7cf      	b.n	48b6 <__aeabi_f2d+0x1e>
    4916:	4b08      	ldr	r3, [pc, #32]	; (4938 <__aeabi_f2d+0xa0>)
    4918:	2600      	movs	r6, #0
    491a:	e7cc      	b.n	48b6 <__aeabi_f2d+0x1e>
    491c:	2300      	movs	r3, #0
    491e:	2600      	movs	r6, #0
    4920:	e7c9      	b.n	48b6 <__aeabi_f2d+0x1e>
    4922:	0003      	movs	r3, r0
    4924:	002a      	movs	r2, r5
    4926:	3b0b      	subs	r3, #11
    4928:	409a      	lsls	r2, r3
    492a:	2500      	movs	r5, #0
    492c:	e7e3      	b.n	48f6 <__aeabi_f2d+0x5e>
    492e:	46c0      	nop			; (mov r8, r8)
    4930:	800fffff 	.word	0x800fffff
    4934:	00000389 	.word	0x00000389
    4938:	000007ff 	.word	0x000007ff

0000493c <__aeabi_cdrcmple>:
    493c:	4684      	mov	ip, r0
    493e:	1c10      	adds	r0, r2, #0
    4940:	4662      	mov	r2, ip
    4942:	468c      	mov	ip, r1
    4944:	1c19      	adds	r1, r3, #0
    4946:	4663      	mov	r3, ip
    4948:	e000      	b.n	494c <__aeabi_cdcmpeq>
    494a:	46c0      	nop			; (mov r8, r8)

0000494c <__aeabi_cdcmpeq>:
    494c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    494e:	f000 f91b 	bl	4b88 <__ledf2>
    4952:	2800      	cmp	r0, #0
    4954:	d401      	bmi.n	495a <__aeabi_cdcmpeq+0xe>
    4956:	2100      	movs	r1, #0
    4958:	42c8      	cmn	r0, r1
    495a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0000495c <__aeabi_dcmpeq>:
    495c:	b510      	push	{r4, lr}
    495e:	f000 f875 	bl	4a4c <__eqdf2>
    4962:	4240      	negs	r0, r0
    4964:	3001      	adds	r0, #1
    4966:	bd10      	pop	{r4, pc}

00004968 <__aeabi_dcmplt>:
    4968:	b510      	push	{r4, lr}
    496a:	f000 f90d 	bl	4b88 <__ledf2>
    496e:	2800      	cmp	r0, #0
    4970:	db01      	blt.n	4976 <__aeabi_dcmplt+0xe>
    4972:	2000      	movs	r0, #0
    4974:	bd10      	pop	{r4, pc}
    4976:	2001      	movs	r0, #1
    4978:	bd10      	pop	{r4, pc}
    497a:	46c0      	nop			; (mov r8, r8)

0000497c <__aeabi_dcmple>:
    497c:	b510      	push	{r4, lr}
    497e:	f000 f903 	bl	4b88 <__ledf2>
    4982:	2800      	cmp	r0, #0
    4984:	dd01      	ble.n	498a <__aeabi_dcmple+0xe>
    4986:	2000      	movs	r0, #0
    4988:	bd10      	pop	{r4, pc}
    498a:	2001      	movs	r0, #1
    498c:	bd10      	pop	{r4, pc}
    498e:	46c0      	nop			; (mov r8, r8)

00004990 <__aeabi_dcmpgt>:
    4990:	b510      	push	{r4, lr}
    4992:	f000 f895 	bl	4ac0 <__gedf2>
    4996:	2800      	cmp	r0, #0
    4998:	dc01      	bgt.n	499e <__aeabi_dcmpgt+0xe>
    499a:	2000      	movs	r0, #0
    499c:	bd10      	pop	{r4, pc}
    499e:	2001      	movs	r0, #1
    49a0:	bd10      	pop	{r4, pc}
    49a2:	46c0      	nop			; (mov r8, r8)

000049a4 <__aeabi_dcmpge>:
    49a4:	b510      	push	{r4, lr}
    49a6:	f000 f88b 	bl	4ac0 <__gedf2>
    49aa:	2800      	cmp	r0, #0
    49ac:	da01      	bge.n	49b2 <__aeabi_dcmpge+0xe>
    49ae:	2000      	movs	r0, #0
    49b0:	bd10      	pop	{r4, pc}
    49b2:	2001      	movs	r0, #1
    49b4:	bd10      	pop	{r4, pc}
    49b6:	46c0      	nop			; (mov r8, r8)

000049b8 <__clzsi2>:
    49b8:	211c      	movs	r1, #28
    49ba:	2301      	movs	r3, #1
    49bc:	041b      	lsls	r3, r3, #16
    49be:	4298      	cmp	r0, r3
    49c0:	d301      	bcc.n	49c6 <__clzsi2+0xe>
    49c2:	0c00      	lsrs	r0, r0, #16
    49c4:	3910      	subs	r1, #16
    49c6:	0a1b      	lsrs	r3, r3, #8
    49c8:	4298      	cmp	r0, r3
    49ca:	d301      	bcc.n	49d0 <__clzsi2+0x18>
    49cc:	0a00      	lsrs	r0, r0, #8
    49ce:	3908      	subs	r1, #8
    49d0:	091b      	lsrs	r3, r3, #4
    49d2:	4298      	cmp	r0, r3
    49d4:	d301      	bcc.n	49da <__clzsi2+0x22>
    49d6:	0900      	lsrs	r0, r0, #4
    49d8:	3904      	subs	r1, #4
    49da:	a202      	add	r2, pc, #8	; (adr r2, 49e4 <__clzsi2+0x2c>)
    49dc:	5c10      	ldrb	r0, [r2, r0]
    49de:	1840      	adds	r0, r0, r1
    49e0:	4770      	bx	lr
    49e2:	46c0      	nop			; (mov r8, r8)
    49e4:	02020304 	.word	0x02020304
    49e8:	01010101 	.word	0x01010101
	...

000049f4 <__clzdi2>:
    49f4:	b510      	push	{r4, lr}
    49f6:	2900      	cmp	r1, #0
    49f8:	d103      	bne.n	4a02 <__clzdi2+0xe>
    49fa:	f7ff ffdd 	bl	49b8 <__clzsi2>
    49fe:	3020      	adds	r0, #32
    4a00:	e002      	b.n	4a08 <__clzdi2+0x14>
    4a02:	1c08      	adds	r0, r1, #0
    4a04:	f7ff ffd8 	bl	49b8 <__clzsi2>
    4a08:	bd10      	pop	{r4, pc}
    4a0a:	46c0      	nop			; (mov r8, r8)

00004a0c <__ctzsi2>:
    4a0c:	4241      	negs	r1, r0
    4a0e:	4008      	ands	r0, r1
    4a10:	211c      	movs	r1, #28
    4a12:	2301      	movs	r3, #1
    4a14:	041b      	lsls	r3, r3, #16
    4a16:	4298      	cmp	r0, r3
    4a18:	d301      	bcc.n	4a1e <__ctzsi2+0x12>
    4a1a:	0c00      	lsrs	r0, r0, #16
    4a1c:	3910      	subs	r1, #16
    4a1e:	0a1b      	lsrs	r3, r3, #8
    4a20:	4298      	cmp	r0, r3
    4a22:	d301      	bcc.n	4a28 <__ctzsi2+0x1c>
    4a24:	0a00      	lsrs	r0, r0, #8
    4a26:	3908      	subs	r1, #8
    4a28:	091b      	lsrs	r3, r3, #4
    4a2a:	4298      	cmp	r0, r3
    4a2c:	d301      	bcc.n	4a32 <__ctzsi2+0x26>
    4a2e:	0900      	lsrs	r0, r0, #4
    4a30:	3904      	subs	r1, #4
    4a32:	a202      	add	r2, pc, #8	; (adr r2, 4a3c <__ctzsi2+0x30>)
    4a34:	5c10      	ldrb	r0, [r2, r0]
    4a36:	1a40      	subs	r0, r0, r1
    4a38:	4770      	bx	lr
    4a3a:	46c0      	nop			; (mov r8, r8)
    4a3c:	1d1d1c1b 	.word	0x1d1d1c1b
    4a40:	1e1e1e1e 	.word	0x1e1e1e1e
    4a44:	1f1f1f1f 	.word	0x1f1f1f1f
    4a48:	1f1f1f1f 	.word	0x1f1f1f1f

00004a4c <__eqdf2>:
    4a4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    4a4e:	464f      	mov	r7, r9
    4a50:	4646      	mov	r6, r8
    4a52:	46d6      	mov	lr, sl
    4a54:	005c      	lsls	r4, r3, #1
    4a56:	b5c0      	push	{r6, r7, lr}
    4a58:	031f      	lsls	r7, r3, #12
    4a5a:	0fdb      	lsrs	r3, r3, #31
    4a5c:	469a      	mov	sl, r3
    4a5e:	4b17      	ldr	r3, [pc, #92]	; (4abc <__eqdf2+0x70>)
    4a60:	030e      	lsls	r6, r1, #12
    4a62:	004d      	lsls	r5, r1, #1
    4a64:	4684      	mov	ip, r0
    4a66:	4680      	mov	r8, r0
    4a68:	0b36      	lsrs	r6, r6, #12
    4a6a:	0d6d      	lsrs	r5, r5, #21
    4a6c:	0fc9      	lsrs	r1, r1, #31
    4a6e:	4691      	mov	r9, r2
    4a70:	0b3f      	lsrs	r7, r7, #12
    4a72:	0d64      	lsrs	r4, r4, #21
    4a74:	2001      	movs	r0, #1
    4a76:	429d      	cmp	r5, r3
    4a78:	d008      	beq.n	4a8c <__eqdf2+0x40>
    4a7a:	429c      	cmp	r4, r3
    4a7c:	d001      	beq.n	4a82 <__eqdf2+0x36>
    4a7e:	42a5      	cmp	r5, r4
    4a80:	d00b      	beq.n	4a9a <__eqdf2+0x4e>
    4a82:	bc1c      	pop	{r2, r3, r4}
    4a84:	4690      	mov	r8, r2
    4a86:	4699      	mov	r9, r3
    4a88:	46a2      	mov	sl, r4
    4a8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4a8c:	4663      	mov	r3, ip
    4a8e:	4333      	orrs	r3, r6
    4a90:	d1f7      	bne.n	4a82 <__eqdf2+0x36>
    4a92:	42ac      	cmp	r4, r5
    4a94:	d1f5      	bne.n	4a82 <__eqdf2+0x36>
    4a96:	433a      	orrs	r2, r7
    4a98:	d1f3      	bne.n	4a82 <__eqdf2+0x36>
    4a9a:	2001      	movs	r0, #1
    4a9c:	42be      	cmp	r6, r7
    4a9e:	d1f0      	bne.n	4a82 <__eqdf2+0x36>
    4aa0:	45c8      	cmp	r8, r9
    4aa2:	d1ee      	bne.n	4a82 <__eqdf2+0x36>
    4aa4:	4551      	cmp	r1, sl
    4aa6:	d007      	beq.n	4ab8 <__eqdf2+0x6c>
    4aa8:	2d00      	cmp	r5, #0
    4aaa:	d1ea      	bne.n	4a82 <__eqdf2+0x36>
    4aac:	4663      	mov	r3, ip
    4aae:	431e      	orrs	r6, r3
    4ab0:	0030      	movs	r0, r6
    4ab2:	1e46      	subs	r6, r0, #1
    4ab4:	41b0      	sbcs	r0, r6
    4ab6:	e7e4      	b.n	4a82 <__eqdf2+0x36>
    4ab8:	2000      	movs	r0, #0
    4aba:	e7e2      	b.n	4a82 <__eqdf2+0x36>
    4abc:	000007ff 	.word	0x000007ff

00004ac0 <__gedf2>:
    4ac0:	b5f0      	push	{r4, r5, r6, r7, lr}
    4ac2:	4645      	mov	r5, r8
    4ac4:	46de      	mov	lr, fp
    4ac6:	4657      	mov	r7, sl
    4ac8:	464e      	mov	r6, r9
    4aca:	b5e0      	push	{r5, r6, r7, lr}
    4acc:	031f      	lsls	r7, r3, #12
    4ace:	0b3d      	lsrs	r5, r7, #12
    4ad0:	4f2c      	ldr	r7, [pc, #176]	; (4b84 <__gedf2+0xc4>)
    4ad2:	030e      	lsls	r6, r1, #12
    4ad4:	004c      	lsls	r4, r1, #1
    4ad6:	46ab      	mov	fp, r5
    4ad8:	005d      	lsls	r5, r3, #1
    4ada:	4684      	mov	ip, r0
    4adc:	0b36      	lsrs	r6, r6, #12
    4ade:	0d64      	lsrs	r4, r4, #21
    4ae0:	0fc9      	lsrs	r1, r1, #31
    4ae2:	4690      	mov	r8, r2
    4ae4:	0d6d      	lsrs	r5, r5, #21
    4ae6:	0fdb      	lsrs	r3, r3, #31
    4ae8:	42bc      	cmp	r4, r7
    4aea:	d02a      	beq.n	4b42 <__gedf2+0x82>
    4aec:	4f25      	ldr	r7, [pc, #148]	; (4b84 <__gedf2+0xc4>)
    4aee:	42bd      	cmp	r5, r7
    4af0:	d02d      	beq.n	4b4e <__gedf2+0x8e>
    4af2:	2c00      	cmp	r4, #0
    4af4:	d10f      	bne.n	4b16 <__gedf2+0x56>
    4af6:	4330      	orrs	r0, r6
    4af8:	0007      	movs	r7, r0
    4afa:	4681      	mov	r9, r0
    4afc:	4278      	negs	r0, r7
    4afe:	4178      	adcs	r0, r7
    4b00:	b2c0      	uxtb	r0, r0
    4b02:	2d00      	cmp	r5, #0
    4b04:	d117      	bne.n	4b36 <__gedf2+0x76>
    4b06:	465f      	mov	r7, fp
    4b08:	433a      	orrs	r2, r7
    4b0a:	d114      	bne.n	4b36 <__gedf2+0x76>
    4b0c:	464b      	mov	r3, r9
    4b0e:	2000      	movs	r0, #0
    4b10:	2b00      	cmp	r3, #0
    4b12:	d00a      	beq.n	4b2a <__gedf2+0x6a>
    4b14:	e006      	b.n	4b24 <__gedf2+0x64>
    4b16:	2d00      	cmp	r5, #0
    4b18:	d102      	bne.n	4b20 <__gedf2+0x60>
    4b1a:	4658      	mov	r0, fp
    4b1c:	4302      	orrs	r2, r0
    4b1e:	d001      	beq.n	4b24 <__gedf2+0x64>
    4b20:	4299      	cmp	r1, r3
    4b22:	d018      	beq.n	4b56 <__gedf2+0x96>
    4b24:	4248      	negs	r0, r1
    4b26:	2101      	movs	r1, #1
    4b28:	4308      	orrs	r0, r1
    4b2a:	bc3c      	pop	{r2, r3, r4, r5}
    4b2c:	4690      	mov	r8, r2
    4b2e:	4699      	mov	r9, r3
    4b30:	46a2      	mov	sl, r4
    4b32:	46ab      	mov	fp, r5
    4b34:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4b36:	2800      	cmp	r0, #0
    4b38:	d0f2      	beq.n	4b20 <__gedf2+0x60>
    4b3a:	2001      	movs	r0, #1
    4b3c:	3b01      	subs	r3, #1
    4b3e:	4318      	orrs	r0, r3
    4b40:	e7f3      	b.n	4b2a <__gedf2+0x6a>
    4b42:	0037      	movs	r7, r6
    4b44:	4307      	orrs	r7, r0
    4b46:	d0d1      	beq.n	4aec <__gedf2+0x2c>
    4b48:	2002      	movs	r0, #2
    4b4a:	4240      	negs	r0, r0
    4b4c:	e7ed      	b.n	4b2a <__gedf2+0x6a>
    4b4e:	465f      	mov	r7, fp
    4b50:	4317      	orrs	r7, r2
    4b52:	d0ce      	beq.n	4af2 <__gedf2+0x32>
    4b54:	e7f8      	b.n	4b48 <__gedf2+0x88>
    4b56:	42ac      	cmp	r4, r5
    4b58:	dce4      	bgt.n	4b24 <__gedf2+0x64>
    4b5a:	da03      	bge.n	4b64 <__gedf2+0xa4>
    4b5c:	1e48      	subs	r0, r1, #1
    4b5e:	2101      	movs	r1, #1
    4b60:	4308      	orrs	r0, r1
    4b62:	e7e2      	b.n	4b2a <__gedf2+0x6a>
    4b64:	455e      	cmp	r6, fp
    4b66:	d8dd      	bhi.n	4b24 <__gedf2+0x64>
    4b68:	d006      	beq.n	4b78 <__gedf2+0xb8>
    4b6a:	2000      	movs	r0, #0
    4b6c:	455e      	cmp	r6, fp
    4b6e:	d2dc      	bcs.n	4b2a <__gedf2+0x6a>
    4b70:	2301      	movs	r3, #1
    4b72:	1e48      	subs	r0, r1, #1
    4b74:	4318      	orrs	r0, r3
    4b76:	e7d8      	b.n	4b2a <__gedf2+0x6a>
    4b78:	45c4      	cmp	ip, r8
    4b7a:	d8d3      	bhi.n	4b24 <__gedf2+0x64>
    4b7c:	2000      	movs	r0, #0
    4b7e:	45c4      	cmp	ip, r8
    4b80:	d3f6      	bcc.n	4b70 <__gedf2+0xb0>
    4b82:	e7d2      	b.n	4b2a <__gedf2+0x6a>
    4b84:	000007ff 	.word	0x000007ff

00004b88 <__ledf2>:
    4b88:	b5f0      	push	{r4, r5, r6, r7, lr}
    4b8a:	464e      	mov	r6, r9
    4b8c:	4645      	mov	r5, r8
    4b8e:	46de      	mov	lr, fp
    4b90:	4657      	mov	r7, sl
    4b92:	005c      	lsls	r4, r3, #1
    4b94:	b5e0      	push	{r5, r6, r7, lr}
    4b96:	031f      	lsls	r7, r3, #12
    4b98:	0fdb      	lsrs	r3, r3, #31
    4b9a:	4699      	mov	r9, r3
    4b9c:	4b2a      	ldr	r3, [pc, #168]	; (4c48 <__ledf2+0xc0>)
    4b9e:	030e      	lsls	r6, r1, #12
    4ba0:	004d      	lsls	r5, r1, #1
    4ba2:	0fc9      	lsrs	r1, r1, #31
    4ba4:	4684      	mov	ip, r0
    4ba6:	0b36      	lsrs	r6, r6, #12
    4ba8:	0d6d      	lsrs	r5, r5, #21
    4baa:	468b      	mov	fp, r1
    4bac:	4690      	mov	r8, r2
    4bae:	0b3f      	lsrs	r7, r7, #12
    4bb0:	0d64      	lsrs	r4, r4, #21
    4bb2:	429d      	cmp	r5, r3
    4bb4:	d020      	beq.n	4bf8 <__ledf2+0x70>
    4bb6:	4b24      	ldr	r3, [pc, #144]	; (4c48 <__ledf2+0xc0>)
    4bb8:	429c      	cmp	r4, r3
    4bba:	d022      	beq.n	4c02 <__ledf2+0x7a>
    4bbc:	2d00      	cmp	r5, #0
    4bbe:	d112      	bne.n	4be6 <__ledf2+0x5e>
    4bc0:	4330      	orrs	r0, r6
    4bc2:	4243      	negs	r3, r0
    4bc4:	4143      	adcs	r3, r0
    4bc6:	b2db      	uxtb	r3, r3
    4bc8:	2c00      	cmp	r4, #0
    4bca:	d01f      	beq.n	4c0c <__ledf2+0x84>
    4bcc:	2b00      	cmp	r3, #0
    4bce:	d00c      	beq.n	4bea <__ledf2+0x62>
    4bd0:	464b      	mov	r3, r9
    4bd2:	2001      	movs	r0, #1
    4bd4:	3b01      	subs	r3, #1
    4bd6:	4303      	orrs	r3, r0
    4bd8:	0018      	movs	r0, r3
    4bda:	bc3c      	pop	{r2, r3, r4, r5}
    4bdc:	4690      	mov	r8, r2
    4bde:	4699      	mov	r9, r3
    4be0:	46a2      	mov	sl, r4
    4be2:	46ab      	mov	fp, r5
    4be4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4be6:	2c00      	cmp	r4, #0
    4be8:	d016      	beq.n	4c18 <__ledf2+0x90>
    4bea:	45cb      	cmp	fp, r9
    4bec:	d017      	beq.n	4c1e <__ledf2+0x96>
    4bee:	465b      	mov	r3, fp
    4bf0:	4259      	negs	r1, r3
    4bf2:	2301      	movs	r3, #1
    4bf4:	430b      	orrs	r3, r1
    4bf6:	e7ef      	b.n	4bd8 <__ledf2+0x50>
    4bf8:	0031      	movs	r1, r6
    4bfa:	2302      	movs	r3, #2
    4bfc:	4301      	orrs	r1, r0
    4bfe:	d1eb      	bne.n	4bd8 <__ledf2+0x50>
    4c00:	e7d9      	b.n	4bb6 <__ledf2+0x2e>
    4c02:	0039      	movs	r1, r7
    4c04:	2302      	movs	r3, #2
    4c06:	4311      	orrs	r1, r2
    4c08:	d1e6      	bne.n	4bd8 <__ledf2+0x50>
    4c0a:	e7d7      	b.n	4bbc <__ledf2+0x34>
    4c0c:	433a      	orrs	r2, r7
    4c0e:	d1dd      	bne.n	4bcc <__ledf2+0x44>
    4c10:	2300      	movs	r3, #0
    4c12:	2800      	cmp	r0, #0
    4c14:	d0e0      	beq.n	4bd8 <__ledf2+0x50>
    4c16:	e7ea      	b.n	4bee <__ledf2+0x66>
    4c18:	433a      	orrs	r2, r7
    4c1a:	d1e6      	bne.n	4bea <__ledf2+0x62>
    4c1c:	e7e7      	b.n	4bee <__ledf2+0x66>
    4c1e:	42a5      	cmp	r5, r4
    4c20:	dce5      	bgt.n	4bee <__ledf2+0x66>
    4c22:	db05      	blt.n	4c30 <__ledf2+0xa8>
    4c24:	42be      	cmp	r6, r7
    4c26:	d8e2      	bhi.n	4bee <__ledf2+0x66>
    4c28:	d007      	beq.n	4c3a <__ledf2+0xb2>
    4c2a:	2300      	movs	r3, #0
    4c2c:	42be      	cmp	r6, r7
    4c2e:	d2d3      	bcs.n	4bd8 <__ledf2+0x50>
    4c30:	4659      	mov	r1, fp
    4c32:	2301      	movs	r3, #1
    4c34:	3901      	subs	r1, #1
    4c36:	430b      	orrs	r3, r1
    4c38:	e7ce      	b.n	4bd8 <__ledf2+0x50>
    4c3a:	45c4      	cmp	ip, r8
    4c3c:	d8d7      	bhi.n	4bee <__ledf2+0x66>
    4c3e:	2300      	movs	r3, #0
    4c40:	45c4      	cmp	ip, r8
    4c42:	d3f5      	bcc.n	4c30 <__ledf2+0xa8>
    4c44:	e7c8      	b.n	4bd8 <__ledf2+0x50>
    4c46:	46c0      	nop			; (mov r8, r8)
    4c48:	000007ff 	.word	0x000007ff

00004c4c <__libc_init_array>:
    4c4c:	b570      	push	{r4, r5, r6, lr}
    4c4e:	4e0d      	ldr	r6, [pc, #52]	; (4c84 <__libc_init_array+0x38>)
    4c50:	4d0d      	ldr	r5, [pc, #52]	; (4c88 <__libc_init_array+0x3c>)
    4c52:	2400      	movs	r4, #0
    4c54:	1bad      	subs	r5, r5, r6
    4c56:	10ad      	asrs	r5, r5, #2
    4c58:	d005      	beq.n	4c66 <__libc_init_array+0x1a>
    4c5a:	00a3      	lsls	r3, r4, #2
    4c5c:	58f3      	ldr	r3, [r6, r3]
    4c5e:	3401      	adds	r4, #1
    4c60:	4798      	blx	r3
    4c62:	42a5      	cmp	r5, r4
    4c64:	d1f9      	bne.n	4c5a <__libc_init_array+0xe>
    4c66:	f005 ff11 	bl	aa8c <_init>
    4c6a:	4e08      	ldr	r6, [pc, #32]	; (4c8c <__libc_init_array+0x40>)
    4c6c:	4d08      	ldr	r5, [pc, #32]	; (4c90 <__libc_init_array+0x44>)
    4c6e:	2400      	movs	r4, #0
    4c70:	1bad      	subs	r5, r5, r6
    4c72:	10ad      	asrs	r5, r5, #2
    4c74:	d005      	beq.n	4c82 <__libc_init_array+0x36>
    4c76:	00a3      	lsls	r3, r4, #2
    4c78:	58f3      	ldr	r3, [r6, r3]
    4c7a:	3401      	adds	r4, #1
    4c7c:	4798      	blx	r3
    4c7e:	42a5      	cmp	r5, r4
    4c80:	d1f9      	bne.n	4c76 <__libc_init_array+0x2a>
    4c82:	bd70      	pop	{r4, r5, r6, pc}
    4c84:	0000aa98 	.word	0x0000aa98
    4c88:	0000aa98 	.word	0x0000aa98
    4c8c:	0000aa98 	.word	0x0000aa98
    4c90:	0000aaa0 	.word	0x0000aaa0

00004c94 <memset>:
    4c94:	b5f0      	push	{r4, r5, r6, r7, lr}
    4c96:	0783      	lsls	r3, r0, #30
    4c98:	d043      	beq.n	4d22 <memset+0x8e>
    4c9a:	1e54      	subs	r4, r2, #1
    4c9c:	2a00      	cmp	r2, #0
    4c9e:	d03f      	beq.n	4d20 <memset+0x8c>
    4ca0:	b2ce      	uxtb	r6, r1
    4ca2:	0002      	movs	r2, r0
    4ca4:	2503      	movs	r5, #3
    4ca6:	e002      	b.n	4cae <memset+0x1a>
    4ca8:	001a      	movs	r2, r3
    4caa:	3c01      	subs	r4, #1
    4cac:	d338      	bcc.n	4d20 <memset+0x8c>
    4cae:	1c53      	adds	r3, r2, #1
    4cb0:	7016      	strb	r6, [r2, #0]
    4cb2:	422b      	tst	r3, r5
    4cb4:	d1f8      	bne.n	4ca8 <memset+0x14>
    4cb6:	2c03      	cmp	r4, #3
    4cb8:	d92a      	bls.n	4d10 <memset+0x7c>
    4cba:	22ff      	movs	r2, #255	; 0xff
    4cbc:	400a      	ands	r2, r1
    4cbe:	0215      	lsls	r5, r2, #8
    4cc0:	4315      	orrs	r5, r2
    4cc2:	042a      	lsls	r2, r5, #16
    4cc4:	4315      	orrs	r5, r2
    4cc6:	2c0f      	cmp	r4, #15
    4cc8:	d914      	bls.n	4cf4 <memset+0x60>
    4cca:	0027      	movs	r7, r4
    4ccc:	001a      	movs	r2, r3
    4cce:	3f10      	subs	r7, #16
    4cd0:	093e      	lsrs	r6, r7, #4
    4cd2:	3601      	adds	r6, #1
    4cd4:	0136      	lsls	r6, r6, #4
    4cd6:	199e      	adds	r6, r3, r6
    4cd8:	6015      	str	r5, [r2, #0]
    4cda:	6055      	str	r5, [r2, #4]
    4cdc:	6095      	str	r5, [r2, #8]
    4cde:	60d5      	str	r5, [r2, #12]
    4ce0:	3210      	adds	r2, #16
    4ce2:	4296      	cmp	r6, r2
    4ce4:	d1f8      	bne.n	4cd8 <memset+0x44>
    4ce6:	220f      	movs	r2, #15
    4ce8:	4397      	bics	r7, r2
    4cea:	3710      	adds	r7, #16
    4cec:	19db      	adds	r3, r3, r7
    4cee:	4014      	ands	r4, r2
    4cf0:	2c03      	cmp	r4, #3
    4cf2:	d90d      	bls.n	4d10 <memset+0x7c>
    4cf4:	001a      	movs	r2, r3
    4cf6:	1f27      	subs	r7, r4, #4
    4cf8:	08be      	lsrs	r6, r7, #2
    4cfa:	3601      	adds	r6, #1
    4cfc:	00b6      	lsls	r6, r6, #2
    4cfe:	199e      	adds	r6, r3, r6
    4d00:	c220      	stmia	r2!, {r5}
    4d02:	42b2      	cmp	r2, r6
    4d04:	d1fc      	bne.n	4d00 <memset+0x6c>
    4d06:	2203      	movs	r2, #3
    4d08:	4397      	bics	r7, r2
    4d0a:	3704      	adds	r7, #4
    4d0c:	19db      	adds	r3, r3, r7
    4d0e:	4014      	ands	r4, r2
    4d10:	2c00      	cmp	r4, #0
    4d12:	d005      	beq.n	4d20 <memset+0x8c>
    4d14:	b2c9      	uxtb	r1, r1
    4d16:	191c      	adds	r4, r3, r4
    4d18:	7019      	strb	r1, [r3, #0]
    4d1a:	3301      	adds	r3, #1
    4d1c:	429c      	cmp	r4, r3
    4d1e:	d1fb      	bne.n	4d18 <memset+0x84>
    4d20:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4d22:	0014      	movs	r4, r2
    4d24:	0003      	movs	r3, r0
    4d26:	e7c6      	b.n	4cb6 <memset+0x22>

00004d28 <sprintf>:
    4d28:	b40e      	push	{r1, r2, r3}
    4d2a:	b510      	push	{r4, lr}
    4d2c:	b09d      	sub	sp, #116	; 0x74
    4d2e:	a902      	add	r1, sp, #8
    4d30:	9002      	str	r0, [sp, #8]
    4d32:	6108      	str	r0, [r1, #16]
    4d34:	480b      	ldr	r0, [pc, #44]	; (4d64 <sprintf+0x3c>)
    4d36:	2482      	movs	r4, #130	; 0x82
    4d38:	6088      	str	r0, [r1, #8]
    4d3a:	6148      	str	r0, [r1, #20]
    4d3c:	2001      	movs	r0, #1
    4d3e:	4240      	negs	r0, r0
    4d40:	ab1f      	add	r3, sp, #124	; 0x7c
    4d42:	81c8      	strh	r0, [r1, #14]
    4d44:	4808      	ldr	r0, [pc, #32]	; (4d68 <sprintf+0x40>)
    4d46:	cb04      	ldmia	r3!, {r2}
    4d48:	00a4      	lsls	r4, r4, #2
    4d4a:	6800      	ldr	r0, [r0, #0]
    4d4c:	9301      	str	r3, [sp, #4]
    4d4e:	818c      	strh	r4, [r1, #12]
    4d50:	f000 f80c 	bl	4d6c <_svfprintf_r>
    4d54:	2300      	movs	r3, #0
    4d56:	9a02      	ldr	r2, [sp, #8]
    4d58:	7013      	strb	r3, [r2, #0]
    4d5a:	b01d      	add	sp, #116	; 0x74
    4d5c:	bc10      	pop	{r4}
    4d5e:	bc08      	pop	{r3}
    4d60:	b003      	add	sp, #12
    4d62:	4718      	bx	r3
    4d64:	7fffffff 	.word	0x7fffffff
    4d68:	20000058 	.word	0x20000058

00004d6c <_svfprintf_r>:
    4d6c:	b5f0      	push	{r4, r5, r6, r7, lr}
    4d6e:	46de      	mov	lr, fp
    4d70:	4645      	mov	r5, r8
    4d72:	4657      	mov	r7, sl
    4d74:	464e      	mov	r6, r9
    4d76:	b5e0      	push	{r5, r6, r7, lr}
    4d78:	b0c3      	sub	sp, #268	; 0x10c
    4d7a:	000d      	movs	r5, r1
    4d7c:	9106      	str	r1, [sp, #24]
    4d7e:	0014      	movs	r4, r2
    4d80:	930f      	str	r3, [sp, #60]	; 0x3c
    4d82:	9009      	str	r0, [sp, #36]	; 0x24
    4d84:	f002 fcc0 	bl	7708 <_localeconv_r>
    4d88:	6803      	ldr	r3, [r0, #0]
    4d8a:	0018      	movs	r0, r3
    4d8c:	9319      	str	r3, [sp, #100]	; 0x64
    4d8e:	f003 fb6d 	bl	846c <strlen>
    4d92:	9018      	str	r0, [sp, #96]	; 0x60
    4d94:	89ab      	ldrh	r3, [r5, #12]
    4d96:	061b      	lsls	r3, r3, #24
    4d98:	d505      	bpl.n	4da6 <_svfprintf_r+0x3a>
    4d9a:	692b      	ldr	r3, [r5, #16]
    4d9c:	9307      	str	r3, [sp, #28]
    4d9e:	2b00      	cmp	r3, #0
    4da0:	d101      	bne.n	4da6 <_svfprintf_r+0x3a>
    4da2:	f001 f863 	bl	5e6c <_svfprintf_r+0x1100>
    4da6:	ab32      	add	r3, sp, #200	; 0xc8
    4da8:	9325      	str	r3, [sp, #148]	; 0x94
    4daa:	2300      	movs	r3, #0
    4dac:	46a3      	mov	fp, r4
    4dae:	af25      	add	r7, sp, #148	; 0x94
    4db0:	60bb      	str	r3, [r7, #8]
    4db2:	607b      	str	r3, [r7, #4]
    4db4:	9314      	str	r3, [sp, #80]	; 0x50
    4db6:	9316      	str	r3, [sp, #88]	; 0x58
    4db8:	9315      	str	r3, [sp, #84]	; 0x54
    4dba:	ae32      	add	r6, sp, #200	; 0xc8
    4dbc:	9317      	str	r3, [sp, #92]	; 0x5c
    4dbe:	931a      	str	r3, [sp, #104]	; 0x68
    4dc0:	930a      	str	r3, [sp, #40]	; 0x28
    4dc2:	465b      	mov	r3, fp
    4dc4:	781b      	ldrb	r3, [r3, #0]
    4dc6:	465c      	mov	r4, fp
    4dc8:	2b00      	cmp	r3, #0
    4dca:	d01c      	beq.n	4e06 <_svfprintf_r+0x9a>
    4dcc:	2b25      	cmp	r3, #37	; 0x25
    4dce:	d102      	bne.n	4dd6 <_svfprintf_r+0x6a>
    4dd0:	e019      	b.n	4e06 <_svfprintf_r+0x9a>
    4dd2:	2b25      	cmp	r3, #37	; 0x25
    4dd4:	d003      	beq.n	4dde <_svfprintf_r+0x72>
    4dd6:	3401      	adds	r4, #1
    4dd8:	7823      	ldrb	r3, [r4, #0]
    4dda:	2b00      	cmp	r3, #0
    4ddc:	d1f9      	bne.n	4dd2 <_svfprintf_r+0x66>
    4dde:	465b      	mov	r3, fp
    4de0:	1ae5      	subs	r5, r4, r3
    4de2:	d010      	beq.n	4e06 <_svfprintf_r+0x9a>
    4de4:	465b      	mov	r3, fp
    4de6:	6033      	str	r3, [r6, #0]
    4de8:	68bb      	ldr	r3, [r7, #8]
    4dea:	6075      	str	r5, [r6, #4]
    4dec:	195b      	adds	r3, r3, r5
    4dee:	60bb      	str	r3, [r7, #8]
    4df0:	687b      	ldr	r3, [r7, #4]
    4df2:	3301      	adds	r3, #1
    4df4:	607b      	str	r3, [r7, #4]
    4df6:	2b07      	cmp	r3, #7
    4df8:	dc2e      	bgt.n	4e58 <_svfprintf_r+0xec>
    4dfa:	3608      	adds	r6, #8
    4dfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4dfe:	469c      	mov	ip, r3
    4e00:	44ac      	add	ip, r5
    4e02:	4663      	mov	r3, ip
    4e04:	930a      	str	r3, [sp, #40]	; 0x28
    4e06:	7823      	ldrb	r3, [r4, #0]
    4e08:	2b00      	cmp	r3, #0
    4e0a:	d02e      	beq.n	4e6a <_svfprintf_r+0xfe>
    4e0c:	1c63      	adds	r3, r4, #1
    4e0e:	469b      	mov	fp, r3
    4e10:	2300      	movs	r3, #0
    4e12:	aa16      	add	r2, sp, #88	; 0x58
    4e14:	77d3      	strb	r3, [r2, #31]
    4e16:	2201      	movs	r2, #1
    4e18:	4252      	negs	r2, r2
    4e1a:	4692      	mov	sl, r2
    4e1c:	2200      	movs	r2, #0
    4e1e:	2100      	movs	r1, #0
    4e20:	920b      	str	r2, [sp, #44]	; 0x2c
    4e22:	3220      	adds	r2, #32
    4e24:	4691      	mov	r9, r2
    4e26:	3220      	adds	r2, #32
    4e28:	7863      	ldrb	r3, [r4, #1]
    4e2a:	4688      	mov	r8, r1
    4e2c:	2000      	movs	r0, #0
    4e2e:	2400      	movs	r4, #0
    4e30:	4694      	mov	ip, r2
    4e32:	4659      	mov	r1, fp
    4e34:	3101      	adds	r1, #1
    4e36:	001a      	movs	r2, r3
    4e38:	3a20      	subs	r2, #32
    4e3a:	2a58      	cmp	r2, #88	; 0x58
    4e3c:	d900      	bls.n	4e40 <_svfprintf_r+0xd4>
    4e3e:	e2fd      	b.n	543c <_svfprintf_r+0x6d0>
    4e40:	4dd7      	ldr	r5, [pc, #860]	; (51a0 <_svfprintf_r+0x434>)
    4e42:	0092      	lsls	r2, r2, #2
    4e44:	58aa      	ldr	r2, [r5, r2]
    4e46:	4697      	mov	pc, r2
    4e48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4e4a:	920f      	str	r2, [sp, #60]	; 0x3c
    4e4c:	425b      	negs	r3, r3
    4e4e:	930b      	str	r3, [sp, #44]	; 0x2c
    4e50:	2304      	movs	r3, #4
    4e52:	431c      	orrs	r4, r3
    4e54:	780b      	ldrb	r3, [r1, #0]
    4e56:	e7ed      	b.n	4e34 <_svfprintf_r+0xc8>
    4e58:	003a      	movs	r2, r7
    4e5a:	9906      	ldr	r1, [sp, #24]
    4e5c:	9809      	ldr	r0, [sp, #36]	; 0x24
    4e5e:	f003 fb37 	bl	84d0 <__ssprint_r>
    4e62:	2800      	cmp	r0, #0
    4e64:	d109      	bne.n	4e7a <_svfprintf_r+0x10e>
    4e66:	ae32      	add	r6, sp, #200	; 0xc8
    4e68:	e7c8      	b.n	4dfc <_svfprintf_r+0x90>
    4e6a:	68bb      	ldr	r3, [r7, #8]
    4e6c:	2b00      	cmp	r3, #0
    4e6e:	d004      	beq.n	4e7a <_svfprintf_r+0x10e>
    4e70:	003a      	movs	r2, r7
    4e72:	9906      	ldr	r1, [sp, #24]
    4e74:	9809      	ldr	r0, [sp, #36]	; 0x24
    4e76:	f003 fb2b 	bl	84d0 <__ssprint_r>
    4e7a:	9b06      	ldr	r3, [sp, #24]
    4e7c:	899b      	ldrh	r3, [r3, #12]
    4e7e:	065b      	lsls	r3, r3, #25
    4e80:	d501      	bpl.n	4e86 <_svfprintf_r+0x11a>
    4e82:	f001 f8ce 	bl	6022 <_svfprintf_r+0x12b6>
    4e86:	980a      	ldr	r0, [sp, #40]	; 0x28
    4e88:	b043      	add	sp, #268	; 0x10c
    4e8a:	bc3c      	pop	{r2, r3, r4, r5}
    4e8c:	4690      	mov	r8, r2
    4e8e:	4699      	mov	r9, r3
    4e90:	46a2      	mov	sl, r4
    4e92:	46ab      	mov	fp, r5
    4e94:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4e96:	2201      	movs	r2, #1
    4e98:	780b      	ldrb	r3, [r1, #0]
    4e9a:	4690      	mov	r8, r2
    4e9c:	202b      	movs	r0, #43	; 0x2b
    4e9e:	e7c9      	b.n	4e34 <_svfprintf_r+0xc8>
    4ea0:	1c4b      	adds	r3, r1, #1
    4ea2:	469b      	mov	fp, r3
    4ea4:	780b      	ldrb	r3, [r1, #0]
    4ea6:	2b2a      	cmp	r3, #42	; 0x2a
    4ea8:	d101      	bne.n	4eae <_svfprintf_r+0x142>
    4eaa:	f001 fa1b 	bl	62e4 <_svfprintf_r+0x1578>
    4eae:	001a      	movs	r2, r3
    4eb0:	2100      	movs	r1, #0
    4eb2:	3a30      	subs	r2, #48	; 0x30
    4eb4:	468a      	mov	sl, r1
    4eb6:	4659      	mov	r1, fp
    4eb8:	2a09      	cmp	r2, #9
    4eba:	d8bc      	bhi.n	4e36 <_svfprintf_r+0xca>
    4ebc:	0003      	movs	r3, r0
    4ebe:	0011      	movs	r1, r2
    4ec0:	4650      	mov	r0, sl
    4ec2:	465a      	mov	r2, fp
    4ec4:	469a      	mov	sl, r3
    4ec6:	46a3      	mov	fp, r4
    4ec8:	0083      	lsls	r3, r0, #2
    4eca:	181b      	adds	r3, r3, r0
    4ecc:	7814      	ldrb	r4, [r2, #0]
    4ece:	005b      	lsls	r3, r3, #1
    4ed0:	1858      	adds	r0, r3, r1
    4ed2:	0021      	movs	r1, r4
    4ed4:	1c53      	adds	r3, r2, #1
    4ed6:	3930      	subs	r1, #48	; 0x30
    4ed8:	001a      	movs	r2, r3
    4eda:	2909      	cmp	r1, #9
    4edc:	d9f4      	bls.n	4ec8 <_svfprintf_r+0x15c>
    4ede:	4652      	mov	r2, sl
    4ee0:	0019      	movs	r1, r3
    4ee2:	4682      	mov	sl, r0
    4ee4:	0023      	movs	r3, r4
    4ee6:	0010      	movs	r0, r2
    4ee8:	465c      	mov	r4, fp
    4eea:	e7a4      	b.n	4e36 <_svfprintf_r+0xca>
    4eec:	2380      	movs	r3, #128	; 0x80
    4eee:	431c      	orrs	r4, r3
    4ef0:	780b      	ldrb	r3, [r1, #0]
    4ef2:	e79f      	b.n	4e34 <_svfprintf_r+0xc8>
    4ef4:	468b      	mov	fp, r1
    4ef6:	4641      	mov	r1, r8
    4ef8:	9312      	str	r3, [sp, #72]	; 0x48
    4efa:	2900      	cmp	r1, #0
    4efc:	d001      	beq.n	4f02 <_svfprintf_r+0x196>
    4efe:	f001 fa1f 	bl	6340 <_svfprintf_r+0x15d4>
    4f02:	2310      	movs	r3, #16
    4f04:	431c      	orrs	r4, r3
    4f06:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    4f08:	06a3      	lsls	r3, r4, #26
    4f0a:	d501      	bpl.n	4f10 <_svfprintf_r+0x1a4>
    4f0c:	f000 fe88 	bl	5c20 <_svfprintf_r+0xeb4>
    4f10:	06e3      	lsls	r3, r4, #27
    4f12:	d501      	bpl.n	4f18 <_svfprintf_r+0x1ac>
    4f14:	f000 fd80 	bl	5a18 <_svfprintf_r+0xcac>
    4f18:	0663      	lsls	r3, r4, #25
    4f1a:	d401      	bmi.n	4f20 <_svfprintf_r+0x1b4>
    4f1c:	f000 fd7c 	bl	5a18 <_svfprintf_r+0xcac>
    4f20:	2100      	movs	r1, #0
    4f22:	5e53      	ldrsh	r3, [r2, r1]
    4f24:	930c      	str	r3, [sp, #48]	; 0x30
    4f26:	3204      	adds	r2, #4
    4f28:	17db      	asrs	r3, r3, #31
    4f2a:	930d      	str	r3, [sp, #52]	; 0x34
    4f2c:	920f      	str	r2, [sp, #60]	; 0x3c
    4f2e:	d501      	bpl.n	4f34 <_svfprintf_r+0x1c8>
    4f30:	f000 fe86 	bl	5c40 <_svfprintf_r+0xed4>
    4f34:	990c      	ldr	r1, [sp, #48]	; 0x30
    4f36:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    4f38:	0008      	movs	r0, r1
    4f3a:	ab16      	add	r3, sp, #88	; 0x58
    4f3c:	7fdb      	ldrb	r3, [r3, #31]
    4f3e:	4310      	orrs	r0, r2
    4f40:	4698      	mov	r8, r3
    4f42:	0002      	movs	r2, r0
    4f44:	2301      	movs	r3, #1
    4f46:	4651      	mov	r1, sl
    4f48:	3101      	adds	r1, #1
    4f4a:	d100      	bne.n	4f4e <_svfprintf_r+0x1e2>
    4f4c:	e0ff      	b.n	514e <_svfprintf_r+0x3e2>
    4f4e:	2180      	movs	r1, #128	; 0x80
    4f50:	0020      	movs	r0, r4
    4f52:	4388      	bics	r0, r1
    4f54:	9008      	str	r0, [sp, #32]
    4f56:	2a00      	cmp	r2, #0
    4f58:	d000      	beq.n	4f5c <_svfprintf_r+0x1f0>
    4f5a:	e0fc      	b.n	5156 <_svfprintf_r+0x3ea>
    4f5c:	4652      	mov	r2, sl
    4f5e:	2a00      	cmp	r2, #0
    4f60:	d001      	beq.n	4f66 <_svfprintf_r+0x1fa>
    4f62:	f000 fc2c 	bl	57be <_svfprintf_r+0xa52>
    4f66:	2b00      	cmp	r3, #0
    4f68:	d001      	beq.n	4f6e <_svfprintf_r+0x202>
    4f6a:	f000 fd04 	bl	5976 <_svfprintf_r+0xc0a>
    4f6e:	2001      	movs	r0, #1
    4f70:	ab32      	add	r3, sp, #200	; 0xc8
    4f72:	4020      	ands	r0, r4
    4f74:	900e      	str	r0, [sp, #56]	; 0x38
    4f76:	9311      	str	r3, [sp, #68]	; 0x44
    4f78:	d008      	beq.n	4f8c <_svfprintf_r+0x220>
    4f7a:	2327      	movs	r3, #39	; 0x27
    4f7c:	2130      	movs	r1, #48	; 0x30
    4f7e:	aa28      	add	r2, sp, #160	; 0xa0
    4f80:	54d1      	strb	r1, [r2, r3]
    4f82:	aa16      	add	r2, sp, #88	; 0x58
    4f84:	4694      	mov	ip, r2
    4f86:	3348      	adds	r3, #72	; 0x48
    4f88:	4463      	add	r3, ip
    4f8a:	9311      	str	r3, [sp, #68]	; 0x44
    4f8c:	4653      	mov	r3, sl
    4f8e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    4f90:	9307      	str	r3, [sp, #28]
    4f92:	4592      	cmp	sl, r2
    4f94:	da00      	bge.n	4f98 <_svfprintf_r+0x22c>
    4f96:	9207      	str	r2, [sp, #28]
    4f98:	2300      	movs	r3, #0
    4f9a:	9313      	str	r3, [sp, #76]	; 0x4c
    4f9c:	4643      	mov	r3, r8
    4f9e:	2b00      	cmp	r3, #0
    4fa0:	d002      	beq.n	4fa8 <_svfprintf_r+0x23c>
    4fa2:	9b07      	ldr	r3, [sp, #28]
    4fa4:	3301      	adds	r3, #1
    4fa6:	9307      	str	r3, [sp, #28]
    4fa8:	2302      	movs	r3, #2
    4faa:	9a08      	ldr	r2, [sp, #32]
    4fac:	401a      	ands	r2, r3
    4fae:	4691      	mov	r9, r2
    4fb0:	d002      	beq.n	4fb8 <_svfprintf_r+0x24c>
    4fb2:	9b07      	ldr	r3, [sp, #28]
    4fb4:	3302      	adds	r3, #2
    4fb6:	9307      	str	r3, [sp, #28]
    4fb8:	2384      	movs	r3, #132	; 0x84
    4fba:	9a08      	ldr	r2, [sp, #32]
    4fbc:	401a      	ands	r2, r3
    4fbe:	9210      	str	r2, [sp, #64]	; 0x40
    4fc0:	d000      	beq.n	4fc4 <_svfprintf_r+0x258>
    4fc2:	e24d      	b.n	5460 <_svfprintf_r+0x6f4>
    4fc4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4fc6:	9a07      	ldr	r2, [sp, #28]
    4fc8:	1a9c      	subs	r4, r3, r2
    4fca:	2c00      	cmp	r4, #0
    4fcc:	dc00      	bgt.n	4fd0 <_svfprintf_r+0x264>
    4fce:	e247      	b.n	5460 <_svfprintf_r+0x6f4>
    4fd0:	4974      	ldr	r1, [pc, #464]	; (51a4 <_svfprintf_r+0x438>)
    4fd2:	68ba      	ldr	r2, [r7, #8]
    4fd4:	687b      	ldr	r3, [r7, #4]
    4fd6:	4688      	mov	r8, r1
    4fd8:	2c10      	cmp	r4, #16
    4fda:	dd1f      	ble.n	501c <_svfprintf_r+0x2b0>
    4fdc:	0031      	movs	r1, r6
    4fde:	2510      	movs	r5, #16
    4fe0:	4646      	mov	r6, r8
    4fe2:	e003      	b.n	4fec <_svfprintf_r+0x280>
    4fe4:	3c10      	subs	r4, #16
    4fe6:	3108      	adds	r1, #8
    4fe8:	2c10      	cmp	r4, #16
    4fea:	dd15      	ble.n	5018 <_svfprintf_r+0x2ac>
    4fec:	3210      	adds	r2, #16
    4fee:	3301      	adds	r3, #1
    4ff0:	600e      	str	r6, [r1, #0]
    4ff2:	604d      	str	r5, [r1, #4]
    4ff4:	60ba      	str	r2, [r7, #8]
    4ff6:	607b      	str	r3, [r7, #4]
    4ff8:	2b07      	cmp	r3, #7
    4ffa:	ddf3      	ble.n	4fe4 <_svfprintf_r+0x278>
    4ffc:	003a      	movs	r2, r7
    4ffe:	9906      	ldr	r1, [sp, #24]
    5000:	9809      	ldr	r0, [sp, #36]	; 0x24
    5002:	f003 fa65 	bl	84d0 <__ssprint_r>
    5006:	2800      	cmp	r0, #0
    5008:	d000      	beq.n	500c <_svfprintf_r+0x2a0>
    500a:	e736      	b.n	4e7a <_svfprintf_r+0x10e>
    500c:	3c10      	subs	r4, #16
    500e:	68ba      	ldr	r2, [r7, #8]
    5010:	687b      	ldr	r3, [r7, #4]
    5012:	a932      	add	r1, sp, #200	; 0xc8
    5014:	2c10      	cmp	r4, #16
    5016:	dce9      	bgt.n	4fec <_svfprintf_r+0x280>
    5018:	46b0      	mov	r8, r6
    501a:	000e      	movs	r6, r1
    501c:	4641      	mov	r1, r8
    501e:	6074      	str	r4, [r6, #4]
    5020:	3301      	adds	r3, #1
    5022:	18a4      	adds	r4, r4, r2
    5024:	6031      	str	r1, [r6, #0]
    5026:	60bc      	str	r4, [r7, #8]
    5028:	607b      	str	r3, [r7, #4]
    502a:	2b07      	cmp	r3, #7
    502c:	dd01      	ble.n	5032 <_svfprintf_r+0x2c6>
    502e:	f000 fca8 	bl	5982 <_svfprintf_r+0xc16>
    5032:	ab16      	add	r3, sp, #88	; 0x58
    5034:	7fdb      	ldrb	r3, [r3, #31]
    5036:	3608      	adds	r6, #8
    5038:	4698      	mov	r8, r3
    503a:	e212      	b.n	5462 <_svfprintf_r+0x6f6>
    503c:	468b      	mov	fp, r1
    503e:	4641      	mov	r1, r8
    5040:	9312      	str	r3, [sp, #72]	; 0x48
    5042:	2900      	cmp	r1, #0
    5044:	d001      	beq.n	504a <_svfprintf_r+0x2de>
    5046:	f001 f977 	bl	6338 <_svfprintf_r+0x15cc>
    504a:	2207      	movs	r2, #7
    504c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    504e:	3307      	adds	r3, #7
    5050:	4393      	bics	r3, r2
    5052:	3201      	adds	r2, #1
    5054:	4694      	mov	ip, r2
    5056:	449c      	add	ip, r3
    5058:	4662      	mov	r2, ip
    505a:	920f      	str	r2, [sp, #60]	; 0x3c
    505c:	681a      	ldr	r2, [r3, #0]
    505e:	9216      	str	r2, [sp, #88]	; 0x58
    5060:	685b      	ldr	r3, [r3, #4]
    5062:	2201      	movs	r2, #1
    5064:	9315      	str	r3, [sp, #84]	; 0x54
    5066:	9b15      	ldr	r3, [sp, #84]	; 0x54
    5068:	9d16      	ldr	r5, [sp, #88]	; 0x58
    506a:	005b      	lsls	r3, r3, #1
    506c:	085b      	lsrs	r3, r3, #1
    506e:	4698      	mov	r8, r3
    5070:	4252      	negs	r2, r2
    5072:	4b4d      	ldr	r3, [pc, #308]	; (51a8 <_svfprintf_r+0x43c>)
    5074:	0028      	movs	r0, r5
    5076:	4641      	mov	r1, r8
    5078:	f004 f8a2 	bl	91c0 <__aeabi_dcmpun>
    507c:	2800      	cmp	r0, #0
    507e:	d001      	beq.n	5084 <_svfprintf_r+0x318>
    5080:	f000 fdfd 	bl	5c7e <_svfprintf_r+0xf12>
    5084:	2201      	movs	r2, #1
    5086:	4b48      	ldr	r3, [pc, #288]	; (51a8 <_svfprintf_r+0x43c>)
    5088:	4252      	negs	r2, r2
    508a:	0028      	movs	r0, r5
    508c:	4641      	mov	r1, r8
    508e:	f7ff fc75 	bl	497c <__aeabi_dcmple>
    5092:	2800      	cmp	r0, #0
    5094:	d001      	beq.n	509a <_svfprintf_r+0x32e>
    5096:	f000 fdf2 	bl	5c7e <_svfprintf_r+0xf12>
    509a:	2200      	movs	r2, #0
    509c:	2300      	movs	r3, #0
    509e:	9816      	ldr	r0, [sp, #88]	; 0x58
    50a0:	9915      	ldr	r1, [sp, #84]	; 0x54
    50a2:	f7ff fc61 	bl	4968 <__aeabi_dcmplt>
    50a6:	2800      	cmp	r0, #0
    50a8:	d001      	beq.n	50ae <_svfprintf_r+0x342>
    50aa:	f001 f822 	bl	60f2 <_svfprintf_r+0x1386>
    50ae:	ab16      	add	r3, sp, #88	; 0x58
    50b0:	7fdb      	ldrb	r3, [r3, #31]
    50b2:	4698      	mov	r8, r3
    50b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    50b6:	2b47      	cmp	r3, #71	; 0x47
    50b8:	dd01      	ble.n	50be <_svfprintf_r+0x352>
    50ba:	f000 fec7 	bl	5e4c <_svfprintf_r+0x10e0>
    50be:	4b3b      	ldr	r3, [pc, #236]	; (51ac <_svfprintf_r+0x440>)
    50c0:	9311      	str	r3, [sp, #68]	; 0x44
    50c2:	2380      	movs	r3, #128	; 0x80
    50c4:	439c      	bics	r4, r3
    50c6:	3b7d      	subs	r3, #125	; 0x7d
    50c8:	9307      	str	r3, [sp, #28]
    50ca:	930e      	str	r3, [sp, #56]	; 0x38
    50cc:	2300      	movs	r3, #0
    50ce:	9408      	str	r4, [sp, #32]
    50d0:	469a      	mov	sl, r3
    50d2:	9313      	str	r3, [sp, #76]	; 0x4c
    50d4:	e762      	b.n	4f9c <_svfprintf_r+0x230>
    50d6:	2200      	movs	r2, #0
    50d8:	3b30      	subs	r3, #48	; 0x30
    50da:	0015      	movs	r5, r2
    50dc:	001a      	movs	r2, r3
    50de:	0003      	movs	r3, r0
    50e0:	9407      	str	r4, [sp, #28]
    50e2:	0008      	movs	r0, r1
    50e4:	002c      	movs	r4, r5
    50e6:	469b      	mov	fp, r3
    50e8:	00a3      	lsls	r3, r4, #2
    50ea:	191c      	adds	r4, r3, r4
    50ec:	7803      	ldrb	r3, [r0, #0]
    50ee:	0064      	lsls	r4, r4, #1
    50f0:	1914      	adds	r4, r2, r4
    50f2:	001a      	movs	r2, r3
    50f4:	3101      	adds	r1, #1
    50f6:	3a30      	subs	r2, #48	; 0x30
    50f8:	0008      	movs	r0, r1
    50fa:	2a09      	cmp	r2, #9
    50fc:	d9f4      	bls.n	50e8 <_svfprintf_r+0x37c>
    50fe:	940b      	str	r4, [sp, #44]	; 0x2c
    5100:	4658      	mov	r0, fp
    5102:	9c07      	ldr	r4, [sp, #28]
    5104:	e697      	b.n	4e36 <_svfprintf_r+0xca>
    5106:	2308      	movs	r3, #8
    5108:	431c      	orrs	r4, r3
    510a:	780b      	ldrb	r3, [r1, #0]
    510c:	e692      	b.n	4e34 <_svfprintf_r+0xc8>
    510e:	9312      	str	r3, [sp, #72]	; 0x48
    5110:	2310      	movs	r3, #16
    5112:	431c      	orrs	r4, r3
    5114:	468b      	mov	fp, r1
    5116:	06a3      	lsls	r3, r4, #26
    5118:	d500      	bpl.n	511c <_svfprintf_r+0x3b0>
    511a:	e17b      	b.n	5414 <_svfprintf_r+0x6a8>
    511c:	06e3      	lsls	r3, r4, #27
    511e:	d501      	bpl.n	5124 <_svfprintf_r+0x3b8>
    5120:	f000 fc7e 	bl	5a20 <_svfprintf_r+0xcb4>
    5124:	0663      	lsls	r3, r4, #25
    5126:	d401      	bmi.n	512c <_svfprintf_r+0x3c0>
    5128:	f000 fc7a 	bl	5a20 <_svfprintf_r+0xcb4>
    512c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    512e:	881a      	ldrh	r2, [r3, #0]
    5130:	920c      	str	r2, [sp, #48]	; 0x30
    5132:	2200      	movs	r2, #0
    5134:	3304      	adds	r3, #4
    5136:	930f      	str	r3, [sp, #60]	; 0x3c
    5138:	2300      	movs	r3, #0
    513a:	920d      	str	r2, [sp, #52]	; 0x34
    513c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    513e:	2100      	movs	r1, #0
    5140:	a816      	add	r0, sp, #88	; 0x58
    5142:	77c1      	strb	r1, [r0, #31]
    5144:	4688      	mov	r8, r1
    5146:	4651      	mov	r1, sl
    5148:	3101      	adds	r1, #1
    514a:	d000      	beq.n	514e <_svfprintf_r+0x3e2>
    514c:	e6ff      	b.n	4f4e <_svfprintf_r+0x1e2>
    514e:	2a00      	cmp	r2, #0
    5150:	d100      	bne.n	5154 <_svfprintf_r+0x3e8>
    5152:	e335      	b.n	57c0 <_svfprintf_r+0xa54>
    5154:	9408      	str	r4, [sp, #32]
    5156:	2b01      	cmp	r3, #1
    5158:	d100      	bne.n	515c <_svfprintf_r+0x3f0>
    515a:	e3e5      	b.n	5928 <_svfprintf_r+0xbbc>
    515c:	2b02      	cmp	r3, #2
    515e:	d000      	beq.n	5162 <_svfprintf_r+0x3f6>
    5160:	e362      	b.n	5828 <_svfprintf_r+0xabc>
    5162:	9c17      	ldr	r4, [sp, #92]	; 0x5c
    5164:	200f      	movs	r0, #15
    5166:	46a1      	mov	r9, r4
    5168:	46b4      	mov	ip, r6
    516a:	ab32      	add	r3, sp, #200	; 0xc8
    516c:	0019      	movs	r1, r3
    516e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    5170:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5172:	0004      	movs	r4, r0
    5174:	464d      	mov	r5, r9
    5176:	4014      	ands	r4, r2
    5178:	5d2c      	ldrb	r4, [r5, r4]
    517a:	071e      	lsls	r6, r3, #28
    517c:	0915      	lsrs	r5, r2, #4
    517e:	3901      	subs	r1, #1
    5180:	432e      	orrs	r6, r5
    5182:	700c      	strb	r4, [r1, #0]
    5184:	091c      	lsrs	r4, r3, #4
    5186:	0023      	movs	r3, r4
    5188:	0034      	movs	r4, r6
    518a:	0032      	movs	r2, r6
    518c:	431c      	orrs	r4, r3
    518e:	d1f0      	bne.n	5172 <_svfprintf_r+0x406>
    5190:	920c      	str	r2, [sp, #48]	; 0x30
    5192:	930d      	str	r3, [sp, #52]	; 0x34
    5194:	ab32      	add	r3, sp, #200	; 0xc8
    5196:	1a5b      	subs	r3, r3, r1
    5198:	9111      	str	r1, [sp, #68]	; 0x44
    519a:	4666      	mov	r6, ip
    519c:	930e      	str	r3, [sp, #56]	; 0x38
    519e:	e6f5      	b.n	4f8c <_svfprintf_r+0x220>
    51a0:	0000a6a4 	.word	0x0000a6a4
    51a4:	0000a84c 	.word	0x0000a84c
    51a8:	7fefffff 	.word	0x7fefffff
    51ac:	0000a808 	.word	0x0000a808
    51b0:	9312      	str	r3, [sp, #72]	; 0x48
    51b2:	2310      	movs	r3, #16
    51b4:	431c      	orrs	r4, r3
    51b6:	468b      	mov	fp, r1
    51b8:	06a3      	lsls	r3, r4, #26
    51ba:	d500      	bpl.n	51be <_svfprintf_r+0x452>
    51bc:	e111      	b.n	53e2 <_svfprintf_r+0x676>
    51be:	06e3      	lsls	r3, r4, #27
    51c0:	d501      	bpl.n	51c6 <_svfprintf_r+0x45a>
    51c2:	f000 fc31 	bl	5a28 <_svfprintf_r+0xcbc>
    51c6:	0663      	lsls	r3, r4, #25
    51c8:	d401      	bmi.n	51ce <_svfprintf_r+0x462>
    51ca:	f000 fc2d 	bl	5a28 <_svfprintf_r+0xcbc>
    51ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    51d0:	881a      	ldrh	r2, [r3, #0]
    51d2:	920c      	str	r2, [sp, #48]	; 0x30
    51d4:	2200      	movs	r2, #0
    51d6:	3304      	adds	r3, #4
    51d8:	920d      	str	r2, [sp, #52]	; 0x34
    51da:	930f      	str	r3, [sp, #60]	; 0x3c
    51dc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    51de:	2301      	movs	r3, #1
    51e0:	e7ad      	b.n	513e <_svfprintf_r+0x3d2>
    51e2:	468b      	mov	fp, r1
    51e4:	4641      	mov	r1, r8
    51e6:	9312      	str	r3, [sp, #72]	; 0x48
    51e8:	2900      	cmp	r1, #0
    51ea:	d001      	beq.n	51f0 <_svfprintf_r+0x484>
    51ec:	f001 f890 	bl	6310 <_svfprintf_r+0x15a4>
    51f0:	4bb8      	ldr	r3, [pc, #736]	; (54d4 <_svfprintf_r+0x768>)
    51f2:	9317      	str	r3, [sp, #92]	; 0x5c
    51f4:	06a3      	lsls	r3, r4, #26
    51f6:	d500      	bpl.n	51fa <_svfprintf_r+0x48e>
    51f8:	e0ab      	b.n	5352 <_svfprintf_r+0x5e6>
    51fa:	06e3      	lsls	r3, r4, #27
    51fc:	d501      	bpl.n	5202 <_svfprintf_r+0x496>
    51fe:	f000 fc07 	bl	5a10 <_svfprintf_r+0xca4>
    5202:	0663      	lsls	r3, r4, #25
    5204:	d401      	bmi.n	520a <_svfprintf_r+0x49e>
    5206:	f000 fc03 	bl	5a10 <_svfprintf_r+0xca4>
    520a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    520c:	881a      	ldrh	r2, [r3, #0]
    520e:	920c      	str	r2, [sp, #48]	; 0x30
    5210:	2200      	movs	r2, #0
    5212:	3304      	adds	r3, #4
    5214:	920d      	str	r2, [sp, #52]	; 0x34
    5216:	930f      	str	r3, [sp, #60]	; 0x3c
    5218:	07e3      	lsls	r3, r4, #31
    521a:	d400      	bmi.n	521e <_svfprintf_r+0x4b2>
    521c:	e0a9      	b.n	5372 <_svfprintf_r+0x606>
    521e:	990c      	ldr	r1, [sp, #48]	; 0x30
    5220:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    5222:	000b      	movs	r3, r1
    5224:	4313      	orrs	r3, r2
    5226:	001a      	movs	r2, r3
    5228:	2302      	movs	r3, #2
    522a:	2a00      	cmp	r2, #0
    522c:	d100      	bne.n	5230 <_svfprintf_r+0x4c4>
    522e:	e786      	b.n	513e <_svfprintf_r+0x3d2>
    5230:	2030      	movs	r0, #48	; 0x30
    5232:	a91e      	add	r1, sp, #120	; 0x78
    5234:	7008      	strb	r0, [r1, #0]
    5236:	2548      	movs	r5, #72	; 0x48
    5238:	4668      	mov	r0, sp
    523a:	1940      	adds	r0, r0, r5
    523c:	7800      	ldrb	r0, [r0, #0]
    523e:	431c      	orrs	r4, r3
    5240:	7048      	strb	r0, [r1, #1]
    5242:	e77c      	b.n	513e <_svfprintf_r+0x3d2>
    5244:	468b      	mov	fp, r1
    5246:	4641      	mov	r1, r8
    5248:	2900      	cmp	r1, #0
    524a:	d001      	beq.n	5250 <_svfprintf_r+0x4e4>
    524c:	f001 f883 	bl	6356 <_svfprintf_r+0x15ea>
    5250:	06a3      	lsls	r3, r4, #26
    5252:	d501      	bpl.n	5258 <_svfprintf_r+0x4ec>
    5254:	f000 fde9 	bl	5e2a <_svfprintf_r+0x10be>
    5258:	06e3      	lsls	r3, r4, #27
    525a:	d501      	bpl.n	5260 <_svfprintf_r+0x4f4>
    525c:	f000 fd9b 	bl	5d96 <_svfprintf_r+0x102a>
    5260:	0663      	lsls	r3, r4, #25
    5262:	d401      	bmi.n	5268 <_svfprintf_r+0x4fc>
    5264:	f000 fd97 	bl	5d96 <_svfprintf_r+0x102a>
    5268:	4669      	mov	r1, sp
    526a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    526c:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    526e:	681a      	ldr	r2, [r3, #0]
    5270:	3304      	adds	r3, #4
    5272:	9207      	str	r2, [sp, #28]
    5274:	8011      	strh	r1, [r2, #0]
    5276:	930f      	str	r3, [sp, #60]	; 0x3c
    5278:	e5a3      	b.n	4dc2 <_svfprintf_r+0x56>
    527a:	464b      	mov	r3, r9
    527c:	431c      	orrs	r4, r3
    527e:	780b      	ldrb	r3, [r1, #0]
    5280:	e5d8      	b.n	4e34 <_svfprintf_r+0xc8>
    5282:	9312      	str	r3, [sp, #72]	; 0x48
    5284:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5286:	468b      	mov	fp, r1
    5288:	1d1d      	adds	r5, r3, #4
    528a:	681b      	ldr	r3, [r3, #0]
    528c:	a916      	add	r1, sp, #88	; 0x58
    528e:	001a      	movs	r2, r3
    5290:	9311      	str	r3, [sp, #68]	; 0x44
    5292:	2300      	movs	r3, #0
    5294:	77cb      	strb	r3, [r1, #31]
    5296:	2a00      	cmp	r2, #0
    5298:	d101      	bne.n	529e <_svfprintf_r+0x532>
    529a:	f000 fefb 	bl	6094 <_svfprintf_r+0x1328>
    529e:	4653      	mov	r3, sl
    52a0:	3301      	adds	r3, #1
    52a2:	d101      	bne.n	52a8 <_svfprintf_r+0x53c>
    52a4:	f000 fe38 	bl	5f18 <_svfprintf_r+0x11ac>
    52a8:	4652      	mov	r2, sl
    52aa:	2100      	movs	r1, #0
    52ac:	9811      	ldr	r0, [sp, #68]	; 0x44
    52ae:	f002 fcf1 	bl	7c94 <memchr>
    52b2:	2800      	cmp	r0, #0
    52b4:	d101      	bne.n	52ba <_svfprintf_r+0x54e>
    52b6:	f000 ff54 	bl	6162 <_svfprintf_r+0x13f6>
    52ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
    52bc:	1ac3      	subs	r3, r0, r3
    52be:	001a      	movs	r2, r3
    52c0:	930e      	str	r3, [sp, #56]	; 0x38
    52c2:	43db      	mvns	r3, r3
    52c4:	17db      	asrs	r3, r3, #31
    52c6:	401a      	ands	r2, r3
    52c8:	ab16      	add	r3, sp, #88	; 0x58
    52ca:	7fdb      	ldrb	r3, [r3, #31]
    52cc:	9207      	str	r2, [sp, #28]
    52ce:	4698      	mov	r8, r3
    52d0:	2300      	movs	r3, #0
    52d2:	950f      	str	r5, [sp, #60]	; 0x3c
    52d4:	9408      	str	r4, [sp, #32]
    52d6:	469a      	mov	sl, r3
    52d8:	9313      	str	r3, [sp, #76]	; 0x4c
    52da:	e65f      	b.n	4f9c <_svfprintf_r+0x230>
    52dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    52de:	9312      	str	r3, [sp, #72]	; 0x48
    52e0:	6813      	ldr	r3, [r2, #0]
    52e2:	ad28      	add	r5, sp, #160	; 0xa0
    52e4:	9307      	str	r3, [sp, #28]
    52e6:	466b      	mov	r3, sp
    52e8:	7f1b      	ldrb	r3, [r3, #28]
    52ea:	468b      	mov	fp, r1
    52ec:	702b      	strb	r3, [r5, #0]
    52ee:	2300      	movs	r3, #0
    52f0:	a916      	add	r1, sp, #88	; 0x58
    52f2:	77cb      	strb	r3, [r1, #31]
    52f4:	0013      	movs	r3, r2
    52f6:	3304      	adds	r3, #4
    52f8:	930f      	str	r3, [sp, #60]	; 0x3c
    52fa:	2300      	movs	r3, #0
    52fc:	9408      	str	r4, [sp, #32]
    52fe:	4698      	mov	r8, r3
    5300:	3301      	adds	r3, #1
    5302:	9307      	str	r3, [sp, #28]
    5304:	930e      	str	r3, [sp, #56]	; 0x38
    5306:	2300      	movs	r3, #0
    5308:	9511      	str	r5, [sp, #68]	; 0x44
    530a:	469a      	mov	sl, r3
    530c:	9313      	str	r3, [sp, #76]	; 0x4c
    530e:	e64b      	b.n	4fa8 <_svfprintf_r+0x23c>
    5310:	468b      	mov	fp, r1
    5312:	4641      	mov	r1, r8
    5314:	9312      	str	r3, [sp, #72]	; 0x48
    5316:	2900      	cmp	r1, #0
    5318:	d100      	bne.n	531c <_svfprintf_r+0x5b0>
    531a:	e5f4      	b.n	4f06 <_svfprintf_r+0x19a>
    531c:	ab16      	add	r3, sp, #88	; 0x58
    531e:	77d8      	strb	r0, [r3, #31]
    5320:	e5f1      	b.n	4f06 <_svfprintf_r+0x19a>
    5322:	4663      	mov	r3, ip
    5324:	431c      	orrs	r4, r3
    5326:	780b      	ldrb	r3, [r1, #0]
    5328:	e584      	b.n	4e34 <_svfprintf_r+0xc8>
    532a:	780b      	ldrb	r3, [r1, #0]
    532c:	2b6c      	cmp	r3, #108	; 0x6c
    532e:	d101      	bne.n	5334 <_svfprintf_r+0x5c8>
    5330:	f000 fd86 	bl	5e40 <_svfprintf_r+0x10d4>
    5334:	2210      	movs	r2, #16
    5336:	4314      	orrs	r4, r2
    5338:	e57c      	b.n	4e34 <_svfprintf_r+0xc8>
    533a:	468b      	mov	fp, r1
    533c:	4641      	mov	r1, r8
    533e:	9312      	str	r3, [sp, #72]	; 0x48
    5340:	2900      	cmp	r1, #0
    5342:	d001      	beq.n	5348 <_svfprintf_r+0x5dc>
    5344:	f000 ffe8 	bl	6318 <_svfprintf_r+0x15ac>
    5348:	4b63      	ldr	r3, [pc, #396]	; (54d8 <_svfprintf_r+0x76c>)
    534a:	9317      	str	r3, [sp, #92]	; 0x5c
    534c:	06a3      	lsls	r3, r4, #26
    534e:	d400      	bmi.n	5352 <_svfprintf_r+0x5e6>
    5350:	e753      	b.n	51fa <_svfprintf_r+0x48e>
    5352:	2207      	movs	r2, #7
    5354:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5356:	3307      	adds	r3, #7
    5358:	4393      	bics	r3, r2
    535a:	3201      	adds	r2, #1
    535c:	4694      	mov	ip, r2
    535e:	449c      	add	ip, r3
    5360:	4662      	mov	r2, ip
    5362:	920f      	str	r2, [sp, #60]	; 0x3c
    5364:	681a      	ldr	r2, [r3, #0]
    5366:	685b      	ldr	r3, [r3, #4]
    5368:	920c      	str	r2, [sp, #48]	; 0x30
    536a:	930d      	str	r3, [sp, #52]	; 0x34
    536c:	07e3      	lsls	r3, r4, #31
    536e:	d500      	bpl.n	5372 <_svfprintf_r+0x606>
    5370:	e755      	b.n	521e <_svfprintf_r+0x4b2>
    5372:	990c      	ldr	r1, [sp, #48]	; 0x30
    5374:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    5376:	0008      	movs	r0, r1
    5378:	4310      	orrs	r0, r2
    537a:	2302      	movs	r3, #2
    537c:	0002      	movs	r2, r0
    537e:	e6de      	b.n	513e <_svfprintf_r+0x3d2>
    5380:	468b      	mov	fp, r1
    5382:	990f      	ldr	r1, [sp, #60]	; 0x3c
    5384:	2230      	movs	r2, #48	; 0x30
    5386:	680b      	ldr	r3, [r1, #0]
    5388:	930c      	str	r3, [sp, #48]	; 0x30
    538a:	2300      	movs	r3, #0
    538c:	930d      	str	r3, [sp, #52]	; 0x34
    538e:	3302      	adds	r3, #2
    5390:	431c      	orrs	r4, r3
    5392:	ab1e      	add	r3, sp, #120	; 0x78
    5394:	701a      	strb	r2, [r3, #0]
    5396:	3248      	adds	r2, #72	; 0x48
    5398:	705a      	strb	r2, [r3, #1]
    539a:	000b      	movs	r3, r1
    539c:	3304      	adds	r3, #4
    539e:	930f      	str	r3, [sp, #60]	; 0x3c
    53a0:	4b4d      	ldr	r3, [pc, #308]	; (54d8 <_svfprintf_r+0x76c>)
    53a2:	9212      	str	r2, [sp, #72]	; 0x48
    53a4:	9317      	str	r3, [sp, #92]	; 0x5c
    53a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    53a8:	2302      	movs	r3, #2
    53aa:	e6c8      	b.n	513e <_svfprintf_r+0x3d2>
    53ac:	2301      	movs	r3, #1
    53ae:	431c      	orrs	r4, r3
    53b0:	780b      	ldrb	r3, [r1, #0]
    53b2:	e53f      	b.n	4e34 <_svfprintf_r+0xc8>
    53b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    53b6:	1d1a      	adds	r2, r3, #4
    53b8:	681b      	ldr	r3, [r3, #0]
    53ba:	930b      	str	r3, [sp, #44]	; 0x2c
    53bc:	2b00      	cmp	r3, #0
    53be:	da00      	bge.n	53c2 <_svfprintf_r+0x656>
    53c0:	e542      	b.n	4e48 <_svfprintf_r+0xdc>
    53c2:	780b      	ldrb	r3, [r1, #0]
    53c4:	920f      	str	r2, [sp, #60]	; 0x3c
    53c6:	e535      	b.n	4e34 <_svfprintf_r+0xc8>
    53c8:	780b      	ldrb	r3, [r1, #0]
    53ca:	2800      	cmp	r0, #0
    53cc:	d000      	beq.n	53d0 <_svfprintf_r+0x664>
    53ce:	e531      	b.n	4e34 <_svfprintf_r+0xc8>
    53d0:	2201      	movs	r2, #1
    53d2:	3020      	adds	r0, #32
    53d4:	4690      	mov	r8, r2
    53d6:	e52d      	b.n	4e34 <_svfprintf_r+0xc8>
    53d8:	468b      	mov	fp, r1
    53da:	9312      	str	r3, [sp, #72]	; 0x48
    53dc:	06a3      	lsls	r3, r4, #26
    53de:	d400      	bmi.n	53e2 <_svfprintf_r+0x676>
    53e0:	e6ed      	b.n	51be <_svfprintf_r+0x452>
    53e2:	2207      	movs	r2, #7
    53e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    53e6:	3307      	adds	r3, #7
    53e8:	4393      	bics	r3, r2
    53ea:	3201      	adds	r2, #1
    53ec:	4694      	mov	ip, r2
    53ee:	449c      	add	ip, r3
    53f0:	4662      	mov	r2, ip
    53f2:	920f      	str	r2, [sp, #60]	; 0x3c
    53f4:	681a      	ldr	r2, [r3, #0]
    53f6:	685b      	ldr	r3, [r3, #4]
    53f8:	0011      	movs	r1, r2
    53fa:	001a      	movs	r2, r3
    53fc:	0008      	movs	r0, r1
    53fe:	4310      	orrs	r0, r2
    5400:	910c      	str	r1, [sp, #48]	; 0x30
    5402:	920d      	str	r2, [sp, #52]	; 0x34
    5404:	2301      	movs	r3, #1
    5406:	0002      	movs	r2, r0
    5408:	e699      	b.n	513e <_svfprintf_r+0x3d2>
    540a:	468b      	mov	fp, r1
    540c:	9312      	str	r3, [sp, #72]	; 0x48
    540e:	06a3      	lsls	r3, r4, #26
    5410:	d400      	bmi.n	5414 <_svfprintf_r+0x6a8>
    5412:	e683      	b.n	511c <_svfprintf_r+0x3b0>
    5414:	2207      	movs	r2, #7
    5416:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5418:	3307      	adds	r3, #7
    541a:	4393      	bics	r3, r2
    541c:	3201      	adds	r2, #1
    541e:	4694      	mov	ip, r2
    5420:	449c      	add	ip, r3
    5422:	4662      	mov	r2, ip
    5424:	920f      	str	r2, [sp, #60]	; 0x3c
    5426:	681a      	ldr	r2, [r3, #0]
    5428:	685b      	ldr	r3, [r3, #4]
    542a:	0011      	movs	r1, r2
    542c:	001a      	movs	r2, r3
    542e:	0008      	movs	r0, r1
    5430:	4310      	orrs	r0, r2
    5432:	910c      	str	r1, [sp, #48]	; 0x30
    5434:	920d      	str	r2, [sp, #52]	; 0x34
    5436:	2300      	movs	r3, #0
    5438:	0002      	movs	r2, r0
    543a:	e680      	b.n	513e <_svfprintf_r+0x3d2>
    543c:	468b      	mov	fp, r1
    543e:	4641      	mov	r1, r8
    5440:	9312      	str	r3, [sp, #72]	; 0x48
    5442:	2900      	cmp	r1, #0
    5444:	d001      	beq.n	544a <_svfprintf_r+0x6de>
    5446:	f000 ff7f 	bl	6348 <_svfprintf_r+0x15dc>
    544a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    544c:	2b00      	cmp	r3, #0
    544e:	d100      	bne.n	5452 <_svfprintf_r+0x6e6>
    5450:	e50b      	b.n	4e6a <_svfprintf_r+0xfe>
    5452:	ad28      	add	r5, sp, #160	; 0xa0
    5454:	702b      	strb	r3, [r5, #0]
    5456:	2300      	movs	r3, #0
    5458:	aa16      	add	r2, sp, #88	; 0x58
    545a:	77d3      	strb	r3, [r2, #31]
    545c:	9408      	str	r4, [sp, #32]
    545e:	e74e      	b.n	52fe <_svfprintf_r+0x592>
    5460:	68bc      	ldr	r4, [r7, #8]
    5462:	4643      	mov	r3, r8
    5464:	2b00      	cmp	r3, #0
    5466:	d00f      	beq.n	5488 <_svfprintf_r+0x71c>
    5468:	aa16      	add	r2, sp, #88	; 0x58
    546a:	231f      	movs	r3, #31
    546c:	4694      	mov	ip, r2
    546e:	4463      	add	r3, ip
    5470:	6033      	str	r3, [r6, #0]
    5472:	2301      	movs	r3, #1
    5474:	6073      	str	r3, [r6, #4]
    5476:	687b      	ldr	r3, [r7, #4]
    5478:	3401      	adds	r4, #1
    547a:	3301      	adds	r3, #1
    547c:	60bc      	str	r4, [r7, #8]
    547e:	607b      	str	r3, [r7, #4]
    5480:	2b07      	cmp	r3, #7
    5482:	dd00      	ble.n	5486 <_svfprintf_r+0x71a>
    5484:	e1b3      	b.n	57ee <_svfprintf_r+0xa82>
    5486:	3608      	adds	r6, #8
    5488:	464b      	mov	r3, r9
    548a:	2b00      	cmp	r3, #0
    548c:	d00c      	beq.n	54a8 <_svfprintf_r+0x73c>
    548e:	ab1e      	add	r3, sp, #120	; 0x78
    5490:	6033      	str	r3, [r6, #0]
    5492:	2302      	movs	r3, #2
    5494:	6073      	str	r3, [r6, #4]
    5496:	687b      	ldr	r3, [r7, #4]
    5498:	3402      	adds	r4, #2
    549a:	3301      	adds	r3, #1
    549c:	60bc      	str	r4, [r7, #8]
    549e:	607b      	str	r3, [r7, #4]
    54a0:	2b07      	cmp	r3, #7
    54a2:	dd00      	ble.n	54a6 <_svfprintf_r+0x73a>
    54a4:	e1af      	b.n	5806 <_svfprintf_r+0xa9a>
    54a6:	3608      	adds	r6, #8
    54a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    54aa:	2b80      	cmp	r3, #128	; 0x80
    54ac:	d100      	bne.n	54b0 <_svfprintf_r+0x744>
    54ae:	e120      	b.n	56f2 <_svfprintf_r+0x986>
    54b0:	4653      	mov	r3, sl
    54b2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    54b4:	1a9d      	subs	r5, r3, r2
    54b6:	2d00      	cmp	r5, #0
    54b8:	dd3c      	ble.n	5534 <_svfprintf_r+0x7c8>
    54ba:	4a08      	ldr	r2, [pc, #32]	; (54dc <_svfprintf_r+0x770>)
    54bc:	687b      	ldr	r3, [r7, #4]
    54be:	4691      	mov	r9, r2
    54c0:	2d10      	cmp	r5, #16
    54c2:	dd2c      	ble.n	551e <_svfprintf_r+0x7b2>
    54c4:	2210      	movs	r2, #16
    54c6:	0021      	movs	r1, r4
    54c8:	4692      	mov	sl, r2
    54ca:	9c09      	ldr	r4, [sp, #36]	; 0x24
    54cc:	0032      	movs	r2, r6
    54ce:	002e      	movs	r6, r5
    54d0:	464d      	mov	r5, r9
    54d2:	e009      	b.n	54e8 <_svfprintf_r+0x77c>
    54d4:	0000a818 	.word	0x0000a818
    54d8:	0000a82c 	.word	0x0000a82c
    54dc:	0000a85c 	.word	0x0000a85c
    54e0:	3e10      	subs	r6, #16
    54e2:	3208      	adds	r2, #8
    54e4:	2e10      	cmp	r6, #16
    54e6:	dd16      	ble.n	5516 <_svfprintf_r+0x7aa>
    54e8:	4650      	mov	r0, sl
    54ea:	3110      	adds	r1, #16
    54ec:	3301      	adds	r3, #1
    54ee:	6015      	str	r5, [r2, #0]
    54f0:	6050      	str	r0, [r2, #4]
    54f2:	60b9      	str	r1, [r7, #8]
    54f4:	607b      	str	r3, [r7, #4]
    54f6:	2b07      	cmp	r3, #7
    54f8:	ddf2      	ble.n	54e0 <_svfprintf_r+0x774>
    54fa:	003a      	movs	r2, r7
    54fc:	9906      	ldr	r1, [sp, #24]
    54fe:	0020      	movs	r0, r4
    5500:	f002 ffe6 	bl	84d0 <__ssprint_r>
    5504:	2800      	cmp	r0, #0
    5506:	d000      	beq.n	550a <_svfprintf_r+0x79e>
    5508:	e4b7      	b.n	4e7a <_svfprintf_r+0x10e>
    550a:	3e10      	subs	r6, #16
    550c:	68b9      	ldr	r1, [r7, #8]
    550e:	687b      	ldr	r3, [r7, #4]
    5510:	aa32      	add	r2, sp, #200	; 0xc8
    5512:	2e10      	cmp	r6, #16
    5514:	dce8      	bgt.n	54e8 <_svfprintf_r+0x77c>
    5516:	46a9      	mov	r9, r5
    5518:	000c      	movs	r4, r1
    551a:	0035      	movs	r5, r6
    551c:	0016      	movs	r6, r2
    551e:	464a      	mov	r2, r9
    5520:	1964      	adds	r4, r4, r5
    5522:	3301      	adds	r3, #1
    5524:	6032      	str	r2, [r6, #0]
    5526:	6075      	str	r5, [r6, #4]
    5528:	60bc      	str	r4, [r7, #8]
    552a:	607b      	str	r3, [r7, #4]
    552c:	2b07      	cmp	r3, #7
    552e:	dd00      	ble.n	5532 <_svfprintf_r+0x7c6>
    5530:	e151      	b.n	57d6 <_svfprintf_r+0xa6a>
    5532:	3608      	adds	r6, #8
    5534:	9b08      	ldr	r3, [sp, #32]
    5536:	05db      	lsls	r3, r3, #23
    5538:	d500      	bpl.n	553c <_svfprintf_r+0x7d0>
    553a:	e0b6      	b.n	56aa <_svfprintf_r+0x93e>
    553c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    553e:	6033      	str	r3, [r6, #0]
    5540:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5542:	469c      	mov	ip, r3
    5544:	6073      	str	r3, [r6, #4]
    5546:	687b      	ldr	r3, [r7, #4]
    5548:	4464      	add	r4, ip
    554a:	3301      	adds	r3, #1
    554c:	60bc      	str	r4, [r7, #8]
    554e:	607b      	str	r3, [r7, #4]
    5550:	2b07      	cmp	r3, #7
    5552:	dd00      	ble.n	5556 <_svfprintf_r+0x7ea>
    5554:	e09d      	b.n	5692 <_svfprintf_r+0x926>
    5556:	3608      	adds	r6, #8
    5558:	9b08      	ldr	r3, [sp, #32]
    555a:	075b      	lsls	r3, r3, #29
    555c:	d541      	bpl.n	55e2 <_svfprintf_r+0x876>
    555e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5560:	9a07      	ldr	r2, [sp, #28]
    5562:	1a9d      	subs	r5, r3, r2
    5564:	2d00      	cmp	r5, #0
    5566:	dd3c      	ble.n	55e2 <_svfprintf_r+0x876>
    5568:	4ac4      	ldr	r2, [pc, #784]	; (587c <_svfprintf_r+0xb10>)
    556a:	687b      	ldr	r3, [r7, #4]
    556c:	4690      	mov	r8, r2
    556e:	2d10      	cmp	r5, #16
    5570:	dd26      	ble.n	55c0 <_svfprintf_r+0x854>
    5572:	2210      	movs	r2, #16
    5574:	0021      	movs	r1, r4
    5576:	4691      	mov	r9, r2
    5578:	9c09      	ldr	r4, [sp, #36]	; 0x24
    557a:	0032      	movs	r2, r6
    557c:	002e      	movs	r6, r5
    557e:	9d06      	ldr	r5, [sp, #24]
    5580:	e003      	b.n	558a <_svfprintf_r+0x81e>
    5582:	3e10      	subs	r6, #16
    5584:	3208      	adds	r2, #8
    5586:	2e10      	cmp	r6, #16
    5588:	dd17      	ble.n	55ba <_svfprintf_r+0x84e>
    558a:	48bc      	ldr	r0, [pc, #752]	; (587c <_svfprintf_r+0xb10>)
    558c:	3110      	adds	r1, #16
    558e:	6010      	str	r0, [r2, #0]
    5590:	4648      	mov	r0, r9
    5592:	3301      	adds	r3, #1
    5594:	6050      	str	r0, [r2, #4]
    5596:	60b9      	str	r1, [r7, #8]
    5598:	607b      	str	r3, [r7, #4]
    559a:	2b07      	cmp	r3, #7
    559c:	ddf1      	ble.n	5582 <_svfprintf_r+0x816>
    559e:	003a      	movs	r2, r7
    55a0:	0029      	movs	r1, r5
    55a2:	0020      	movs	r0, r4
    55a4:	f002 ff94 	bl	84d0 <__ssprint_r>
    55a8:	2800      	cmp	r0, #0
    55aa:	d000      	beq.n	55ae <_svfprintf_r+0x842>
    55ac:	e465      	b.n	4e7a <_svfprintf_r+0x10e>
    55ae:	3e10      	subs	r6, #16
    55b0:	68b9      	ldr	r1, [r7, #8]
    55b2:	687b      	ldr	r3, [r7, #4]
    55b4:	aa32      	add	r2, sp, #200	; 0xc8
    55b6:	2e10      	cmp	r6, #16
    55b8:	dce7      	bgt.n	558a <_svfprintf_r+0x81e>
    55ba:	0035      	movs	r5, r6
    55bc:	000c      	movs	r4, r1
    55be:	0016      	movs	r6, r2
    55c0:	4642      	mov	r2, r8
    55c2:	1964      	adds	r4, r4, r5
    55c4:	3301      	adds	r3, #1
    55c6:	c624      	stmia	r6!, {r2, r5}
    55c8:	60bc      	str	r4, [r7, #8]
    55ca:	607b      	str	r3, [r7, #4]
    55cc:	2b07      	cmp	r3, #7
    55ce:	dd08      	ble.n	55e2 <_svfprintf_r+0x876>
    55d0:	003a      	movs	r2, r7
    55d2:	9906      	ldr	r1, [sp, #24]
    55d4:	9809      	ldr	r0, [sp, #36]	; 0x24
    55d6:	f002 ff7b 	bl	84d0 <__ssprint_r>
    55da:	2800      	cmp	r0, #0
    55dc:	d000      	beq.n	55e0 <_svfprintf_r+0x874>
    55de:	e44c      	b.n	4e7a <_svfprintf_r+0x10e>
    55e0:	68bc      	ldr	r4, [r7, #8]
    55e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    55e4:	9907      	ldr	r1, [sp, #28]
    55e6:	428b      	cmp	r3, r1
    55e8:	da00      	bge.n	55ec <_svfprintf_r+0x880>
    55ea:	000b      	movs	r3, r1
    55ec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    55ee:	4694      	mov	ip, r2
    55f0:	449c      	add	ip, r3
    55f2:	4663      	mov	r3, ip
    55f4:	930a      	str	r3, [sp, #40]	; 0x28
    55f6:	2c00      	cmp	r4, #0
    55f8:	d000      	beq.n	55fc <_svfprintf_r+0x890>
    55fa:	e0d6      	b.n	57aa <_svfprintf_r+0xa3e>
    55fc:	2300      	movs	r3, #0
    55fe:	ae32      	add	r6, sp, #200	; 0xc8
    5600:	607b      	str	r3, [r7, #4]
    5602:	f7ff fbde 	bl	4dc2 <_svfprintf_r+0x56>
    5606:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5608:	2b01      	cmp	r3, #1
    560a:	dc00      	bgt.n	560e <_svfprintf_r+0x8a2>
    560c:	e0ae      	b.n	576c <_svfprintf_r+0xa00>
    560e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5610:	3401      	adds	r4, #1
    5612:	6033      	str	r3, [r6, #0]
    5614:	2301      	movs	r3, #1
    5616:	6073      	str	r3, [r6, #4]
    5618:	687b      	ldr	r3, [r7, #4]
    561a:	60bc      	str	r4, [r7, #8]
    561c:	3301      	adds	r3, #1
    561e:	607b      	str	r3, [r7, #4]
    5620:	2b07      	cmp	r3, #7
    5622:	dd00      	ble.n	5626 <_svfprintf_r+0x8ba>
    5624:	e2df      	b.n	5be6 <_svfprintf_r+0xe7a>
    5626:	3608      	adds	r6, #8
    5628:	9a19      	ldr	r2, [sp, #100]	; 0x64
    562a:	3301      	adds	r3, #1
    562c:	6032      	str	r2, [r6, #0]
    562e:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5630:	4698      	mov	r8, r3
    5632:	4694      	mov	ip, r2
    5634:	4464      	add	r4, ip
    5636:	6072      	str	r2, [r6, #4]
    5638:	60bc      	str	r4, [r7, #8]
    563a:	607b      	str	r3, [r7, #4]
    563c:	2b07      	cmp	r3, #7
    563e:	dd00      	ble.n	5642 <_svfprintf_r+0x8d6>
    5640:	e2de      	b.n	5c00 <_svfprintf_r+0xe94>
    5642:	3608      	adds	r6, #8
    5644:	2200      	movs	r2, #0
    5646:	2300      	movs	r3, #0
    5648:	9816      	ldr	r0, [sp, #88]	; 0x58
    564a:	9915      	ldr	r1, [sp, #84]	; 0x54
    564c:	f7ff f986 	bl	495c <__aeabi_dcmpeq>
    5650:	2800      	cmp	r0, #0
    5652:	d000      	beq.n	5656 <_svfprintf_r+0x8ea>
    5654:	e1a4      	b.n	59a0 <_svfprintf_r+0xc34>
    5656:	9d11      	ldr	r5, [sp, #68]	; 0x44
    5658:	9b14      	ldr	r3, [sp, #80]	; 0x50
    565a:	3501      	adds	r5, #1
    565c:	3b01      	subs	r3, #1
    565e:	6035      	str	r5, [r6, #0]
    5660:	6073      	str	r3, [r6, #4]
    5662:	18e4      	adds	r4, r4, r3
    5664:	2301      	movs	r3, #1
    5666:	469c      	mov	ip, r3
    5668:	44e0      	add	r8, ip
    566a:	4643      	mov	r3, r8
    566c:	60bc      	str	r4, [r7, #8]
    566e:	607b      	str	r3, [r7, #4]
    5670:	2b07      	cmp	r3, #7
    5672:	dd00      	ble.n	5676 <_svfprintf_r+0x90a>
    5674:	e08b      	b.n	578e <_svfprintf_r+0xa22>
    5676:	3608      	adds	r6, #8
    5678:	ab21      	add	r3, sp, #132	; 0x84
    567a:	6033      	str	r3, [r6, #0]
    567c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    567e:	469c      	mov	ip, r3
    5680:	6073      	str	r3, [r6, #4]
    5682:	4643      	mov	r3, r8
    5684:	4464      	add	r4, ip
    5686:	3301      	adds	r3, #1
    5688:	60bc      	str	r4, [r7, #8]
    568a:	607b      	str	r3, [r7, #4]
    568c:	2b07      	cmp	r3, #7
    568e:	dc00      	bgt.n	5692 <_svfprintf_r+0x926>
    5690:	e761      	b.n	5556 <_svfprintf_r+0x7ea>
    5692:	003a      	movs	r2, r7
    5694:	9906      	ldr	r1, [sp, #24]
    5696:	9809      	ldr	r0, [sp, #36]	; 0x24
    5698:	f002 ff1a 	bl	84d0 <__ssprint_r>
    569c:	2800      	cmp	r0, #0
    569e:	d001      	beq.n	56a4 <_svfprintf_r+0x938>
    56a0:	f7ff fbeb 	bl	4e7a <_svfprintf_r+0x10e>
    56a4:	68bc      	ldr	r4, [r7, #8]
    56a6:	ae32      	add	r6, sp, #200	; 0xc8
    56a8:	e756      	b.n	5558 <_svfprintf_r+0x7ec>
    56aa:	9b12      	ldr	r3, [sp, #72]	; 0x48
    56ac:	2b65      	cmp	r3, #101	; 0x65
    56ae:	ddaa      	ble.n	5606 <_svfprintf_r+0x89a>
    56b0:	2200      	movs	r2, #0
    56b2:	2300      	movs	r3, #0
    56b4:	9816      	ldr	r0, [sp, #88]	; 0x58
    56b6:	9915      	ldr	r1, [sp, #84]	; 0x54
    56b8:	f7ff f950 	bl	495c <__aeabi_dcmpeq>
    56bc:	2800      	cmp	r0, #0
    56be:	d100      	bne.n	56c2 <_svfprintf_r+0x956>
    56c0:	e0e2      	b.n	5888 <_svfprintf_r+0xb1c>
    56c2:	4b6f      	ldr	r3, [pc, #444]	; (5880 <_svfprintf_r+0xb14>)
    56c4:	3401      	adds	r4, #1
    56c6:	6033      	str	r3, [r6, #0]
    56c8:	2301      	movs	r3, #1
    56ca:	6073      	str	r3, [r6, #4]
    56cc:	687b      	ldr	r3, [r7, #4]
    56ce:	60bc      	str	r4, [r7, #8]
    56d0:	3301      	adds	r3, #1
    56d2:	607b      	str	r3, [r7, #4]
    56d4:	2b07      	cmp	r3, #7
    56d6:	dd00      	ble.n	56da <_svfprintf_r+0x96e>
    56d8:	e366      	b.n	5da8 <_svfprintf_r+0x103c>
    56da:	3608      	adds	r6, #8
    56dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    56de:	9a14      	ldr	r2, [sp, #80]	; 0x50
    56e0:	4293      	cmp	r3, r2
    56e2:	da00      	bge.n	56e6 <_svfprintf_r+0x97a>
    56e4:	e1a4      	b.n	5a30 <_svfprintf_r+0xcc4>
    56e6:	9b08      	ldr	r3, [sp, #32]
    56e8:	07db      	lsls	r3, r3, #31
    56ea:	d500      	bpl.n	56ee <_svfprintf_r+0x982>
    56ec:	e1a0      	b.n	5a30 <_svfprintf_r+0xcc4>
    56ee:	68bc      	ldr	r4, [r7, #8]
    56f0:	e732      	b.n	5558 <_svfprintf_r+0x7ec>
    56f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    56f4:	9a07      	ldr	r2, [sp, #28]
    56f6:	1a9d      	subs	r5, r3, r2
    56f8:	2d00      	cmp	r5, #0
    56fa:	dc00      	bgt.n	56fe <_svfprintf_r+0x992>
    56fc:	e6d8      	b.n	54b0 <_svfprintf_r+0x744>
    56fe:	4a61      	ldr	r2, [pc, #388]	; (5884 <_svfprintf_r+0xb18>)
    5700:	687b      	ldr	r3, [r7, #4]
    5702:	4691      	mov	r9, r2
    5704:	2d10      	cmp	r5, #16
    5706:	dd25      	ble.n	5754 <_svfprintf_r+0x9e8>
    5708:	2210      	movs	r2, #16
    570a:	0021      	movs	r1, r4
    570c:	4690      	mov	r8, r2
    570e:	9c09      	ldr	r4, [sp, #36]	; 0x24
    5710:	0032      	movs	r2, r6
    5712:	464e      	mov	r6, r9
    5714:	e003      	b.n	571e <_svfprintf_r+0x9b2>
    5716:	3d10      	subs	r5, #16
    5718:	3208      	adds	r2, #8
    571a:	2d10      	cmp	r5, #16
    571c:	dd17      	ble.n	574e <_svfprintf_r+0x9e2>
    571e:	4640      	mov	r0, r8
    5720:	3110      	adds	r1, #16
    5722:	3301      	adds	r3, #1
    5724:	6016      	str	r6, [r2, #0]
    5726:	6050      	str	r0, [r2, #4]
    5728:	60b9      	str	r1, [r7, #8]
    572a:	607b      	str	r3, [r7, #4]
    572c:	2b07      	cmp	r3, #7
    572e:	ddf2      	ble.n	5716 <_svfprintf_r+0x9aa>
    5730:	003a      	movs	r2, r7
    5732:	9906      	ldr	r1, [sp, #24]
    5734:	0020      	movs	r0, r4
    5736:	f002 fecb 	bl	84d0 <__ssprint_r>
    573a:	2800      	cmp	r0, #0
    573c:	d001      	beq.n	5742 <_svfprintf_r+0x9d6>
    573e:	f7ff fb9c 	bl	4e7a <_svfprintf_r+0x10e>
    5742:	3d10      	subs	r5, #16
    5744:	68b9      	ldr	r1, [r7, #8]
    5746:	687b      	ldr	r3, [r7, #4]
    5748:	aa32      	add	r2, sp, #200	; 0xc8
    574a:	2d10      	cmp	r5, #16
    574c:	dce7      	bgt.n	571e <_svfprintf_r+0x9b2>
    574e:	46b1      	mov	r9, r6
    5750:	000c      	movs	r4, r1
    5752:	0016      	movs	r6, r2
    5754:	464a      	mov	r2, r9
    5756:	1964      	adds	r4, r4, r5
    5758:	3301      	adds	r3, #1
    575a:	6032      	str	r2, [r6, #0]
    575c:	6075      	str	r5, [r6, #4]
    575e:	60bc      	str	r4, [r7, #8]
    5760:	607b      	str	r3, [r7, #4]
    5762:	2b07      	cmp	r3, #7
    5764:	dd00      	ble.n	5768 <_svfprintf_r+0x9fc>
    5766:	e27e      	b.n	5c66 <_svfprintf_r+0xefa>
    5768:	3608      	adds	r6, #8
    576a:	e6a1      	b.n	54b0 <_svfprintf_r+0x744>
    576c:	2301      	movs	r3, #1
    576e:	9a08      	ldr	r2, [sp, #32]
    5770:	4213      	tst	r3, r2
    5772:	d000      	beq.n	5776 <_svfprintf_r+0xa0a>
    5774:	e74b      	b.n	560e <_svfprintf_r+0x8a2>
    5776:	6073      	str	r3, [r6, #4]
    5778:	687b      	ldr	r3, [r7, #4]
    577a:	9a11      	ldr	r2, [sp, #68]	; 0x44
    577c:	3301      	adds	r3, #1
    577e:	3401      	adds	r4, #1
    5780:	6032      	str	r2, [r6, #0]
    5782:	60bc      	str	r4, [r7, #8]
    5784:	4698      	mov	r8, r3
    5786:	607b      	str	r3, [r7, #4]
    5788:	2b07      	cmp	r3, #7
    578a:	dc00      	bgt.n	578e <_svfprintf_r+0xa22>
    578c:	e773      	b.n	5676 <_svfprintf_r+0x90a>
    578e:	003a      	movs	r2, r7
    5790:	9906      	ldr	r1, [sp, #24]
    5792:	9809      	ldr	r0, [sp, #36]	; 0x24
    5794:	f002 fe9c 	bl	84d0 <__ssprint_r>
    5798:	2800      	cmp	r0, #0
    579a:	d001      	beq.n	57a0 <_svfprintf_r+0xa34>
    579c:	f7ff fb6d 	bl	4e7a <_svfprintf_r+0x10e>
    57a0:	687b      	ldr	r3, [r7, #4]
    57a2:	68bc      	ldr	r4, [r7, #8]
    57a4:	4698      	mov	r8, r3
    57a6:	ae32      	add	r6, sp, #200	; 0xc8
    57a8:	e766      	b.n	5678 <_svfprintf_r+0x90c>
    57aa:	003a      	movs	r2, r7
    57ac:	9906      	ldr	r1, [sp, #24]
    57ae:	9809      	ldr	r0, [sp, #36]	; 0x24
    57b0:	f002 fe8e 	bl	84d0 <__ssprint_r>
    57b4:	2800      	cmp	r0, #0
    57b6:	d100      	bne.n	57ba <_svfprintf_r+0xa4e>
    57b8:	e720      	b.n	55fc <_svfprintf_r+0x890>
    57ba:	f7ff fb5e 	bl	4e7a <_svfprintf_r+0x10e>
    57be:	9c08      	ldr	r4, [sp, #32]
    57c0:	2b01      	cmp	r3, #1
    57c2:	d100      	bne.n	57c6 <_svfprintf_r+0xa5a>
    57c4:	e184      	b.n	5ad0 <_svfprintf_r+0xd64>
    57c6:	2b02      	cmp	r3, #2
    57c8:	d129      	bne.n	581e <_svfprintf_r+0xab2>
    57ca:	9408      	str	r4, [sp, #32]
    57cc:	2300      	movs	r3, #0
    57ce:	2400      	movs	r4, #0
    57d0:	930c      	str	r3, [sp, #48]	; 0x30
    57d2:	940d      	str	r4, [sp, #52]	; 0x34
    57d4:	e4c5      	b.n	5162 <_svfprintf_r+0x3f6>
    57d6:	003a      	movs	r2, r7
    57d8:	9906      	ldr	r1, [sp, #24]
    57da:	9809      	ldr	r0, [sp, #36]	; 0x24
    57dc:	f002 fe78 	bl	84d0 <__ssprint_r>
    57e0:	2800      	cmp	r0, #0
    57e2:	d001      	beq.n	57e8 <_svfprintf_r+0xa7c>
    57e4:	f7ff fb49 	bl	4e7a <_svfprintf_r+0x10e>
    57e8:	68bc      	ldr	r4, [r7, #8]
    57ea:	ae32      	add	r6, sp, #200	; 0xc8
    57ec:	e6a2      	b.n	5534 <_svfprintf_r+0x7c8>
    57ee:	003a      	movs	r2, r7
    57f0:	9906      	ldr	r1, [sp, #24]
    57f2:	9809      	ldr	r0, [sp, #36]	; 0x24
    57f4:	f002 fe6c 	bl	84d0 <__ssprint_r>
    57f8:	2800      	cmp	r0, #0
    57fa:	d001      	beq.n	5800 <_svfprintf_r+0xa94>
    57fc:	f7ff fb3d 	bl	4e7a <_svfprintf_r+0x10e>
    5800:	68bc      	ldr	r4, [r7, #8]
    5802:	ae32      	add	r6, sp, #200	; 0xc8
    5804:	e640      	b.n	5488 <_svfprintf_r+0x71c>
    5806:	003a      	movs	r2, r7
    5808:	9906      	ldr	r1, [sp, #24]
    580a:	9809      	ldr	r0, [sp, #36]	; 0x24
    580c:	f002 fe60 	bl	84d0 <__ssprint_r>
    5810:	2800      	cmp	r0, #0
    5812:	d001      	beq.n	5818 <_svfprintf_r+0xaac>
    5814:	f7ff fb31 	bl	4e7a <_svfprintf_r+0x10e>
    5818:	68bc      	ldr	r4, [r7, #8]
    581a:	ae32      	add	r6, sp, #200	; 0xc8
    581c:	e644      	b.n	54a8 <_svfprintf_r+0x73c>
    581e:	9408      	str	r4, [sp, #32]
    5820:	2300      	movs	r3, #0
    5822:	2400      	movs	r4, #0
    5824:	930c      	str	r3, [sp, #48]	; 0x30
    5826:	940d      	str	r4, [sp, #52]	; 0x34
    5828:	980c      	ldr	r0, [sp, #48]	; 0x30
    582a:	990d      	ldr	r1, [sp, #52]	; 0x34
    582c:	465b      	mov	r3, fp
    582e:	aa32      	add	r2, sp, #200	; 0xc8
    5830:	9307      	str	r3, [sp, #28]
    5832:	4691      	mov	r9, r2
    5834:	46b3      	mov	fp, r6
    5836:	e000      	b.n	583a <_svfprintf_r+0xace>
    5838:	46a1      	mov	r9, r4
    583a:	074a      	lsls	r2, r1, #29
    583c:	4694      	mov	ip, r2
    583e:	464b      	mov	r3, r9
    5840:	4665      	mov	r5, ip
    5842:	1e5c      	subs	r4, r3, #1
    5844:	08c6      	lsrs	r6, r0, #3
    5846:	2307      	movs	r3, #7
    5848:	08ca      	lsrs	r2, r1, #3
    584a:	4335      	orrs	r5, r6
    584c:	0011      	movs	r1, r2
    584e:	002a      	movs	r2, r5
    5850:	4003      	ands	r3, r0
    5852:	3330      	adds	r3, #48	; 0x30
    5854:	7023      	strb	r3, [r4, #0]
    5856:	0028      	movs	r0, r5
    5858:	430a      	orrs	r2, r1
    585a:	d1ed      	bne.n	5838 <_svfprintf_r+0xacc>
    585c:	900c      	str	r0, [sp, #48]	; 0x30
    585e:	910d      	str	r1, [sp, #52]	; 0x34
    5860:	9907      	ldr	r1, [sp, #28]
    5862:	465e      	mov	r6, fp
    5864:	468b      	mov	fp, r1
    5866:	9908      	ldr	r1, [sp, #32]
    5868:	464a      	mov	r2, r9
    586a:	9411      	str	r4, [sp, #68]	; 0x44
    586c:	07c9      	lsls	r1, r1, #31
    586e:	d500      	bpl.n	5872 <_svfprintf_r+0xb06>
    5870:	e13d      	b.n	5aee <_svfprintf_r+0xd82>
    5872:	ab32      	add	r3, sp, #200	; 0xc8
    5874:	1b1b      	subs	r3, r3, r4
    5876:	930e      	str	r3, [sp, #56]	; 0x38
    5878:	f7ff fb88 	bl	4f8c <_svfprintf_r+0x220>
    587c:	0000a84c 	.word	0x0000a84c
    5880:	0000a848 	.word	0x0000a848
    5884:	0000a85c 	.word	0x0000a85c
    5888:	981f      	ldr	r0, [sp, #124]	; 0x7c
    588a:	2800      	cmp	r0, #0
    588c:	dc00      	bgt.n	5890 <_svfprintf_r+0xb24>
    588e:	e296      	b.n	5dbe <_svfprintf_r+0x1052>
    5890:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5892:	9914      	ldr	r1, [sp, #80]	; 0x50
    5894:	0013      	movs	r3, r2
    5896:	4690      	mov	r8, r2
    5898:	428b      	cmp	r3, r1
    589a:	dd00      	ble.n	589e <_svfprintf_r+0xb32>
    589c:	4688      	mov	r8, r1
    589e:	4643      	mov	r3, r8
    58a0:	2b00      	cmp	r3, #0
    58a2:	dd0c      	ble.n	58be <_svfprintf_r+0xb52>
    58a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
    58a6:	4444      	add	r4, r8
    58a8:	6033      	str	r3, [r6, #0]
    58aa:	4643      	mov	r3, r8
    58ac:	6073      	str	r3, [r6, #4]
    58ae:	687b      	ldr	r3, [r7, #4]
    58b0:	60bc      	str	r4, [r7, #8]
    58b2:	3301      	adds	r3, #1
    58b4:	607b      	str	r3, [r7, #4]
    58b6:	2b07      	cmp	r3, #7
    58b8:	dd00      	ble.n	58bc <_svfprintf_r+0xb50>
    58ba:	e3b7      	b.n	602c <_svfprintf_r+0x12c0>
    58bc:	3608      	adds	r6, #8
    58be:	4643      	mov	r3, r8
    58c0:	43db      	mvns	r3, r3
    58c2:	4642      	mov	r2, r8
    58c4:	17db      	asrs	r3, r3, #31
    58c6:	4013      	ands	r3, r2
    58c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    58ca:	1ad3      	subs	r3, r2, r3
    58cc:	4698      	mov	r8, r3
    58ce:	2b00      	cmp	r3, #0
    58d0:	dc00      	bgt.n	58d4 <_svfprintf_r+0xb68>
    58d2:	e128      	b.n	5b26 <_svfprintf_r+0xdba>
    58d4:	2b10      	cmp	r3, #16
    58d6:	dc01      	bgt.n	58dc <_svfprintf_r+0xb70>
    58d8:	f000 fce7 	bl	62aa <_svfprintf_r+0x153e>
    58dc:	4acf      	ldr	r2, [pc, #828]	; (5c1c <_svfprintf_r+0xeb0>)
    58de:	0021      	movs	r1, r4
    58e0:	4691      	mov	r9, r2
    58e2:	2210      	movs	r2, #16
    58e4:	687b      	ldr	r3, [r7, #4]
    58e6:	4692      	mov	sl, r2
    58e8:	9d09      	ldr	r5, [sp, #36]	; 0x24
    58ea:	0032      	movs	r2, r6
    58ec:	464c      	mov	r4, r9
    58ee:	4646      	mov	r6, r8
    58f0:	e004      	b.n	58fc <_svfprintf_r+0xb90>
    58f2:	3208      	adds	r2, #8
    58f4:	3e10      	subs	r6, #16
    58f6:	2e10      	cmp	r6, #16
    58f8:	dc00      	bgt.n	58fc <_svfprintf_r+0xb90>
    58fa:	e104      	b.n	5b06 <_svfprintf_r+0xd9a>
    58fc:	4650      	mov	r0, sl
    58fe:	3110      	adds	r1, #16
    5900:	3301      	adds	r3, #1
    5902:	6014      	str	r4, [r2, #0]
    5904:	6050      	str	r0, [r2, #4]
    5906:	60b9      	str	r1, [r7, #8]
    5908:	607b      	str	r3, [r7, #4]
    590a:	2b07      	cmp	r3, #7
    590c:	ddf1      	ble.n	58f2 <_svfprintf_r+0xb86>
    590e:	003a      	movs	r2, r7
    5910:	9906      	ldr	r1, [sp, #24]
    5912:	0028      	movs	r0, r5
    5914:	f002 fddc 	bl	84d0 <__ssprint_r>
    5918:	2800      	cmp	r0, #0
    591a:	d001      	beq.n	5920 <_svfprintf_r+0xbb4>
    591c:	f7ff faad 	bl	4e7a <_svfprintf_r+0x10e>
    5920:	68b9      	ldr	r1, [r7, #8]
    5922:	687b      	ldr	r3, [r7, #4]
    5924:	aa32      	add	r2, sp, #200	; 0xc8
    5926:	e7e5      	b.n	58f4 <_svfprintf_r+0xb88>
    5928:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    592a:	2b00      	cmp	r3, #0
    592c:	d100      	bne.n	5930 <_svfprintf_r+0xbc4>
    592e:	e0ca      	b.n	5ac6 <_svfprintf_r+0xd5a>
    5930:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    5932:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    5934:	ab32      	add	r3, sp, #200	; 0xc8
    5936:	46b1      	mov	r9, r6
    5938:	001e      	movs	r6, r3
    593a:	0020      	movs	r0, r4
    593c:	0029      	movs	r1, r5
    593e:	220a      	movs	r2, #10
    5940:	2300      	movs	r3, #0
    5942:	f7fd fcf7 	bl	3334 <__aeabi_uldivmod>
    5946:	3e01      	subs	r6, #1
    5948:	3230      	adds	r2, #48	; 0x30
    594a:	7032      	strb	r2, [r6, #0]
    594c:	2300      	movs	r3, #0
    594e:	0020      	movs	r0, r4
    5950:	0029      	movs	r1, r5
    5952:	220a      	movs	r2, #10
    5954:	f7fd fcee 	bl	3334 <__aeabi_uldivmod>
    5958:	0003      	movs	r3, r0
    595a:	0004      	movs	r4, r0
    595c:	000d      	movs	r5, r1
    595e:	430b      	orrs	r3, r1
    5960:	d1eb      	bne.n	593a <_svfprintf_r+0xbce>
    5962:	0032      	movs	r2, r6
    5964:	ab32      	add	r3, sp, #200	; 0xc8
    5966:	1a9b      	subs	r3, r3, r2
    5968:	9611      	str	r6, [sp, #68]	; 0x44
    596a:	940c      	str	r4, [sp, #48]	; 0x30
    596c:	950d      	str	r5, [sp, #52]	; 0x34
    596e:	464e      	mov	r6, r9
    5970:	930e      	str	r3, [sp, #56]	; 0x38
    5972:	f7ff fb0b 	bl	4f8c <_svfprintf_r+0x220>
    5976:	2300      	movs	r3, #0
    5978:	930e      	str	r3, [sp, #56]	; 0x38
    597a:	ab32      	add	r3, sp, #200	; 0xc8
    597c:	9311      	str	r3, [sp, #68]	; 0x44
    597e:	f7ff fb05 	bl	4f8c <_svfprintf_r+0x220>
    5982:	003a      	movs	r2, r7
    5984:	9906      	ldr	r1, [sp, #24]
    5986:	9809      	ldr	r0, [sp, #36]	; 0x24
    5988:	f002 fda2 	bl	84d0 <__ssprint_r>
    598c:	2800      	cmp	r0, #0
    598e:	d001      	beq.n	5994 <_svfprintf_r+0xc28>
    5990:	f7ff fa73 	bl	4e7a <_svfprintf_r+0x10e>
    5994:	ab16      	add	r3, sp, #88	; 0x58
    5996:	7fdb      	ldrb	r3, [r3, #31]
    5998:	68bc      	ldr	r4, [r7, #8]
    599a:	4698      	mov	r8, r3
    599c:	ae32      	add	r6, sp, #200	; 0xc8
    599e:	e560      	b.n	5462 <_svfprintf_r+0x6f6>
    59a0:	9b14      	ldr	r3, [sp, #80]	; 0x50
    59a2:	1e5d      	subs	r5, r3, #1
    59a4:	2d00      	cmp	r5, #0
    59a6:	dc00      	bgt.n	59aa <_svfprintf_r+0xc3e>
    59a8:	e666      	b.n	5678 <_svfprintf_r+0x90c>
    59aa:	4b9c      	ldr	r3, [pc, #624]	; (5c1c <_svfprintf_r+0xeb0>)
    59ac:	4699      	mov	r9, r3
    59ae:	2d10      	cmp	r5, #16
    59b0:	dd29      	ble.n	5a06 <_svfprintf_r+0xc9a>
    59b2:	2310      	movs	r3, #16
    59b4:	0032      	movs	r2, r6
    59b6:	469a      	mov	sl, r3
    59b8:	002e      	movs	r6, r5
    59ba:	0021      	movs	r1, r4
    59bc:	4643      	mov	r3, r8
    59be:	9c09      	ldr	r4, [sp, #36]	; 0x24
    59c0:	464d      	mov	r5, r9
    59c2:	e003      	b.n	59cc <_svfprintf_r+0xc60>
    59c4:	3e10      	subs	r6, #16
    59c6:	3208      	adds	r2, #8
    59c8:	2e10      	cmp	r6, #16
    59ca:	dd17      	ble.n	59fc <_svfprintf_r+0xc90>
    59cc:	4650      	mov	r0, sl
    59ce:	3110      	adds	r1, #16
    59d0:	3301      	adds	r3, #1
    59d2:	6015      	str	r5, [r2, #0]
    59d4:	6050      	str	r0, [r2, #4]
    59d6:	60b9      	str	r1, [r7, #8]
    59d8:	607b      	str	r3, [r7, #4]
    59da:	2b07      	cmp	r3, #7
    59dc:	ddf2      	ble.n	59c4 <_svfprintf_r+0xc58>
    59de:	003a      	movs	r2, r7
    59e0:	9906      	ldr	r1, [sp, #24]
    59e2:	0020      	movs	r0, r4
    59e4:	f002 fd74 	bl	84d0 <__ssprint_r>
    59e8:	2800      	cmp	r0, #0
    59ea:	d001      	beq.n	59f0 <_svfprintf_r+0xc84>
    59ec:	f7ff fa45 	bl	4e7a <_svfprintf_r+0x10e>
    59f0:	3e10      	subs	r6, #16
    59f2:	68b9      	ldr	r1, [r7, #8]
    59f4:	687b      	ldr	r3, [r7, #4]
    59f6:	aa32      	add	r2, sp, #200	; 0xc8
    59f8:	2e10      	cmp	r6, #16
    59fa:	dce7      	bgt.n	59cc <_svfprintf_r+0xc60>
    59fc:	46a9      	mov	r9, r5
    59fe:	000c      	movs	r4, r1
    5a00:	0035      	movs	r5, r6
    5a02:	4698      	mov	r8, r3
    5a04:	0016      	movs	r6, r2
    5a06:	464b      	mov	r3, r9
    5a08:	6075      	str	r5, [r6, #4]
    5a0a:	6033      	str	r3, [r6, #0]
    5a0c:	1964      	adds	r4, r4, r5
    5a0e:	e629      	b.n	5664 <_svfprintf_r+0x8f8>
    5a10:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5a12:	681a      	ldr	r2, [r3, #0]
    5a14:	f7ff fbfb 	bl	520e <_svfprintf_r+0x4a2>
    5a18:	6813      	ldr	r3, [r2, #0]
    5a1a:	9307      	str	r3, [sp, #28]
    5a1c:	f7ff fa82 	bl	4f24 <_svfprintf_r+0x1b8>
    5a20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5a22:	681a      	ldr	r2, [r3, #0]
    5a24:	f7ff fb84 	bl	5130 <_svfprintf_r+0x3c4>
    5a28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5a2a:	681a      	ldr	r2, [r3, #0]
    5a2c:	f7ff fbd1 	bl	51d2 <_svfprintf_r+0x466>
    5a30:	9b19      	ldr	r3, [sp, #100]	; 0x64
    5a32:	68ba      	ldr	r2, [r7, #8]
    5a34:	6033      	str	r3, [r6, #0]
    5a36:	9b18      	ldr	r3, [sp, #96]	; 0x60
    5a38:	469c      	mov	ip, r3
    5a3a:	6073      	str	r3, [r6, #4]
    5a3c:	687b      	ldr	r3, [r7, #4]
    5a3e:	4462      	add	r2, ip
    5a40:	3301      	adds	r3, #1
    5a42:	0014      	movs	r4, r2
    5a44:	60ba      	str	r2, [r7, #8]
    5a46:	607b      	str	r3, [r7, #4]
    5a48:	2b07      	cmp	r3, #7
    5a4a:	dd00      	ble.n	5a4e <_svfprintf_r+0xce2>
    5a4c:	e202      	b.n	5e54 <_svfprintf_r+0x10e8>
    5a4e:	3608      	adds	r6, #8
    5a50:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5a52:	1e5d      	subs	r5, r3, #1
    5a54:	2d00      	cmp	r5, #0
    5a56:	dc00      	bgt.n	5a5a <_svfprintf_r+0xcee>
    5a58:	e57e      	b.n	5558 <_svfprintf_r+0x7ec>
    5a5a:	4a70      	ldr	r2, [pc, #448]	; (5c1c <_svfprintf_r+0xeb0>)
    5a5c:	687b      	ldr	r3, [r7, #4]
    5a5e:	4691      	mov	r9, r2
    5a60:	2d10      	cmp	r5, #16
    5a62:	dd25      	ble.n	5ab0 <_svfprintf_r+0xd44>
    5a64:	2210      	movs	r2, #16
    5a66:	0021      	movs	r1, r4
    5a68:	4690      	mov	r8, r2
    5a6a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    5a6c:	0032      	movs	r2, r6
    5a6e:	002e      	movs	r6, r5
    5a70:	464d      	mov	r5, r9
    5a72:	e003      	b.n	5a7c <_svfprintf_r+0xd10>
    5a74:	3208      	adds	r2, #8
    5a76:	3e10      	subs	r6, #16
    5a78:	2e10      	cmp	r6, #16
    5a7a:	dd15      	ble.n	5aa8 <_svfprintf_r+0xd3c>
    5a7c:	4640      	mov	r0, r8
    5a7e:	3110      	adds	r1, #16
    5a80:	3301      	adds	r3, #1
    5a82:	6015      	str	r5, [r2, #0]
    5a84:	6050      	str	r0, [r2, #4]
    5a86:	60b9      	str	r1, [r7, #8]
    5a88:	607b      	str	r3, [r7, #4]
    5a8a:	2b07      	cmp	r3, #7
    5a8c:	ddf2      	ble.n	5a74 <_svfprintf_r+0xd08>
    5a8e:	003a      	movs	r2, r7
    5a90:	9906      	ldr	r1, [sp, #24]
    5a92:	0020      	movs	r0, r4
    5a94:	f002 fd1c 	bl	84d0 <__ssprint_r>
    5a98:	2800      	cmp	r0, #0
    5a9a:	d001      	beq.n	5aa0 <_svfprintf_r+0xd34>
    5a9c:	f7ff f9ed 	bl	4e7a <_svfprintf_r+0x10e>
    5aa0:	68b9      	ldr	r1, [r7, #8]
    5aa2:	687b      	ldr	r3, [r7, #4]
    5aa4:	aa32      	add	r2, sp, #200	; 0xc8
    5aa6:	e7e6      	b.n	5a76 <_svfprintf_r+0xd0a>
    5aa8:	46a9      	mov	r9, r5
    5aaa:	000c      	movs	r4, r1
    5aac:	0035      	movs	r5, r6
    5aae:	0016      	movs	r6, r2
    5ab0:	464a      	mov	r2, r9
    5ab2:	1964      	adds	r4, r4, r5
    5ab4:	3301      	adds	r3, #1
    5ab6:	6032      	str	r2, [r6, #0]
    5ab8:	6075      	str	r5, [r6, #4]
    5aba:	60bc      	str	r4, [r7, #8]
    5abc:	607b      	str	r3, [r7, #4]
    5abe:	2b07      	cmp	r3, #7
    5ac0:	dc00      	bgt.n	5ac4 <_svfprintf_r+0xd58>
    5ac2:	e548      	b.n	5556 <_svfprintf_r+0x7ea>
    5ac4:	e5e5      	b.n	5692 <_svfprintf_r+0x926>
    5ac6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5ac8:	2b09      	cmp	r3, #9
    5aca:	d900      	bls.n	5ace <_svfprintf_r+0xd62>
    5acc:	e730      	b.n	5930 <_svfprintf_r+0xbc4>
    5ace:	9c08      	ldr	r4, [sp, #32]
    5ad0:	2227      	movs	r2, #39	; 0x27
    5ad2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5ad4:	a928      	add	r1, sp, #160	; 0xa0
    5ad6:	3330      	adds	r3, #48	; 0x30
    5ad8:	548b      	strb	r3, [r1, r2]
    5ada:	2301      	movs	r3, #1
    5adc:	aa16      	add	r2, sp, #88	; 0x58
    5ade:	4694      	mov	ip, r2
    5ae0:	930e      	str	r3, [sp, #56]	; 0x38
    5ae2:	336e      	adds	r3, #110	; 0x6e
    5ae4:	4463      	add	r3, ip
    5ae6:	9408      	str	r4, [sp, #32]
    5ae8:	9311      	str	r3, [sp, #68]	; 0x44
    5aea:	f7ff fa4f 	bl	4f8c <_svfprintf_r+0x220>
    5aee:	2b30      	cmp	r3, #48	; 0x30
    5af0:	d100      	bne.n	5af4 <_svfprintf_r+0xd88>
    5af2:	e20b      	b.n	5f0c <_svfprintf_r+0x11a0>
    5af4:	2330      	movs	r3, #48	; 0x30
    5af6:	3a02      	subs	r2, #2
    5af8:	7013      	strb	r3, [r2, #0]
    5afa:	ab32      	add	r3, sp, #200	; 0xc8
    5afc:	1a9b      	subs	r3, r3, r2
    5afe:	930e      	str	r3, [sp, #56]	; 0x38
    5b00:	9211      	str	r2, [sp, #68]	; 0x44
    5b02:	f7ff fa43 	bl	4f8c <_svfprintf_r+0x220>
    5b06:	46b0      	mov	r8, r6
    5b08:	46a1      	mov	r9, r4
    5b0a:	0016      	movs	r6, r2
    5b0c:	000c      	movs	r4, r1
    5b0e:	464a      	mov	r2, r9
    5b10:	6032      	str	r2, [r6, #0]
    5b12:	4642      	mov	r2, r8
    5b14:	4444      	add	r4, r8
    5b16:	3301      	adds	r3, #1
    5b18:	6072      	str	r2, [r6, #4]
    5b1a:	60bc      	str	r4, [r7, #8]
    5b1c:	607b      	str	r3, [r7, #4]
    5b1e:	2b07      	cmp	r3, #7
    5b20:	dd00      	ble.n	5b24 <_svfprintf_r+0xdb8>
    5b22:	e29c      	b.n	605e <_svfprintf_r+0x12f2>
    5b24:	3608      	adds	r6, #8
    5b26:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5b28:	9a14      	ldr	r2, [sp, #80]	; 0x50
    5b2a:	4293      	cmp	r3, r2
    5b2c:	db4c      	blt.n	5bc8 <_svfprintf_r+0xe5c>
    5b2e:	9a08      	ldr	r2, [sp, #32]
    5b30:	07d2      	lsls	r2, r2, #31
    5b32:	d449      	bmi.n	5bc8 <_svfprintf_r+0xe5c>
    5b34:	9a14      	ldr	r2, [sp, #80]	; 0x50
    5b36:	9913      	ldr	r1, [sp, #76]	; 0x4c
    5b38:	1ad3      	subs	r3, r2, r3
    5b3a:	1a52      	subs	r2, r2, r1
    5b3c:	4690      	mov	r8, r2
    5b3e:	429a      	cmp	r2, r3
    5b40:	dd00      	ble.n	5b44 <_svfprintf_r+0xdd8>
    5b42:	4698      	mov	r8, r3
    5b44:	4642      	mov	r2, r8
    5b46:	2a00      	cmp	r2, #0
    5b48:	dd0f      	ble.n	5b6a <_svfprintf_r+0xdfe>
    5b4a:	9913      	ldr	r1, [sp, #76]	; 0x4c
    5b4c:	9a11      	ldr	r2, [sp, #68]	; 0x44
    5b4e:	468c      	mov	ip, r1
    5b50:	4462      	add	r2, ip
    5b52:	6032      	str	r2, [r6, #0]
    5b54:	4642      	mov	r2, r8
    5b56:	6072      	str	r2, [r6, #4]
    5b58:	687a      	ldr	r2, [r7, #4]
    5b5a:	4444      	add	r4, r8
    5b5c:	3201      	adds	r2, #1
    5b5e:	60bc      	str	r4, [r7, #8]
    5b60:	607a      	str	r2, [r7, #4]
    5b62:	2a07      	cmp	r2, #7
    5b64:	dd00      	ble.n	5b68 <_svfprintf_r+0xdfc>
    5b66:	e286      	b.n	6076 <_svfprintf_r+0x130a>
    5b68:	3608      	adds	r6, #8
    5b6a:	4642      	mov	r2, r8
    5b6c:	43d5      	mvns	r5, r2
    5b6e:	17ed      	asrs	r5, r5, #31
    5b70:	4015      	ands	r5, r2
    5b72:	1b5d      	subs	r5, r3, r5
    5b74:	2d00      	cmp	r5, #0
    5b76:	dc00      	bgt.n	5b7a <_svfprintf_r+0xe0e>
    5b78:	e4ee      	b.n	5558 <_svfprintf_r+0x7ec>
    5b7a:	4a28      	ldr	r2, [pc, #160]	; (5c1c <_svfprintf_r+0xeb0>)
    5b7c:	687b      	ldr	r3, [r7, #4]
    5b7e:	4691      	mov	r9, r2
    5b80:	2d10      	cmp	r5, #16
    5b82:	dd95      	ble.n	5ab0 <_svfprintf_r+0xd44>
    5b84:	2210      	movs	r2, #16
    5b86:	0021      	movs	r1, r4
    5b88:	4690      	mov	r8, r2
    5b8a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    5b8c:	0032      	movs	r2, r6
    5b8e:	002e      	movs	r6, r5
    5b90:	464d      	mov	r5, r9
    5b92:	e003      	b.n	5b9c <_svfprintf_r+0xe30>
    5b94:	3208      	adds	r2, #8
    5b96:	3e10      	subs	r6, #16
    5b98:	2e10      	cmp	r6, #16
    5b9a:	dd85      	ble.n	5aa8 <_svfprintf_r+0xd3c>
    5b9c:	4640      	mov	r0, r8
    5b9e:	3110      	adds	r1, #16
    5ba0:	3301      	adds	r3, #1
    5ba2:	6015      	str	r5, [r2, #0]
    5ba4:	6050      	str	r0, [r2, #4]
    5ba6:	60b9      	str	r1, [r7, #8]
    5ba8:	607b      	str	r3, [r7, #4]
    5baa:	2b07      	cmp	r3, #7
    5bac:	ddf2      	ble.n	5b94 <_svfprintf_r+0xe28>
    5bae:	003a      	movs	r2, r7
    5bb0:	9906      	ldr	r1, [sp, #24]
    5bb2:	0020      	movs	r0, r4
    5bb4:	f002 fc8c 	bl	84d0 <__ssprint_r>
    5bb8:	2800      	cmp	r0, #0
    5bba:	d001      	beq.n	5bc0 <_svfprintf_r+0xe54>
    5bbc:	f7ff f95d 	bl	4e7a <_svfprintf_r+0x10e>
    5bc0:	68b9      	ldr	r1, [r7, #8]
    5bc2:	687b      	ldr	r3, [r7, #4]
    5bc4:	aa32      	add	r2, sp, #200	; 0xc8
    5bc6:	e7e6      	b.n	5b96 <_svfprintf_r+0xe2a>
    5bc8:	9a19      	ldr	r2, [sp, #100]	; 0x64
    5bca:	6032      	str	r2, [r6, #0]
    5bcc:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5bce:	4694      	mov	ip, r2
    5bd0:	6072      	str	r2, [r6, #4]
    5bd2:	687a      	ldr	r2, [r7, #4]
    5bd4:	4464      	add	r4, ip
    5bd6:	3201      	adds	r2, #1
    5bd8:	60bc      	str	r4, [r7, #8]
    5bda:	607a      	str	r2, [r7, #4]
    5bdc:	2a07      	cmp	r2, #7
    5bde:	dd00      	ble.n	5be2 <_svfprintf_r+0xe76>
    5be0:	e230      	b.n	6044 <_svfprintf_r+0x12d8>
    5be2:	3608      	adds	r6, #8
    5be4:	e7a6      	b.n	5b34 <_svfprintf_r+0xdc8>
    5be6:	003a      	movs	r2, r7
    5be8:	9906      	ldr	r1, [sp, #24]
    5bea:	9809      	ldr	r0, [sp, #36]	; 0x24
    5bec:	f002 fc70 	bl	84d0 <__ssprint_r>
    5bf0:	2800      	cmp	r0, #0
    5bf2:	d001      	beq.n	5bf8 <_svfprintf_r+0xe8c>
    5bf4:	f7ff f941 	bl	4e7a <_svfprintf_r+0x10e>
    5bf8:	68bc      	ldr	r4, [r7, #8]
    5bfa:	687b      	ldr	r3, [r7, #4]
    5bfc:	ae32      	add	r6, sp, #200	; 0xc8
    5bfe:	e513      	b.n	5628 <_svfprintf_r+0x8bc>
    5c00:	003a      	movs	r2, r7
    5c02:	9906      	ldr	r1, [sp, #24]
    5c04:	9809      	ldr	r0, [sp, #36]	; 0x24
    5c06:	f002 fc63 	bl	84d0 <__ssprint_r>
    5c0a:	2800      	cmp	r0, #0
    5c0c:	d001      	beq.n	5c12 <_svfprintf_r+0xea6>
    5c0e:	f7ff f934 	bl	4e7a <_svfprintf_r+0x10e>
    5c12:	687b      	ldr	r3, [r7, #4]
    5c14:	68bc      	ldr	r4, [r7, #8]
    5c16:	4698      	mov	r8, r3
    5c18:	ae32      	add	r6, sp, #200	; 0xc8
    5c1a:	e513      	b.n	5644 <_svfprintf_r+0x8d8>
    5c1c:	0000a85c 	.word	0x0000a85c
    5c20:	2307      	movs	r3, #7
    5c22:	3207      	adds	r2, #7
    5c24:	439a      	bics	r2, r3
    5c26:	3301      	adds	r3, #1
    5c28:	469c      	mov	ip, r3
    5c2a:	4494      	add	ip, r2
    5c2c:	4663      	mov	r3, ip
    5c2e:	930f      	str	r3, [sp, #60]	; 0x3c
    5c30:	6853      	ldr	r3, [r2, #4]
    5c32:	6812      	ldr	r2, [r2, #0]
    5c34:	930d      	str	r3, [sp, #52]	; 0x34
    5c36:	920c      	str	r2, [sp, #48]	; 0x30
    5c38:	2b00      	cmp	r3, #0
    5c3a:	db01      	blt.n	5c40 <_svfprintf_r+0xed4>
    5c3c:	f7ff f97a 	bl	4f34 <_svfprintf_r+0x1c8>
    5c40:	980c      	ldr	r0, [sp, #48]	; 0x30
    5c42:	990d      	ldr	r1, [sp, #52]	; 0x34
    5c44:	2300      	movs	r3, #0
    5c46:	4242      	negs	r2, r0
    5c48:	418b      	sbcs	r3, r1
    5c4a:	0011      	movs	r1, r2
    5c4c:	001a      	movs	r2, r3
    5c4e:	232d      	movs	r3, #45	; 0x2d
    5c50:	a816      	add	r0, sp, #88	; 0x58
    5c52:	77c3      	strb	r3, [r0, #31]
    5c54:	0008      	movs	r0, r1
    5c56:	4310      	orrs	r0, r2
    5c58:	910c      	str	r1, [sp, #48]	; 0x30
    5c5a:	920d      	str	r2, [sp, #52]	; 0x34
    5c5c:	4698      	mov	r8, r3
    5c5e:	0002      	movs	r2, r0
    5c60:	3b2c      	subs	r3, #44	; 0x2c
    5c62:	f7ff f970 	bl	4f46 <_svfprintf_r+0x1da>
    5c66:	003a      	movs	r2, r7
    5c68:	9906      	ldr	r1, [sp, #24]
    5c6a:	9809      	ldr	r0, [sp, #36]	; 0x24
    5c6c:	f002 fc30 	bl	84d0 <__ssprint_r>
    5c70:	2800      	cmp	r0, #0
    5c72:	d001      	beq.n	5c78 <_svfprintf_r+0xf0c>
    5c74:	f7ff f901 	bl	4e7a <_svfprintf_r+0x10e>
    5c78:	68bc      	ldr	r4, [r7, #8]
    5c7a:	ae32      	add	r6, sp, #200	; 0xc8
    5c7c:	e418      	b.n	54b0 <_svfprintf_r+0x744>
    5c7e:	9916      	ldr	r1, [sp, #88]	; 0x58
    5c80:	9d15      	ldr	r5, [sp, #84]	; 0x54
    5c82:	000a      	movs	r2, r1
    5c84:	0008      	movs	r0, r1
    5c86:	002b      	movs	r3, r5
    5c88:	0029      	movs	r1, r5
    5c8a:	f003 fa99 	bl	91c0 <__aeabi_dcmpun>
    5c8e:	2800      	cmp	r0, #0
    5c90:	d000      	beq.n	5c94 <_svfprintf_r+0xf28>
    5c92:	e2e6      	b.n	6262 <_svfprintf_r+0x14f6>
    5c94:	4653      	mov	r3, sl
    5c96:	3301      	adds	r3, #1
    5c98:	d100      	bne.n	5c9c <_svfprintf_r+0xf30>
    5c9a:	e20d      	b.n	60b8 <_svfprintf_r+0x134c>
    5c9c:	2320      	movs	r3, #32
    5c9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5ca0:	439a      	bics	r2, r3
    5ca2:	920e      	str	r2, [sp, #56]	; 0x38
    5ca4:	2a47      	cmp	r2, #71	; 0x47
    5ca6:	d100      	bne.n	5caa <_svfprintf_r+0xf3e>
    5ca8:	e11c      	b.n	5ee4 <_svfprintf_r+0x1178>
    5caa:	2380      	movs	r3, #128	; 0x80
    5cac:	005b      	lsls	r3, r3, #1
    5cae:	4323      	orrs	r3, r4
    5cb0:	9308      	str	r3, [sp, #32]
    5cb2:	9b15      	ldr	r3, [sp, #84]	; 0x54
    5cb4:	2b00      	cmp	r3, #0
    5cb6:	da00      	bge.n	5cba <_svfprintf_r+0xf4e>
    5cb8:	e221      	b.n	60fe <_svfprintf_r+0x1392>
    5cba:	9a16      	ldr	r2, [sp, #88]	; 0x58
    5cbc:	9307      	str	r3, [sp, #28]
    5cbe:	2300      	movs	r3, #0
    5cc0:	4691      	mov	r9, r2
    5cc2:	9310      	str	r3, [sp, #64]	; 0x40
    5cc4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5cc6:	2b66      	cmp	r3, #102	; 0x66
    5cc8:	d100      	bne.n	5ccc <_svfprintf_r+0xf60>
    5cca:	e1fc      	b.n	60c6 <_svfprintf_r+0x135a>
    5ccc:	2b46      	cmp	r3, #70	; 0x46
    5cce:	d100      	bne.n	5cd2 <_svfprintf_r+0xf66>
    5cd0:	e0db      	b.n	5e8a <_svfprintf_r+0x111e>
    5cd2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    5cd4:	9809      	ldr	r0, [sp, #36]	; 0x24
    5cd6:	3a45      	subs	r2, #69	; 0x45
    5cd8:	0013      	movs	r3, r2
    5cda:	4259      	negs	r1, r3
    5cdc:	4159      	adcs	r1, r3
    5cde:	ab20      	add	r3, sp, #128	; 0x80
    5ce0:	000d      	movs	r5, r1
    5ce2:	9303      	str	r3, [sp, #12]
    5ce4:	ab1f      	add	r3, sp, #124	; 0x7c
    5ce6:	9302      	str	r3, [sp, #8]
    5ce8:	2302      	movs	r3, #2
    5cea:	aa23      	add	r2, sp, #140	; 0x8c
    5cec:	4455      	add	r5, sl
    5cee:	921b      	str	r2, [sp, #108]	; 0x6c
    5cf0:	9204      	str	r2, [sp, #16]
    5cf2:	9300      	str	r3, [sp, #0]
    5cf4:	9501      	str	r5, [sp, #4]
    5cf6:	9b07      	ldr	r3, [sp, #28]
    5cf8:	464a      	mov	r2, r9
    5cfa:	f000 fbf9 	bl	64f0 <_dtoa_r>
    5cfe:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5d00:	9011      	str	r0, [sp, #68]	; 0x44
    5d02:	2b67      	cmp	r3, #103	; 0x67
    5d04:	d000      	beq.n	5d08 <_svfprintf_r+0xf9c>
    5d06:	e239      	b.n	617c <_svfprintf_r+0x1410>
    5d08:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5d0a:	4698      	mov	r8, r3
    5d0c:	44a8      	add	r8, r5
    5d0e:	07e3      	lsls	r3, r4, #31
    5d10:	d400      	bmi.n	5d14 <_svfprintf_r+0xfa8>
    5d12:	e28b      	b.n	622c <_svfprintf_r+0x14c0>
    5d14:	2300      	movs	r3, #0
    5d16:	2200      	movs	r2, #0
    5d18:	4648      	mov	r0, r9
    5d1a:	9907      	ldr	r1, [sp, #28]
    5d1c:	f7fe fe1e 	bl	495c <__aeabi_dcmpeq>
    5d20:	4643      	mov	r3, r8
    5d22:	2800      	cmp	r0, #0
    5d24:	d10a      	bne.n	5d3c <_svfprintf_r+0xfd0>
    5d26:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5d28:	4543      	cmp	r3, r8
    5d2a:	d207      	bcs.n	5d3c <_svfprintf_r+0xfd0>
    5d2c:	2130      	movs	r1, #48	; 0x30
    5d2e:	4640      	mov	r0, r8
    5d30:	1c5a      	adds	r2, r3, #1
    5d32:	9223      	str	r2, [sp, #140]	; 0x8c
    5d34:	7019      	strb	r1, [r3, #0]
    5d36:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5d38:	4298      	cmp	r0, r3
    5d3a:	d8f9      	bhi.n	5d30 <_svfprintf_r+0xfc4>
    5d3c:	9a11      	ldr	r2, [sp, #68]	; 0x44
    5d3e:	1a9b      	subs	r3, r3, r2
    5d40:	9314      	str	r3, [sp, #80]	; 0x50
    5d42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5d44:	2b47      	cmp	r3, #71	; 0x47
    5d46:	d100      	bne.n	5d4a <_svfprintf_r+0xfde>
    5d48:	e0f6      	b.n	5f38 <_svfprintf_r+0x11cc>
    5d4a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5d4c:	2b65      	cmp	r3, #101	; 0x65
    5d4e:	dc00      	bgt.n	5d52 <_svfprintf_r+0xfe6>
    5d50:	e226      	b.n	61a0 <_svfprintf_r+0x1434>
    5d52:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5d54:	2b66      	cmp	r3, #102	; 0x66
    5d56:	d100      	bne.n	5d5a <_svfprintf_r+0xfee>
    5d58:	e1f4      	b.n	6144 <_svfprintf_r+0x13d8>
    5d5a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5d5c:	9313      	str	r3, [sp, #76]	; 0x4c
    5d5e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5d60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5d62:	0019      	movs	r1, r3
    5d64:	4291      	cmp	r1, r2
    5d66:	dd00      	ble.n	5d6a <_svfprintf_r+0xffe>
    5d68:	e1d4      	b.n	6114 <_svfprintf_r+0x13a8>
    5d6a:	07e3      	lsls	r3, r4, #31
    5d6c:	d500      	bpl.n	5d70 <_svfprintf_r+0x1004>
    5d6e:	e249      	b.n	6204 <_svfprintf_r+0x1498>
    5d70:	43d3      	mvns	r3, r2
    5d72:	17db      	asrs	r3, r3, #31
    5d74:	0011      	movs	r1, r2
    5d76:	401a      	ands	r2, r3
    5d78:	2367      	movs	r3, #103	; 0x67
    5d7a:	9207      	str	r2, [sp, #28]
    5d7c:	910e      	str	r1, [sp, #56]	; 0x38
    5d7e:	9312      	str	r3, [sp, #72]	; 0x48
    5d80:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5d82:	2b00      	cmp	r3, #0
    5d84:	d000      	beq.n	5d88 <_svfprintf_r+0x101c>
    5d86:	e0cf      	b.n	5f28 <_svfprintf_r+0x11bc>
    5d88:	ab16      	add	r3, sp, #88	; 0x58
    5d8a:	7fdb      	ldrb	r3, [r3, #31]
    5d8c:	4698      	mov	r8, r3
    5d8e:	2300      	movs	r3, #0
    5d90:	469a      	mov	sl, r3
    5d92:	f7ff f903 	bl	4f9c <_svfprintf_r+0x230>
    5d96:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    5d98:	990a      	ldr	r1, [sp, #40]	; 0x28
    5d9a:	6813      	ldr	r3, [r2, #0]
    5d9c:	6019      	str	r1, [r3, #0]
    5d9e:	0013      	movs	r3, r2
    5da0:	3304      	adds	r3, #4
    5da2:	930f      	str	r3, [sp, #60]	; 0x3c
    5da4:	f7ff f80d 	bl	4dc2 <_svfprintf_r+0x56>
    5da8:	003a      	movs	r2, r7
    5daa:	9906      	ldr	r1, [sp, #24]
    5dac:	9809      	ldr	r0, [sp, #36]	; 0x24
    5dae:	f002 fb8f 	bl	84d0 <__ssprint_r>
    5db2:	2800      	cmp	r0, #0
    5db4:	d001      	beq.n	5dba <_svfprintf_r+0x104e>
    5db6:	f7ff f860 	bl	4e7a <_svfprintf_r+0x10e>
    5dba:	ae32      	add	r6, sp, #200	; 0xc8
    5dbc:	e48e      	b.n	56dc <_svfprintf_r+0x970>
    5dbe:	4bde      	ldr	r3, [pc, #888]	; (6138 <_svfprintf_r+0x13cc>)
    5dc0:	3401      	adds	r4, #1
    5dc2:	6033      	str	r3, [r6, #0]
    5dc4:	2301      	movs	r3, #1
    5dc6:	6073      	str	r3, [r6, #4]
    5dc8:	687b      	ldr	r3, [r7, #4]
    5dca:	60bc      	str	r4, [r7, #8]
    5dcc:	3301      	adds	r3, #1
    5dce:	607b      	str	r3, [r7, #4]
    5dd0:	2b07      	cmp	r3, #7
    5dd2:	dc7a      	bgt.n	5eca <_svfprintf_r+0x115e>
    5dd4:	3608      	adds	r6, #8
    5dd6:	2800      	cmp	r0, #0
    5dd8:	d107      	bne.n	5dea <_svfprintf_r+0x107e>
    5dda:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5ddc:	2b00      	cmp	r3, #0
    5dde:	d104      	bne.n	5dea <_svfprintf_r+0x107e>
    5de0:	9b08      	ldr	r3, [sp, #32]
    5de2:	07db      	lsls	r3, r3, #31
    5de4:	d401      	bmi.n	5dea <_svfprintf_r+0x107e>
    5de6:	f7ff fbb7 	bl	5558 <_svfprintf_r+0x7ec>
    5dea:	9b19      	ldr	r3, [sp, #100]	; 0x64
    5dec:	6033      	str	r3, [r6, #0]
    5dee:	9b18      	ldr	r3, [sp, #96]	; 0x60
    5df0:	1919      	adds	r1, r3, r4
    5df2:	6073      	str	r3, [r6, #4]
    5df4:	687b      	ldr	r3, [r7, #4]
    5df6:	60b9      	str	r1, [r7, #8]
    5df8:	3301      	adds	r3, #1
    5dfa:	607b      	str	r3, [r7, #4]
    5dfc:	2b07      	cmp	r3, #7
    5dfe:	dd00      	ble.n	5e02 <_svfprintf_r+0x1096>
    5e00:	e1f2      	b.n	61e8 <_svfprintf_r+0x147c>
    5e02:	0032      	movs	r2, r6
    5e04:	3208      	adds	r2, #8
    5e06:	2800      	cmp	r0, #0
    5e08:	da00      	bge.n	5e0c <_svfprintf_r+0x10a0>
    5e0a:	e1cc      	b.n	61a6 <_svfprintf_r+0x143a>
    5e0c:	9811      	ldr	r0, [sp, #68]	; 0x44
    5e0e:	3301      	adds	r3, #1
    5e10:	6010      	str	r0, [r2, #0]
    5e12:	9814      	ldr	r0, [sp, #80]	; 0x50
    5e14:	607b      	str	r3, [r7, #4]
    5e16:	1844      	adds	r4, r0, r1
    5e18:	6050      	str	r0, [r2, #4]
    5e1a:	60bc      	str	r4, [r7, #8]
    5e1c:	2b07      	cmp	r3, #7
    5e1e:	dd00      	ble.n	5e22 <_svfprintf_r+0x10b6>
    5e20:	e437      	b.n	5692 <_svfprintf_r+0x926>
    5e22:	3208      	adds	r2, #8
    5e24:	0016      	movs	r6, r2
    5e26:	f7ff fb97 	bl	5558 <_svfprintf_r+0x7ec>
    5e2a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    5e2c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5e2e:	680b      	ldr	r3, [r1, #0]
    5e30:	601a      	str	r2, [r3, #0]
    5e32:	17d2      	asrs	r2, r2, #31
    5e34:	605a      	str	r2, [r3, #4]
    5e36:	000b      	movs	r3, r1
    5e38:	3304      	adds	r3, #4
    5e3a:	930f      	str	r3, [sp, #60]	; 0x3c
    5e3c:	f7fe ffc1 	bl	4dc2 <_svfprintf_r+0x56>
    5e40:	464b      	mov	r3, r9
    5e42:	3101      	adds	r1, #1
    5e44:	431c      	orrs	r4, r3
    5e46:	780b      	ldrb	r3, [r1, #0]
    5e48:	f7fe fff4 	bl	4e34 <_svfprintf_r+0xc8>
    5e4c:	4bbb      	ldr	r3, [pc, #748]	; (613c <_svfprintf_r+0x13d0>)
    5e4e:	9311      	str	r3, [sp, #68]	; 0x44
    5e50:	f7ff f937 	bl	50c2 <_svfprintf_r+0x356>
    5e54:	003a      	movs	r2, r7
    5e56:	9906      	ldr	r1, [sp, #24]
    5e58:	9809      	ldr	r0, [sp, #36]	; 0x24
    5e5a:	f002 fb39 	bl	84d0 <__ssprint_r>
    5e5e:	2800      	cmp	r0, #0
    5e60:	d001      	beq.n	5e66 <_svfprintf_r+0x10fa>
    5e62:	f7ff f80a 	bl	4e7a <_svfprintf_r+0x10e>
    5e66:	68bc      	ldr	r4, [r7, #8]
    5e68:	ae32      	add	r6, sp, #200	; 0xc8
    5e6a:	e5f1      	b.n	5a50 <_svfprintf_r+0xce4>
    5e6c:	2140      	movs	r1, #64	; 0x40
    5e6e:	9809      	ldr	r0, [sp, #36]	; 0x24
    5e70:	f001 fc5c 	bl	772c <_malloc_r>
    5e74:	9b06      	ldr	r3, [sp, #24]
    5e76:	6018      	str	r0, [r3, #0]
    5e78:	6118      	str	r0, [r3, #16]
    5e7a:	2800      	cmp	r0, #0
    5e7c:	d100      	bne.n	5e80 <_svfprintf_r+0x1114>
    5e7e:	e24f      	b.n	6320 <_svfprintf_r+0x15b4>
    5e80:	2340      	movs	r3, #64	; 0x40
    5e82:	9a06      	ldr	r2, [sp, #24]
    5e84:	6153      	str	r3, [r2, #20]
    5e86:	f7fe ff8e 	bl	4da6 <_svfprintf_r+0x3a>
    5e8a:	ab23      	add	r3, sp, #140	; 0x8c
    5e8c:	931b      	str	r3, [sp, #108]	; 0x6c
    5e8e:	9304      	str	r3, [sp, #16]
    5e90:	ab20      	add	r3, sp, #128	; 0x80
    5e92:	9303      	str	r3, [sp, #12]
    5e94:	ab1f      	add	r3, sp, #124	; 0x7c
    5e96:	9302      	str	r3, [sp, #8]
    5e98:	4653      	mov	r3, sl
    5e9a:	9301      	str	r3, [sp, #4]
    5e9c:	2303      	movs	r3, #3
    5e9e:	464a      	mov	r2, r9
    5ea0:	9300      	str	r3, [sp, #0]
    5ea2:	9809      	ldr	r0, [sp, #36]	; 0x24
    5ea4:	9b07      	ldr	r3, [sp, #28]
    5ea6:	f000 fb23 	bl	64f0 <_dtoa_r>
    5eaa:	4655      	mov	r5, sl
    5eac:	9011      	str	r0, [sp, #68]	; 0x44
    5eae:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5eb0:	4698      	mov	r8, r3
    5eb2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5eb4:	44a8      	add	r8, r5
    5eb6:	2b46      	cmp	r3, #70	; 0x46
    5eb8:	d000      	beq.n	5ebc <_svfprintf_r+0x1150>
    5eba:	e72b      	b.n	5d14 <_svfprintf_r+0xfa8>
    5ebc:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5ebe:	781b      	ldrb	r3, [r3, #0]
    5ec0:	2b30      	cmp	r3, #48	; 0x30
    5ec2:	d016      	beq.n	5ef2 <_svfprintf_r+0x1186>
    5ec4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5ec6:	4498      	add	r8, r3
    5ec8:	e724      	b.n	5d14 <_svfprintf_r+0xfa8>
    5eca:	003a      	movs	r2, r7
    5ecc:	9906      	ldr	r1, [sp, #24]
    5ece:	9809      	ldr	r0, [sp, #36]	; 0x24
    5ed0:	f002 fafe 	bl	84d0 <__ssprint_r>
    5ed4:	2800      	cmp	r0, #0
    5ed6:	d001      	beq.n	5edc <_svfprintf_r+0x1170>
    5ed8:	f7fe ffcf 	bl	4e7a <_svfprintf_r+0x10e>
    5edc:	981f      	ldr	r0, [sp, #124]	; 0x7c
    5ede:	68bc      	ldr	r4, [r7, #8]
    5ee0:	ae32      	add	r6, sp, #200	; 0xc8
    5ee2:	e778      	b.n	5dd6 <_svfprintf_r+0x106a>
    5ee4:	4653      	mov	r3, sl
    5ee6:	2b00      	cmp	r3, #0
    5ee8:	d000      	beq.n	5eec <_svfprintf_r+0x1180>
    5eea:	e6de      	b.n	5caa <_svfprintf_r+0xf3e>
    5eec:	3301      	adds	r3, #1
    5eee:	469a      	mov	sl, r3
    5ef0:	e6db      	b.n	5caa <_svfprintf_r+0xf3e>
    5ef2:	2200      	movs	r2, #0
    5ef4:	2300      	movs	r3, #0
    5ef6:	4648      	mov	r0, r9
    5ef8:	9907      	ldr	r1, [sp, #28]
    5efa:	f7fe fd2f 	bl	495c <__aeabi_dcmpeq>
    5efe:	2800      	cmp	r0, #0
    5f00:	d1e0      	bne.n	5ec4 <_svfprintf_r+0x1158>
    5f02:	2301      	movs	r3, #1
    5f04:	1b5b      	subs	r3, r3, r5
    5f06:	931f      	str	r3, [sp, #124]	; 0x7c
    5f08:	4498      	add	r8, r3
    5f0a:	e703      	b.n	5d14 <_svfprintf_r+0xfa8>
    5f0c:	9a11      	ldr	r2, [sp, #68]	; 0x44
    5f0e:	ab32      	add	r3, sp, #200	; 0xc8
    5f10:	1a9b      	subs	r3, r3, r2
    5f12:	930e      	str	r3, [sp, #56]	; 0x38
    5f14:	f7ff f83a 	bl	4f8c <_svfprintf_r+0x220>
    5f18:	9811      	ldr	r0, [sp, #68]	; 0x44
    5f1a:	f002 faa7 	bl	846c <strlen>
    5f1e:	0002      	movs	r2, r0
    5f20:	900e      	str	r0, [sp, #56]	; 0x38
    5f22:	0003      	movs	r3, r0
    5f24:	f7ff f9cd 	bl	52c2 <_svfprintf_r+0x556>
    5f28:	232d      	movs	r3, #45	; 0x2d
    5f2a:	aa16      	add	r2, sp, #88	; 0x58
    5f2c:	77d3      	strb	r3, [r2, #31]
    5f2e:	4698      	mov	r8, r3
    5f30:	2300      	movs	r3, #0
    5f32:	469a      	mov	sl, r3
    5f34:	f7ff f835 	bl	4fa2 <_svfprintf_r+0x236>
    5f38:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5f3a:	9313      	str	r3, [sp, #76]	; 0x4c
    5f3c:	1cda      	adds	r2, r3, #3
    5f3e:	db02      	blt.n	5f46 <_svfprintf_r+0x11da>
    5f40:	459a      	cmp	sl, r3
    5f42:	db00      	blt.n	5f46 <_svfprintf_r+0x11da>
    5f44:	e70b      	b.n	5d5e <_svfprintf_r+0xff2>
    5f46:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5f48:	3b02      	subs	r3, #2
    5f4a:	9312      	str	r3, [sp, #72]	; 0x48
    5f4c:	222c      	movs	r2, #44	; 0x2c
    5f4e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5f50:	2148      	movs	r1, #72	; 0x48
    5f52:	1e5d      	subs	r5, r3, #1
    5f54:	ab16      	add	r3, sp, #88	; 0x58
    5f56:	189b      	adds	r3, r3, r2
    5f58:	466a      	mov	r2, sp
    5f5a:	1852      	adds	r2, r2, r1
    5f5c:	7812      	ldrb	r2, [r2, #0]
    5f5e:	951f      	str	r5, [sp, #124]	; 0x7c
    5f60:	701a      	strb	r2, [r3, #0]
    5f62:	2d00      	cmp	r5, #0
    5f64:	da00      	bge.n	5f68 <_svfprintf_r+0x11fc>
    5f66:	e1a4      	b.n	62b2 <_svfprintf_r+0x1546>
    5f68:	212d      	movs	r1, #45	; 0x2d
    5f6a:	232b      	movs	r3, #43	; 0x2b
    5f6c:	aa16      	add	r2, sp, #88	; 0x58
    5f6e:	1852      	adds	r2, r2, r1
    5f70:	7013      	strb	r3, [r2, #0]
    5f72:	2d09      	cmp	r5, #9
    5f74:	dc00      	bgt.n	5f78 <_svfprintf_r+0x120c>
    5f76:	e14c      	b.n	6212 <_svfprintf_r+0x14a6>
    5f78:	aa16      	add	r2, sp, #88	; 0x58
    5f7a:	233b      	movs	r3, #59	; 0x3b
    5f7c:	4694      	mov	ip, r2
    5f7e:	4463      	add	r3, ip
    5f80:	469a      	mov	sl, r3
    5f82:	46b1      	mov	r9, r6
    5f84:	46a0      	mov	r8, r4
    5f86:	4656      	mov	r6, sl
    5f88:	e000      	b.n	5f8c <_svfprintf_r+0x1220>
    5f8a:	0026      	movs	r6, r4
    5f8c:	0028      	movs	r0, r5
    5f8e:	210a      	movs	r1, #10
    5f90:	f7fd f9ca 	bl	3328 <__aeabi_idivmod>
    5f94:	1e74      	subs	r4, r6, #1
    5f96:	3130      	adds	r1, #48	; 0x30
    5f98:	7021      	strb	r1, [r4, #0]
    5f9a:	0028      	movs	r0, r5
    5f9c:	210a      	movs	r1, #10
    5f9e:	f7fd f8dd 	bl	315c <__divsi3>
    5fa2:	0005      	movs	r5, r0
    5fa4:	2809      	cmp	r0, #9
    5fa6:	dcf0      	bgt.n	5f8a <_svfprintf_r+0x121e>
    5fa8:	0023      	movs	r3, r4
    5faa:	4644      	mov	r4, r8
    5fac:	46b0      	mov	r8, r6
    5fae:	464e      	mov	r6, r9
    5fb0:	4699      	mov	r9, r3
    5fb2:	0003      	movs	r3, r0
    5fb4:	3330      	adds	r3, #48	; 0x30
    5fb6:	b2d8      	uxtb	r0, r3
    5fb8:	4643      	mov	r3, r8
    5fba:	3b02      	subs	r3, #2
    5fbc:	7018      	strb	r0, [r3, #0]
    5fbe:	459a      	cmp	sl, r3
    5fc0:	d800      	bhi.n	5fc4 <_svfprintf_r+0x1258>
    5fc2:	e1b4      	b.n	632e <_svfprintf_r+0x15c2>
    5fc4:	4642      	mov	r2, r8
    5fc6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    5fc8:	4645      	mov	r5, r8
    5fca:	1a99      	subs	r1, r3, r2
    5fcc:	2301      	movs	r3, #1
    5fce:	3107      	adds	r1, #7
    5fd0:	425b      	negs	r3, r3
    5fd2:	e001      	b.n	5fd8 <_svfprintf_r+0x126c>
    5fd4:	5ce8      	ldrb	r0, [r5, r3]
    5fd6:	3301      	adds	r3, #1
    5fd8:	aa21      	add	r2, sp, #132	; 0x84
    5fda:	18d2      	adds	r2, r2, r3
    5fdc:	70d0      	strb	r0, [r2, #3]
    5fde:	428b      	cmp	r3, r1
    5fe0:	d1f8      	bne.n	5fd4 <_svfprintf_r+0x1268>
    5fe2:	a916      	add	r1, sp, #88	; 0x58
    5fe4:	468c      	mov	ip, r1
    5fe6:	222e      	movs	r2, #46	; 0x2e
    5fe8:	464b      	mov	r3, r9
    5fea:	4462      	add	r2, ip
    5fec:	4694      	mov	ip, r2
    5fee:	1afb      	subs	r3, r7, r3
    5ff0:	4463      	add	r3, ip
    5ff2:	aa21      	add	r2, sp, #132	; 0x84
    5ff4:	9914      	ldr	r1, [sp, #80]	; 0x50
    5ff6:	1a9b      	subs	r3, r3, r2
    5ff8:	469c      	mov	ip, r3
    5ffa:	000a      	movs	r2, r1
    5ffc:	4462      	add	r2, ip
    5ffe:	931a      	str	r3, [sp, #104]	; 0x68
    6000:	920e      	str	r2, [sp, #56]	; 0x38
    6002:	2901      	cmp	r1, #1
    6004:	dc00      	bgt.n	6008 <_svfprintf_r+0x129c>
    6006:	e145      	b.n	6294 <_svfprintf_r+0x1528>
    6008:	9a18      	ldr	r2, [sp, #96]	; 0x60
    600a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    600c:	4694      	mov	ip, r2
    600e:	4463      	add	r3, ip
    6010:	001a      	movs	r2, r3
    6012:	930e      	str	r3, [sp, #56]	; 0x38
    6014:	43db      	mvns	r3, r3
    6016:	17db      	asrs	r3, r3, #31
    6018:	401a      	ands	r2, r3
    601a:	2300      	movs	r3, #0
    601c:	9207      	str	r2, [sp, #28]
    601e:	9313      	str	r3, [sp, #76]	; 0x4c
    6020:	e6ae      	b.n	5d80 <_svfprintf_r+0x1014>
    6022:	2301      	movs	r3, #1
    6024:	425b      	negs	r3, r3
    6026:	930a      	str	r3, [sp, #40]	; 0x28
    6028:	f7fe ff2d 	bl	4e86 <_svfprintf_r+0x11a>
    602c:	003a      	movs	r2, r7
    602e:	9906      	ldr	r1, [sp, #24]
    6030:	9809      	ldr	r0, [sp, #36]	; 0x24
    6032:	f002 fa4d 	bl	84d0 <__ssprint_r>
    6036:	2800      	cmp	r0, #0
    6038:	d001      	beq.n	603e <_svfprintf_r+0x12d2>
    603a:	f7fe ff1e 	bl	4e7a <_svfprintf_r+0x10e>
    603e:	68bc      	ldr	r4, [r7, #8]
    6040:	ae32      	add	r6, sp, #200	; 0xc8
    6042:	e43c      	b.n	58be <_svfprintf_r+0xb52>
    6044:	003a      	movs	r2, r7
    6046:	9906      	ldr	r1, [sp, #24]
    6048:	9809      	ldr	r0, [sp, #36]	; 0x24
    604a:	f002 fa41 	bl	84d0 <__ssprint_r>
    604e:	2800      	cmp	r0, #0
    6050:	d001      	beq.n	6056 <_svfprintf_r+0x12ea>
    6052:	f7fe ff12 	bl	4e7a <_svfprintf_r+0x10e>
    6056:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    6058:	68bc      	ldr	r4, [r7, #8]
    605a:	ae32      	add	r6, sp, #200	; 0xc8
    605c:	e56a      	b.n	5b34 <_svfprintf_r+0xdc8>
    605e:	003a      	movs	r2, r7
    6060:	9906      	ldr	r1, [sp, #24]
    6062:	9809      	ldr	r0, [sp, #36]	; 0x24
    6064:	f002 fa34 	bl	84d0 <__ssprint_r>
    6068:	2800      	cmp	r0, #0
    606a:	d001      	beq.n	6070 <_svfprintf_r+0x1304>
    606c:	f7fe ff05 	bl	4e7a <_svfprintf_r+0x10e>
    6070:	68bc      	ldr	r4, [r7, #8]
    6072:	ae32      	add	r6, sp, #200	; 0xc8
    6074:	e557      	b.n	5b26 <_svfprintf_r+0xdba>
    6076:	003a      	movs	r2, r7
    6078:	9906      	ldr	r1, [sp, #24]
    607a:	9809      	ldr	r0, [sp, #36]	; 0x24
    607c:	f002 fa28 	bl	84d0 <__ssprint_r>
    6080:	2800      	cmp	r0, #0
    6082:	d001      	beq.n	6088 <_svfprintf_r+0x131c>
    6084:	f7fe fef9 	bl	4e7a <_svfprintf_r+0x10e>
    6088:	9b14      	ldr	r3, [sp, #80]	; 0x50
    608a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    608c:	68bc      	ldr	r4, [r7, #8]
    608e:	1a9b      	subs	r3, r3, r2
    6090:	ae32      	add	r6, sp, #200	; 0xc8
    6092:	e56a      	b.n	5b6a <_svfprintf_r+0xdfe>
    6094:	4653      	mov	r3, sl
    6096:	9307      	str	r3, [sp, #28]
    6098:	2b06      	cmp	r3, #6
    609a:	d901      	bls.n	60a0 <_svfprintf_r+0x1334>
    609c:	2306      	movs	r3, #6
    609e:	9307      	str	r3, [sp, #28]
    60a0:	9b07      	ldr	r3, [sp, #28]
    60a2:	950f      	str	r5, [sp, #60]	; 0x3c
    60a4:	930e      	str	r3, [sp, #56]	; 0x38
    60a6:	2300      	movs	r3, #0
    60a8:	4698      	mov	r8, r3
    60aa:	469a      	mov	sl, r3
    60ac:	9313      	str	r3, [sp, #76]	; 0x4c
    60ae:	4b24      	ldr	r3, [pc, #144]	; (6140 <_svfprintf_r+0x13d4>)
    60b0:	9408      	str	r4, [sp, #32]
    60b2:	9311      	str	r3, [sp, #68]	; 0x44
    60b4:	f7fe ff78 	bl	4fa8 <_svfprintf_r+0x23c>
    60b8:	2320      	movs	r3, #32
    60ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
    60bc:	439a      	bics	r2, r3
    60be:	3b1a      	subs	r3, #26
    60c0:	920e      	str	r2, [sp, #56]	; 0x38
    60c2:	469a      	mov	sl, r3
    60c4:	e5f1      	b.n	5caa <_svfprintf_r+0xf3e>
    60c6:	ab23      	add	r3, sp, #140	; 0x8c
    60c8:	931b      	str	r3, [sp, #108]	; 0x6c
    60ca:	9304      	str	r3, [sp, #16]
    60cc:	ab20      	add	r3, sp, #128	; 0x80
    60ce:	9303      	str	r3, [sp, #12]
    60d0:	ab1f      	add	r3, sp, #124	; 0x7c
    60d2:	9302      	str	r3, [sp, #8]
    60d4:	4653      	mov	r3, sl
    60d6:	9301      	str	r3, [sp, #4]
    60d8:	2303      	movs	r3, #3
    60da:	464a      	mov	r2, r9
    60dc:	9300      	str	r3, [sp, #0]
    60de:	9809      	ldr	r0, [sp, #36]	; 0x24
    60e0:	9b07      	ldr	r3, [sp, #28]
    60e2:	f000 fa05 	bl	64f0 <_dtoa_r>
    60e6:	0003      	movs	r3, r0
    60e8:	4453      	add	r3, sl
    60ea:	9011      	str	r0, [sp, #68]	; 0x44
    60ec:	4698      	mov	r8, r3
    60ee:	4655      	mov	r5, sl
    60f0:	e6e4      	b.n	5ebc <_svfprintf_r+0x1150>
    60f2:	232d      	movs	r3, #45	; 0x2d
    60f4:	aa16      	add	r2, sp, #88	; 0x58
    60f6:	77d3      	strb	r3, [r2, #31]
    60f8:	4698      	mov	r8, r3
    60fa:	f7fe ffdb 	bl	50b4 <_svfprintf_r+0x348>
    60fe:	2280      	movs	r2, #128	; 0x80
    6100:	0612      	lsls	r2, r2, #24
    6102:	4694      	mov	ip, r2
    6104:	9b16      	ldr	r3, [sp, #88]	; 0x58
    6106:	4699      	mov	r9, r3
    6108:	9b15      	ldr	r3, [sp, #84]	; 0x54
    610a:	4463      	add	r3, ip
    610c:	9307      	str	r3, [sp, #28]
    610e:	232d      	movs	r3, #45	; 0x2d
    6110:	9310      	str	r3, [sp, #64]	; 0x40
    6112:	e5d7      	b.n	5cc4 <_svfprintf_r+0xf58>
    6114:	9a18      	ldr	r2, [sp, #96]	; 0x60
    6116:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6118:	4694      	mov	ip, r2
    611a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    611c:	4463      	add	r3, ip
    611e:	930e      	str	r3, [sp, #56]	; 0x38
    6120:	2a00      	cmp	r2, #0
    6122:	dc00      	bgt.n	6126 <_svfprintf_r+0x13ba>
    6124:	e0ce      	b.n	62c4 <_svfprintf_r+0x1558>
    6126:	001a      	movs	r2, r3
    6128:	43db      	mvns	r3, r3
    612a:	17db      	asrs	r3, r3, #31
    612c:	401a      	ands	r2, r3
    612e:	2367      	movs	r3, #103	; 0x67
    6130:	9207      	str	r2, [sp, #28]
    6132:	9312      	str	r3, [sp, #72]	; 0x48
    6134:	e624      	b.n	5d80 <_svfprintf_r+0x1014>
    6136:	46c0      	nop			; (mov r8, r8)
    6138:	0000a848 	.word	0x0000a848
    613c:	0000a80c 	.word	0x0000a80c
    6140:	0000a840 	.word	0x0000a840
    6144:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    6146:	9313      	str	r3, [sp, #76]	; 0x4c
    6148:	2b00      	cmp	r3, #0
    614a:	dc00      	bgt.n	614e <_svfprintf_r+0x13e2>
    614c:	e0d5      	b.n	62fa <_svfprintf_r+0x158e>
    614e:	4652      	mov	r2, sl
    6150:	2a00      	cmp	r2, #0
    6152:	d000      	beq.n	6156 <_svfprintf_r+0x13ea>
    6154:	e092      	b.n	627c <_svfprintf_r+0x1510>
    6156:	07e2      	lsls	r2, r4, #31
    6158:	d500      	bpl.n	615c <_svfprintf_r+0x13f0>
    615a:	e08f      	b.n	627c <_svfprintf_r+0x1510>
    615c:	9307      	str	r3, [sp, #28]
    615e:	930e      	str	r3, [sp, #56]	; 0x38
    6160:	e60e      	b.n	5d80 <_svfprintf_r+0x1014>
    6162:	ab16      	add	r3, sp, #88	; 0x58
    6164:	7fdb      	ldrb	r3, [r3, #31]
    6166:	950f      	str	r5, [sp, #60]	; 0x3c
    6168:	4698      	mov	r8, r3
    616a:	4653      	mov	r3, sl
    616c:	9307      	str	r3, [sp, #28]
    616e:	930e      	str	r3, [sp, #56]	; 0x38
    6170:	2300      	movs	r3, #0
    6172:	9408      	str	r4, [sp, #32]
    6174:	469a      	mov	sl, r3
    6176:	9313      	str	r3, [sp, #76]	; 0x4c
    6178:	f7fe ff10 	bl	4f9c <_svfprintf_r+0x230>
    617c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    617e:	4698      	mov	r8, r3
    6180:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6182:	44a8      	add	r8, r5
    6184:	2b47      	cmp	r3, #71	; 0x47
    6186:	d000      	beq.n	618a <_svfprintf_r+0x141e>
    6188:	e5c4      	b.n	5d14 <_svfprintf_r+0xfa8>
    618a:	07e3      	lsls	r3, r4, #31
    618c:	d500      	bpl.n	6190 <_svfprintf_r+0x1424>
    618e:	e68e      	b.n	5eae <_svfprintf_r+0x1142>
    6190:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6192:	9a11      	ldr	r2, [sp, #68]	; 0x44
    6194:	1a9b      	subs	r3, r3, r2
    6196:	9314      	str	r3, [sp, #80]	; 0x50
    6198:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    619a:	2b47      	cmp	r3, #71	; 0x47
    619c:	d100      	bne.n	61a0 <_svfprintf_r+0x1434>
    619e:	e6cb      	b.n	5f38 <_svfprintf_r+0x11cc>
    61a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    61a2:	9313      	str	r3, [sp, #76]	; 0x4c
    61a4:	e6d2      	b.n	5f4c <_svfprintf_r+0x11e0>
    61a6:	4244      	negs	r4, r0
    61a8:	3010      	adds	r0, #16
    61aa:	db00      	blt.n	61ae <_svfprintf_r+0x1442>
    61ac:	e0d0      	b.n	6350 <_svfprintf_r+0x15e4>
    61ae:	486e      	ldr	r0, [pc, #440]	; (6368 <_svfprintf_r+0x15fc>)
    61b0:	2610      	movs	r6, #16
    61b2:	0005      	movs	r5, r0
    61b4:	e003      	b.n	61be <_svfprintf_r+0x1452>
    61b6:	3208      	adds	r2, #8
    61b8:	3c10      	subs	r4, #16
    61ba:	2c10      	cmp	r4, #16
    61bc:	dd38      	ble.n	6230 <_svfprintf_r+0x14c4>
    61be:	3110      	adds	r1, #16
    61c0:	3301      	adds	r3, #1
    61c2:	6015      	str	r5, [r2, #0]
    61c4:	6056      	str	r6, [r2, #4]
    61c6:	60b9      	str	r1, [r7, #8]
    61c8:	607b      	str	r3, [r7, #4]
    61ca:	2b07      	cmp	r3, #7
    61cc:	ddf3      	ble.n	61b6 <_svfprintf_r+0x144a>
    61ce:	003a      	movs	r2, r7
    61d0:	9906      	ldr	r1, [sp, #24]
    61d2:	9809      	ldr	r0, [sp, #36]	; 0x24
    61d4:	f002 f97c 	bl	84d0 <__ssprint_r>
    61d8:	2800      	cmp	r0, #0
    61da:	d001      	beq.n	61e0 <_svfprintf_r+0x1474>
    61dc:	f7fe fe4d 	bl	4e7a <_svfprintf_r+0x10e>
    61e0:	68b9      	ldr	r1, [r7, #8]
    61e2:	687b      	ldr	r3, [r7, #4]
    61e4:	aa32      	add	r2, sp, #200	; 0xc8
    61e6:	e7e7      	b.n	61b8 <_svfprintf_r+0x144c>
    61e8:	003a      	movs	r2, r7
    61ea:	9906      	ldr	r1, [sp, #24]
    61ec:	9809      	ldr	r0, [sp, #36]	; 0x24
    61ee:	f002 f96f 	bl	84d0 <__ssprint_r>
    61f2:	2800      	cmp	r0, #0
    61f4:	d001      	beq.n	61fa <_svfprintf_r+0x148e>
    61f6:	f7fe fe40 	bl	4e7a <_svfprintf_r+0x10e>
    61fa:	981f      	ldr	r0, [sp, #124]	; 0x7c
    61fc:	68b9      	ldr	r1, [r7, #8]
    61fe:	687b      	ldr	r3, [r7, #4]
    6200:	aa32      	add	r2, sp, #200	; 0xc8
    6202:	e600      	b.n	5e06 <_svfprintf_r+0x109a>
    6204:	9a18      	ldr	r2, [sp, #96]	; 0x60
    6206:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6208:	4694      	mov	ip, r2
    620a:	4463      	add	r3, ip
    620c:	001a      	movs	r2, r3
    620e:	930e      	str	r3, [sp, #56]	; 0x38
    6210:	e78a      	b.n	6128 <_svfprintf_r+0x13bc>
    6212:	212e      	movs	r1, #46	; 0x2e
    6214:	2330      	movs	r3, #48	; 0x30
    6216:	aa16      	add	r2, sp, #88	; 0x58
    6218:	1852      	adds	r2, r2, r1
    621a:	7013      	strb	r3, [r2, #0]
    621c:	002b      	movs	r3, r5
    621e:	aa16      	add	r2, sp, #88	; 0x58
    6220:	3101      	adds	r1, #1
    6222:	3330      	adds	r3, #48	; 0x30
    6224:	1852      	adds	r2, r2, r1
    6226:	7013      	strb	r3, [r2, #0]
    6228:	ab22      	add	r3, sp, #136	; 0x88
    622a:	e6e2      	b.n	5ff2 <_svfprintf_r+0x1286>
    622c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    622e:	e585      	b.n	5d3c <_svfprintf_r+0xfd0>
    6230:	46a9      	mov	r9, r5
    6232:	4648      	mov	r0, r9
    6234:	1909      	adds	r1, r1, r4
    6236:	3301      	adds	r3, #1
    6238:	6010      	str	r0, [r2, #0]
    623a:	6054      	str	r4, [r2, #4]
    623c:	60b9      	str	r1, [r7, #8]
    623e:	3208      	adds	r2, #8
    6240:	607b      	str	r3, [r7, #4]
    6242:	2b07      	cmp	r3, #7
    6244:	dc00      	bgt.n	6248 <_svfprintf_r+0x14dc>
    6246:	e5e1      	b.n	5e0c <_svfprintf_r+0x10a0>
    6248:	003a      	movs	r2, r7
    624a:	9906      	ldr	r1, [sp, #24]
    624c:	9809      	ldr	r0, [sp, #36]	; 0x24
    624e:	f002 f93f 	bl	84d0 <__ssprint_r>
    6252:	2800      	cmp	r0, #0
    6254:	d001      	beq.n	625a <_svfprintf_r+0x14ee>
    6256:	f7fe fe10 	bl	4e7a <_svfprintf_r+0x10e>
    625a:	68b9      	ldr	r1, [r7, #8]
    625c:	687b      	ldr	r3, [r7, #4]
    625e:	aa32      	add	r2, sp, #200	; 0xc8
    6260:	e5d4      	b.n	5e0c <_svfprintf_r+0x10a0>
    6262:	9b15      	ldr	r3, [sp, #84]	; 0x54
    6264:	2b00      	cmp	r3, #0
    6266:	db38      	blt.n	62da <_svfprintf_r+0x156e>
    6268:	ab16      	add	r3, sp, #88	; 0x58
    626a:	7fdb      	ldrb	r3, [r3, #31]
    626c:	4698      	mov	r8, r3
    626e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6270:	2b47      	cmp	r3, #71	; 0x47
    6272:	dc2e      	bgt.n	62d2 <_svfprintf_r+0x1566>
    6274:	4b3d      	ldr	r3, [pc, #244]	; (636c <_svfprintf_r+0x1600>)
    6276:	9311      	str	r3, [sp, #68]	; 0x44
    6278:	f7fe ff23 	bl	50c2 <_svfprintf_r+0x356>
    627c:	9a18      	ldr	r2, [sp, #96]	; 0x60
    627e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6280:	4694      	mov	ip, r2
    6282:	4463      	add	r3, ip
    6284:	4453      	add	r3, sl
    6286:	001a      	movs	r2, r3
    6288:	930e      	str	r3, [sp, #56]	; 0x38
    628a:	43db      	mvns	r3, r3
    628c:	17db      	asrs	r3, r3, #31
    628e:	401a      	ands	r2, r3
    6290:	9207      	str	r2, [sp, #28]
    6292:	e575      	b.n	5d80 <_svfprintf_r+0x1014>
    6294:	2301      	movs	r3, #1
    6296:	4023      	ands	r3, r4
    6298:	9313      	str	r3, [sp, #76]	; 0x4c
    629a:	d000      	beq.n	629e <_svfprintf_r+0x1532>
    629c:	e6b4      	b.n	6008 <_svfprintf_r+0x129c>
    629e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    62a0:	43d3      	mvns	r3, r2
    62a2:	17db      	asrs	r3, r3, #31
    62a4:	401a      	ands	r2, r3
    62a6:	9207      	str	r2, [sp, #28]
    62a8:	e56a      	b.n	5d80 <_svfprintf_r+0x1014>
    62aa:	4a2f      	ldr	r2, [pc, #188]	; (6368 <_svfprintf_r+0x15fc>)
    62ac:	687b      	ldr	r3, [r7, #4]
    62ae:	4691      	mov	r9, r2
    62b0:	e42d      	b.n	5b0e <_svfprintf_r+0xda2>
    62b2:	2301      	movs	r3, #1
    62b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    62b6:	391b      	subs	r1, #27
    62b8:	1a9d      	subs	r5, r3, r2
    62ba:	aa16      	add	r2, sp, #88	; 0x58
    62bc:	332c      	adds	r3, #44	; 0x2c
    62be:	1852      	adds	r2, r2, r1
    62c0:	7013      	strb	r3, [r2, #0]
    62c2:	e656      	b.n	5f72 <_svfprintf_r+0x1206>
    62c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    62c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    62c8:	1a98      	subs	r0, r3, r2
    62ca:	1c43      	adds	r3, r0, #1
    62cc:	001a      	movs	r2, r3
    62ce:	930e      	str	r3, [sp, #56]	; 0x38
    62d0:	e72a      	b.n	6128 <_svfprintf_r+0x13bc>
    62d2:	4b27      	ldr	r3, [pc, #156]	; (6370 <_svfprintf_r+0x1604>)
    62d4:	9311      	str	r3, [sp, #68]	; 0x44
    62d6:	f7fe fef4 	bl	50c2 <_svfprintf_r+0x356>
    62da:	232d      	movs	r3, #45	; 0x2d
    62dc:	aa16      	add	r2, sp, #88	; 0x58
    62de:	77d3      	strb	r3, [r2, #31]
    62e0:	4698      	mov	r8, r3
    62e2:	e7c4      	b.n	626e <_svfprintf_r+0x1502>
    62e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    62e6:	1d1a      	adds	r2, r3, #4
    62e8:	681b      	ldr	r3, [r3, #0]
    62ea:	469a      	mov	sl, r3
    62ec:	2b00      	cmp	r3, #0
    62ee:	db36      	blt.n	635e <_svfprintf_r+0x15f2>
    62f0:	784b      	ldrb	r3, [r1, #1]
    62f2:	920f      	str	r2, [sp, #60]	; 0x3c
    62f4:	4659      	mov	r1, fp
    62f6:	f7fe fd9d 	bl	4e34 <_svfprintf_r+0xc8>
    62fa:	4653      	mov	r3, sl
    62fc:	2b00      	cmp	r3, #0
    62fe:	d101      	bne.n	6304 <_svfprintf_r+0x1598>
    6300:	07e3      	lsls	r3, r4, #31
    6302:	d503      	bpl.n	630c <_svfprintf_r+0x15a0>
    6304:	9b18      	ldr	r3, [sp, #96]	; 0x60
    6306:	1c58      	adds	r0, r3, #1
    6308:	0003      	movs	r3, r0
    630a:	e7bb      	b.n	6284 <_svfprintf_r+0x1518>
    630c:	2301      	movs	r3, #1
    630e:	e725      	b.n	615c <_svfprintf_r+0x13f0>
    6310:	ab16      	add	r3, sp, #88	; 0x58
    6312:	77d8      	strb	r0, [r3, #31]
    6314:	f7fe ff6c 	bl	51f0 <_svfprintf_r+0x484>
    6318:	ab16      	add	r3, sp, #88	; 0x58
    631a:	77d8      	strb	r0, [r3, #31]
    631c:	f7ff f814 	bl	5348 <_svfprintf_r+0x5dc>
    6320:	230c      	movs	r3, #12
    6322:	9a09      	ldr	r2, [sp, #36]	; 0x24
    6324:	6013      	str	r3, [r2, #0]
    6326:	3b0d      	subs	r3, #13
    6328:	930a      	str	r3, [sp, #40]	; 0x28
    632a:	f7fe fdac 	bl	4e86 <_svfprintf_r+0x11a>
    632e:	aa16      	add	r2, sp, #88	; 0x58
    6330:	232e      	movs	r3, #46	; 0x2e
    6332:	4694      	mov	ip, r2
    6334:	4463      	add	r3, ip
    6336:	e65c      	b.n	5ff2 <_svfprintf_r+0x1286>
    6338:	ab16      	add	r3, sp, #88	; 0x58
    633a:	77d8      	strb	r0, [r3, #31]
    633c:	f7fe fe85 	bl	504a <_svfprintf_r+0x2de>
    6340:	ab16      	add	r3, sp, #88	; 0x58
    6342:	77d8      	strb	r0, [r3, #31]
    6344:	f7fe fddd 	bl	4f02 <_svfprintf_r+0x196>
    6348:	ab16      	add	r3, sp, #88	; 0x58
    634a:	77d8      	strb	r0, [r3, #31]
    634c:	f7ff f87d 	bl	544a <_svfprintf_r+0x6de>
    6350:	4805      	ldr	r0, [pc, #20]	; (6368 <_svfprintf_r+0x15fc>)
    6352:	4681      	mov	r9, r0
    6354:	e76d      	b.n	6232 <_svfprintf_r+0x14c6>
    6356:	ab16      	add	r3, sp, #88	; 0x58
    6358:	77d8      	strb	r0, [r3, #31]
    635a:	f7fe ff79 	bl	5250 <_svfprintf_r+0x4e4>
    635e:	2301      	movs	r3, #1
    6360:	425b      	negs	r3, r3
    6362:	469a      	mov	sl, r3
    6364:	e7c4      	b.n	62f0 <_svfprintf_r+0x1584>
    6366:	46c0      	nop			; (mov r8, r8)
    6368:	0000a85c 	.word	0x0000a85c
    636c:	0000a810 	.word	0x0000a810
    6370:	0000a814 	.word	0x0000a814

00006374 <register_fini>:
    6374:	4b03      	ldr	r3, [pc, #12]	; (6384 <register_fini+0x10>)
    6376:	b510      	push	{r4, lr}
    6378:	2b00      	cmp	r3, #0
    637a:	d002      	beq.n	6382 <register_fini+0xe>
    637c:	4802      	ldr	r0, [pc, #8]	; (6388 <register_fini+0x14>)
    637e:	f000 f805 	bl	638c <atexit>
    6382:	bd10      	pop	{r4, pc}
    6384:	00000000 	.word	0x00000000
    6388:	00007479 	.word	0x00007479

0000638c <atexit>:
    638c:	b510      	push	{r4, lr}
    638e:	0001      	movs	r1, r0
    6390:	2300      	movs	r3, #0
    6392:	2200      	movs	r2, #0
    6394:	2000      	movs	r0, #0
    6396:	f002 f92b 	bl	85f0 <__register_exitproc>
    639a:	bd10      	pop	{r4, pc}

0000639c <quorem>:
    639c:	b5f0      	push	{r4, r5, r6, r7, lr}
    639e:	4645      	mov	r5, r8
    63a0:	4680      	mov	r8, r0
    63a2:	46de      	mov	lr, fp
    63a4:	4657      	mov	r7, sl
    63a6:	464e      	mov	r6, r9
    63a8:	4642      	mov	r2, r8
    63aa:	b5e0      	push	{r5, r6, r7, lr}
    63ac:	690c      	ldr	r4, [r1, #16]
    63ae:	6912      	ldr	r2, [r2, #16]
    63b0:	b085      	sub	sp, #20
    63b2:	000b      	movs	r3, r1
    63b4:	9102      	str	r1, [sp, #8]
    63b6:	2000      	movs	r0, #0
    63b8:	4294      	cmp	r4, r2
    63ba:	dd00      	ble.n	63be <quorem+0x22>
    63bc:	e090      	b.n	64e0 <quorem+0x144>
    63be:	2214      	movs	r2, #20
    63c0:	4694      	mov	ip, r2
    63c2:	4463      	add	r3, ip
    63c4:	4699      	mov	r9, r3
    63c6:	464a      	mov	r2, r9
    63c8:	3c01      	subs	r4, #1
    63ca:	00a3      	lsls	r3, r4, #2
    63cc:	18d6      	adds	r6, r2, r3
    63ce:	2214      	movs	r2, #20
    63d0:	4442      	add	r2, r8
    63d2:	4693      	mov	fp, r2
    63d4:	449b      	add	fp, r3
    63d6:	6833      	ldr	r3, [r6, #0]
    63d8:	0015      	movs	r5, r2
    63da:	1c59      	adds	r1, r3, #1
    63dc:	465b      	mov	r3, fp
    63de:	6818      	ldr	r0, [r3, #0]
    63e0:	9201      	str	r2, [sp, #4]
    63e2:	f7fc fe31 	bl	3048 <__udivsi3>
    63e6:	1e03      	subs	r3, r0, #0
    63e8:	9000      	str	r0, [sp, #0]
    63ea:	d042      	beq.n	6472 <quorem+0xd6>
    63ec:	0029      	movs	r1, r5
    63ee:	2700      	movs	r7, #0
    63f0:	464d      	mov	r5, r9
    63f2:	2000      	movs	r0, #0
    63f4:	46b1      	mov	r9, r6
    63f6:	46a2      	mov	sl, r4
    63f8:	003e      	movs	r6, r7
    63fa:	0004      	movs	r4, r0
    63fc:	469c      	mov	ip, r3
    63fe:	002f      	movs	r7, r5
    6400:	0008      	movs	r0, r1
    6402:	9503      	str	r5, [sp, #12]
    6404:	4663      	mov	r3, ip
    6406:	cf04      	ldmia	r7!, {r2}
    6408:	0415      	lsls	r5, r2, #16
    640a:	0c2d      	lsrs	r5, r5, #16
    640c:	435d      	muls	r5, r3
    640e:	0c12      	lsrs	r2, r2, #16
    6410:	435a      	muls	r2, r3
    6412:	19ad      	adds	r5, r5, r6
    6414:	0c2b      	lsrs	r3, r5, #16
    6416:	18d2      	adds	r2, r2, r3
    6418:	6803      	ldr	r3, [r0, #0]
    641a:	042d      	lsls	r5, r5, #16
    641c:	0419      	lsls	r1, r3, #16
    641e:	0c09      	lsrs	r1, r1, #16
    6420:	1909      	adds	r1, r1, r4
    6422:	0c16      	lsrs	r6, r2, #16
    6424:	0c2d      	lsrs	r5, r5, #16
    6426:	0412      	lsls	r2, r2, #16
    6428:	1b49      	subs	r1, r1, r5
    642a:	0c12      	lsrs	r2, r2, #16
    642c:	0c1b      	lsrs	r3, r3, #16
    642e:	1a9b      	subs	r3, r3, r2
    6430:	140a      	asrs	r2, r1, #16
    6432:	189b      	adds	r3, r3, r2
    6434:	0409      	lsls	r1, r1, #16
    6436:	141c      	asrs	r4, r3, #16
    6438:	0c09      	lsrs	r1, r1, #16
    643a:	041b      	lsls	r3, r3, #16
    643c:	4319      	orrs	r1, r3
    643e:	c002      	stmia	r0!, {r1}
    6440:	45b9      	cmp	r9, r7
    6442:	d2df      	bcs.n	6404 <quorem+0x68>
    6444:	9b03      	ldr	r3, [sp, #12]
    6446:	464e      	mov	r6, r9
    6448:	4699      	mov	r9, r3
    644a:	465b      	mov	r3, fp
    644c:	681b      	ldr	r3, [r3, #0]
    644e:	4654      	mov	r4, sl
    6450:	2b00      	cmp	r3, #0
    6452:	d10e      	bne.n	6472 <quorem+0xd6>
    6454:	465b      	mov	r3, fp
    6456:	9a01      	ldr	r2, [sp, #4]
    6458:	3b04      	subs	r3, #4
    645a:	429a      	cmp	r2, r3
    645c:	d304      	bcc.n	6468 <quorem+0xcc>
    645e:	e006      	b.n	646e <quorem+0xd2>
    6460:	3b04      	subs	r3, #4
    6462:	3c01      	subs	r4, #1
    6464:	429a      	cmp	r2, r3
    6466:	d202      	bcs.n	646e <quorem+0xd2>
    6468:	6819      	ldr	r1, [r3, #0]
    646a:	2900      	cmp	r1, #0
    646c:	d0f8      	beq.n	6460 <quorem+0xc4>
    646e:	4643      	mov	r3, r8
    6470:	611c      	str	r4, [r3, #16]
    6472:	9902      	ldr	r1, [sp, #8]
    6474:	4640      	mov	r0, r8
    6476:	f001 fed3 	bl	8220 <__mcmp>
    647a:	2800      	cmp	r0, #0
    647c:	db2f      	blt.n	64de <quorem+0x142>
    647e:	464f      	mov	r7, r9
    6480:	2000      	movs	r0, #0
    6482:	9b00      	ldr	r3, [sp, #0]
    6484:	9d01      	ldr	r5, [sp, #4]
    6486:	3301      	adds	r3, #1
    6488:	9300      	str	r3, [sp, #0]
    648a:	682b      	ldr	r3, [r5, #0]
    648c:	cf02      	ldmia	r7!, {r1}
    648e:	041a      	lsls	r2, r3, #16
    6490:	0c12      	lsrs	r2, r2, #16
    6492:	1810      	adds	r0, r2, r0
    6494:	040a      	lsls	r2, r1, #16
    6496:	0c12      	lsrs	r2, r2, #16
    6498:	1a82      	subs	r2, r0, r2
    649a:	0c09      	lsrs	r1, r1, #16
    649c:	0c1b      	lsrs	r3, r3, #16
    649e:	1a5b      	subs	r3, r3, r1
    64a0:	1411      	asrs	r1, r2, #16
    64a2:	185b      	adds	r3, r3, r1
    64a4:	0412      	lsls	r2, r2, #16
    64a6:	1418      	asrs	r0, r3, #16
    64a8:	0c12      	lsrs	r2, r2, #16
    64aa:	041b      	lsls	r3, r3, #16
    64ac:	4313      	orrs	r3, r2
    64ae:	c508      	stmia	r5!, {r3}
    64b0:	42be      	cmp	r6, r7
    64b2:	d2ea      	bcs.n	648a <quorem+0xee>
    64b4:	9901      	ldr	r1, [sp, #4]
    64b6:	00a3      	lsls	r3, r4, #2
    64b8:	468c      	mov	ip, r1
    64ba:	4463      	add	r3, ip
    64bc:	681a      	ldr	r2, [r3, #0]
    64be:	2a00      	cmp	r2, #0
    64c0:	d10d      	bne.n	64de <quorem+0x142>
    64c2:	3b04      	subs	r3, #4
    64c4:	000a      	movs	r2, r1
    64c6:	4299      	cmp	r1, r3
    64c8:	d304      	bcc.n	64d4 <quorem+0x138>
    64ca:	e006      	b.n	64da <quorem+0x13e>
    64cc:	3b04      	subs	r3, #4
    64ce:	3c01      	subs	r4, #1
    64d0:	429a      	cmp	r2, r3
    64d2:	d202      	bcs.n	64da <quorem+0x13e>
    64d4:	6819      	ldr	r1, [r3, #0]
    64d6:	2900      	cmp	r1, #0
    64d8:	d0f8      	beq.n	64cc <quorem+0x130>
    64da:	4643      	mov	r3, r8
    64dc:	611c      	str	r4, [r3, #16]
    64de:	9800      	ldr	r0, [sp, #0]
    64e0:	b005      	add	sp, #20
    64e2:	bc3c      	pop	{r2, r3, r4, r5}
    64e4:	4690      	mov	r8, r2
    64e6:	4699      	mov	r9, r3
    64e8:	46a2      	mov	sl, r4
    64ea:	46ab      	mov	fp, r5
    64ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    64ee:	46c0      	nop			; (mov r8, r8)

000064f0 <_dtoa_r>:
    64f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    64f2:	4657      	mov	r7, sl
    64f4:	464e      	mov	r6, r9
    64f6:	4645      	mov	r5, r8
    64f8:	46de      	mov	lr, fp
    64fa:	b5e0      	push	{r5, r6, r7, lr}
    64fc:	6c01      	ldr	r1, [r0, #64]	; 0x40
    64fe:	b099      	sub	sp, #100	; 0x64
    6500:	4682      	mov	sl, r0
    6502:	001d      	movs	r5, r3
    6504:	0016      	movs	r6, r2
    6506:	001f      	movs	r7, r3
    6508:	2900      	cmp	r1, #0
    650a:	d009      	beq.n	6520 <_dtoa_r+0x30>
    650c:	2301      	movs	r3, #1
    650e:	6c42      	ldr	r2, [r0, #68]	; 0x44
    6510:	4093      	lsls	r3, r2
    6512:	604a      	str	r2, [r1, #4]
    6514:	608b      	str	r3, [r1, #8]
    6516:	f001 fc77 	bl	7e08 <_Bfree>
    651a:	2300      	movs	r3, #0
    651c:	4652      	mov	r2, sl
    651e:	6413      	str	r3, [r2, #64]	; 0x40
    6520:	46b8      	mov	r8, r7
    6522:	2f00      	cmp	r7, #0
    6524:	db37      	blt.n	6596 <_dtoa_r+0xa6>
    6526:	2300      	movs	r3, #0
    6528:	9a25      	ldr	r2, [sp, #148]	; 0x94
    652a:	6013      	str	r3, [r2, #0]
    652c:	4642      	mov	r2, r8
    652e:	4bd6      	ldr	r3, [pc, #856]	; (6888 <_dtoa_r+0x398>)
    6530:	401a      	ands	r2, r3
    6532:	429a      	cmp	r2, r3
    6534:	d018      	beq.n	6568 <_dtoa_r+0x78>
    6536:	2200      	movs	r2, #0
    6538:	2300      	movs	r3, #0
    653a:	0030      	movs	r0, r6
    653c:	0039      	movs	r1, r7
    653e:	f7fe fa0d 	bl	495c <__aeabi_dcmpeq>
    6542:	2800      	cmp	r0, #0
    6544:	d02f      	beq.n	65a6 <_dtoa_r+0xb6>
    6546:	2301      	movs	r3, #1
    6548:	9a24      	ldr	r2, [sp, #144]	; 0x90
    654a:	6013      	str	r3, [r2, #0]
    654c:	9b26      	ldr	r3, [sp, #152]	; 0x98
    654e:	2b00      	cmp	r3, #0
    6550:	d100      	bne.n	6554 <_dtoa_r+0x64>
    6552:	e22a      	b.n	69aa <_dtoa_r+0x4ba>
    6554:	48cd      	ldr	r0, [pc, #820]	; (688c <_dtoa_r+0x39c>)
    6556:	6018      	str	r0, [r3, #0]
    6558:	3801      	subs	r0, #1
    655a:	b019      	add	sp, #100	; 0x64
    655c:	bc3c      	pop	{r2, r3, r4, r5}
    655e:	4690      	mov	r8, r2
    6560:	4699      	mov	r9, r3
    6562:	46a2      	mov	sl, r4
    6564:	46ab      	mov	fp, r5
    6566:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6568:	4bc9      	ldr	r3, [pc, #804]	; (6890 <_dtoa_r+0x3a0>)
    656a:	9a24      	ldr	r2, [sp, #144]	; 0x90
    656c:	6013      	str	r3, [r2, #0]
    656e:	2e00      	cmp	r6, #0
    6570:	d10b      	bne.n	658a <_dtoa_r+0x9a>
    6572:	4643      	mov	r3, r8
    6574:	0318      	lsls	r0, r3, #12
    6576:	d108      	bne.n	658a <_dtoa_r+0x9a>
    6578:	9b26      	ldr	r3, [sp, #152]	; 0x98
    657a:	48c6      	ldr	r0, [pc, #792]	; (6894 <_dtoa_r+0x3a4>)
    657c:	2b00      	cmp	r3, #0
    657e:	d0ec      	beq.n	655a <_dtoa_r+0x6a>
    6580:	0003      	movs	r3, r0
    6582:	3308      	adds	r3, #8
    6584:	9a26      	ldr	r2, [sp, #152]	; 0x98
    6586:	6013      	str	r3, [r2, #0]
    6588:	e7e7      	b.n	655a <_dtoa_r+0x6a>
    658a:	9b26      	ldr	r3, [sp, #152]	; 0x98
    658c:	48c2      	ldr	r0, [pc, #776]	; (6898 <_dtoa_r+0x3a8>)
    658e:	2b00      	cmp	r3, #0
    6590:	d0e3      	beq.n	655a <_dtoa_r+0x6a>
    6592:	1cc3      	adds	r3, r0, #3
    6594:	e7f6      	b.n	6584 <_dtoa_r+0x94>
    6596:	2301      	movs	r3, #1
    6598:	9a25      	ldr	r2, [sp, #148]	; 0x94
    659a:	0068      	lsls	r0, r5, #1
    659c:	6013      	str	r3, [r2, #0]
    659e:	0843      	lsrs	r3, r0, #1
    65a0:	4698      	mov	r8, r3
    65a2:	001f      	movs	r7, r3
    65a4:	e7c2      	b.n	652c <_dtoa_r+0x3c>
    65a6:	ab16      	add	r3, sp, #88	; 0x58
    65a8:	9301      	str	r3, [sp, #4]
    65aa:	ab17      	add	r3, sp, #92	; 0x5c
    65ac:	9300      	str	r3, [sp, #0]
    65ae:	0032      	movs	r2, r6
    65b0:	003b      	movs	r3, r7
    65b2:	4650      	mov	r0, sl
    65b4:	f001 feea 	bl	838c <__d2b>
    65b8:	4643      	mov	r3, r8
    65ba:	4683      	mov	fp, r0
    65bc:	0d1a      	lsrs	r2, r3, #20
    65be:	d100      	bne.n	65c2 <_dtoa_r+0xd2>
    65c0:	e1d6      	b.n	6970 <_dtoa_r+0x480>
    65c2:	033b      	lsls	r3, r7, #12
    65c4:	4cb5      	ldr	r4, [pc, #724]	; (689c <_dtoa_r+0x3ac>)
    65c6:	0b1b      	lsrs	r3, r3, #12
    65c8:	431c      	orrs	r4, r3
    65ca:	4bb5      	ldr	r3, [pc, #724]	; (68a0 <_dtoa_r+0x3b0>)
    65cc:	0030      	movs	r0, r6
    65ce:	4698      	mov	r8, r3
    65d0:	9b16      	ldr	r3, [sp, #88]	; 0x58
    65d2:	0021      	movs	r1, r4
    65d4:	4699      	mov	r9, r3
    65d6:	2300      	movs	r3, #0
    65d8:	4490      	add	r8, r2
    65da:	930f      	str	r3, [sp, #60]	; 0x3c
    65dc:	2200      	movs	r2, #0
    65de:	4bb1      	ldr	r3, [pc, #708]	; (68a4 <_dtoa_r+0x3b4>)
    65e0:	f7fd fd96 	bl	4110 <__aeabi_dsub>
    65e4:	4ab0      	ldr	r2, [pc, #704]	; (68a8 <_dtoa_r+0x3b8>)
    65e6:	4bb1      	ldr	r3, [pc, #708]	; (68ac <_dtoa_r+0x3bc>)
    65e8:	f7fd fb12 	bl	3c10 <__aeabi_dmul>
    65ec:	4ab0      	ldr	r2, [pc, #704]	; (68b0 <_dtoa_r+0x3c0>)
    65ee:	4bb1      	ldr	r3, [pc, #708]	; (68b4 <_dtoa_r+0x3c4>)
    65f0:	f002 fad6 	bl	8ba0 <__aeabi_dadd>
    65f4:	0004      	movs	r4, r0
    65f6:	4640      	mov	r0, r8
    65f8:	000d      	movs	r5, r1
    65fa:	f7fe f8d3 	bl	47a4 <__aeabi_i2d>
    65fe:	4aae      	ldr	r2, [pc, #696]	; (68b8 <_dtoa_r+0x3c8>)
    6600:	4bae      	ldr	r3, [pc, #696]	; (68bc <_dtoa_r+0x3cc>)
    6602:	f7fd fb05 	bl	3c10 <__aeabi_dmul>
    6606:	0002      	movs	r2, r0
    6608:	000b      	movs	r3, r1
    660a:	0020      	movs	r0, r4
    660c:	0029      	movs	r1, r5
    660e:	f002 fac7 	bl	8ba0 <__aeabi_dadd>
    6612:	0004      	movs	r4, r0
    6614:	000d      	movs	r5, r1
    6616:	f7fe f891 	bl	473c <__aeabi_d2iz>
    661a:	2200      	movs	r2, #0
    661c:	9003      	str	r0, [sp, #12]
    661e:	2300      	movs	r3, #0
    6620:	0020      	movs	r0, r4
    6622:	0029      	movs	r1, r5
    6624:	f7fe f9a0 	bl	4968 <__aeabi_dcmplt>
    6628:	2800      	cmp	r0, #0
    662a:	d000      	beq.n	662e <_dtoa_r+0x13e>
    662c:	e2b1      	b.n	6b92 <_dtoa_r+0x6a2>
    662e:	2301      	movs	r3, #1
    6630:	9c03      	ldr	r4, [sp, #12]
    6632:	930c      	str	r3, [sp, #48]	; 0x30
    6634:	2c16      	cmp	r4, #22
    6636:	d810      	bhi.n	665a <_dtoa_r+0x16a>
    6638:	49a1      	ldr	r1, [pc, #644]	; (68c0 <_dtoa_r+0x3d0>)
    663a:	00e3      	lsls	r3, r4, #3
    663c:	18c9      	adds	r1, r1, r3
    663e:	0032      	movs	r2, r6
    6640:	6808      	ldr	r0, [r1, #0]
    6642:	6849      	ldr	r1, [r1, #4]
    6644:	003b      	movs	r3, r7
    6646:	f7fe f9a3 	bl	4990 <__aeabi_dcmpgt>
    664a:	2800      	cmp	r0, #0
    664c:	d100      	bne.n	6650 <_dtoa_r+0x160>
    664e:	e31d      	b.n	6c8c <_dtoa_r+0x79c>
    6650:	0023      	movs	r3, r4
    6652:	3b01      	subs	r3, #1
    6654:	9303      	str	r3, [sp, #12]
    6656:	2300      	movs	r3, #0
    6658:	930c      	str	r3, [sp, #48]	; 0x30
    665a:	464b      	mov	r3, r9
    665c:	4642      	mov	r2, r8
    665e:	1a9a      	subs	r2, r3, r2
    6660:	2300      	movs	r3, #0
    6662:	9306      	str	r3, [sp, #24]
    6664:	0013      	movs	r3, r2
    6666:	3b01      	subs	r3, #1
    6668:	9304      	str	r3, [sp, #16]
    666a:	d500      	bpl.n	666e <_dtoa_r+0x17e>
    666c:	e2a1      	b.n	6bb2 <_dtoa_r+0x6c2>
    666e:	9b03      	ldr	r3, [sp, #12]
    6670:	2b00      	cmp	r3, #0
    6672:	da00      	bge.n	6676 <_dtoa_r+0x186>
    6674:	e284      	b.n	6b80 <_dtoa_r+0x690>
    6676:	469c      	mov	ip, r3
    6678:	930d      	str	r3, [sp, #52]	; 0x34
    667a:	2300      	movs	r3, #0
    667c:	9a04      	ldr	r2, [sp, #16]
    667e:	4699      	mov	r9, r3
    6680:	0011      	movs	r1, r2
    6682:	4461      	add	r1, ip
    6684:	9104      	str	r1, [sp, #16]
    6686:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6688:	2b09      	cmp	r3, #9
    668a:	d900      	bls.n	668e <_dtoa_r+0x19e>
    668c:	e18f      	b.n	69ae <_dtoa_r+0x4be>
    668e:	2401      	movs	r4, #1
    6690:	2b05      	cmp	r3, #5
    6692:	dd02      	ble.n	669a <_dtoa_r+0x1aa>
    6694:	2400      	movs	r4, #0
    6696:	3b04      	subs	r3, #4
    6698:	9322      	str	r3, [sp, #136]	; 0x88
    669a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    669c:	2b03      	cmp	r3, #3
    669e:	d101      	bne.n	66a4 <_dtoa_r+0x1b4>
    66a0:	f000 fcce 	bl	7040 <_dtoa_r+0xb50>
    66a4:	dc01      	bgt.n	66aa <_dtoa_r+0x1ba>
    66a6:	f000 fc92 	bl	6fce <_dtoa_r+0xade>
    66aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
    66ac:	2b04      	cmp	r3, #4
    66ae:	d101      	bne.n	66b4 <_dtoa_r+0x1c4>
    66b0:	f000 fc40 	bl	6f34 <_dtoa_r+0xa44>
    66b4:	2301      	movs	r3, #1
    66b6:	930b      	str	r3, [sp, #44]	; 0x2c
    66b8:	9b22      	ldr	r3, [sp, #136]	; 0x88
    66ba:	2b05      	cmp	r3, #5
    66bc:	d001      	beq.n	66c2 <_dtoa_r+0x1d2>
    66be:	f000 fc8b 	bl	6fd8 <_dtoa_r+0xae8>
    66c2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    66c4:	9b03      	ldr	r3, [sp, #12]
    66c6:	4694      	mov	ip, r2
    66c8:	4463      	add	r3, ip
    66ca:	930e      	str	r3, [sp, #56]	; 0x38
    66cc:	3301      	adds	r3, #1
    66ce:	9307      	str	r3, [sp, #28]
    66d0:	1e1d      	subs	r5, r3, #0
    66d2:	dc01      	bgt.n	66d8 <_dtoa_r+0x1e8>
    66d4:	f000 fd49 	bl	716a <_dtoa_r+0xc7a>
    66d8:	9b07      	ldr	r3, [sp, #28]
    66da:	4698      	mov	r8, r3
    66dc:	2300      	movs	r3, #0
    66de:	4652      	mov	r2, sl
    66e0:	2100      	movs	r1, #0
    66e2:	6453      	str	r3, [r2, #68]	; 0x44
    66e4:	2d17      	cmp	r5, #23
    66e6:	d90a      	bls.n	66fe <_dtoa_r+0x20e>
    66e8:	2201      	movs	r2, #1
    66ea:	3304      	adds	r3, #4
    66ec:	005b      	lsls	r3, r3, #1
    66ee:	0018      	movs	r0, r3
    66f0:	3014      	adds	r0, #20
    66f2:	0011      	movs	r1, r2
    66f4:	3201      	adds	r2, #1
    66f6:	4285      	cmp	r5, r0
    66f8:	d2f8      	bcs.n	66ec <_dtoa_r+0x1fc>
    66fa:	4653      	mov	r3, sl
    66fc:	6459      	str	r1, [r3, #68]	; 0x44
    66fe:	4650      	mov	r0, sl
    6700:	f001 fb5a 	bl	7db8 <_Balloc>
    6704:	4653      	mov	r3, sl
    6706:	6418      	str	r0, [r3, #64]	; 0x40
    6708:	4643      	mov	r3, r8
    670a:	900a      	str	r0, [sp, #40]	; 0x28
    670c:	2b0e      	cmp	r3, #14
    670e:	d900      	bls.n	6712 <_dtoa_r+0x222>
    6710:	e161      	b.n	69d6 <_dtoa_r+0x4e6>
    6712:	2c00      	cmp	r4, #0
    6714:	d100      	bne.n	6718 <_dtoa_r+0x228>
    6716:	e15e      	b.n	69d6 <_dtoa_r+0x4e6>
    6718:	9610      	str	r6, [sp, #64]	; 0x40
    671a:	9711      	str	r7, [sp, #68]	; 0x44
    671c:	9e03      	ldr	r6, [sp, #12]
    671e:	2e00      	cmp	r6, #0
    6720:	dc01      	bgt.n	6726 <_dtoa_r+0x236>
    6722:	f000 fd25 	bl	7170 <_dtoa_r+0xc80>
    6726:	0032      	movs	r2, r6
    6728:	210f      	movs	r1, #15
    672a:	4b65      	ldr	r3, [pc, #404]	; (68c0 <_dtoa_r+0x3d0>)
    672c:	400a      	ands	r2, r1
    672e:	00d2      	lsls	r2, r2, #3
    6730:	189b      	adds	r3, r3, r2
    6732:	1136      	asrs	r6, r6, #4
    6734:	681c      	ldr	r4, [r3, #0]
    6736:	685d      	ldr	r5, [r3, #4]
    6738:	06f3      	lsls	r3, r6, #27
    673a:	d401      	bmi.n	6740 <_dtoa_r+0x250>
    673c:	f000 fcca 	bl	70d4 <_dtoa_r+0xbe4>
    6740:	4b60      	ldr	r3, [pc, #384]	; (68c4 <_dtoa_r+0x3d4>)
    6742:	400e      	ands	r6, r1
    6744:	6a1a      	ldr	r2, [r3, #32]
    6746:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    6748:	9810      	ldr	r0, [sp, #64]	; 0x40
    674a:	9911      	ldr	r1, [sp, #68]	; 0x44
    674c:	f7fc ff2c 	bl	35a8 <__aeabi_ddiv>
    6750:	2303      	movs	r3, #3
    6752:	4698      	mov	r8, r3
    6754:	9008      	str	r0, [sp, #32]
    6756:	9109      	str	r1, [sp, #36]	; 0x24
    6758:	2e00      	cmp	r6, #0
    675a:	d011      	beq.n	6780 <_dtoa_r+0x290>
    675c:	4f59      	ldr	r7, [pc, #356]	; (68c4 <_dtoa_r+0x3d4>)
    675e:	2301      	movs	r3, #1
    6760:	4233      	tst	r3, r6
    6762:	d009      	beq.n	6778 <_dtoa_r+0x288>
    6764:	469c      	mov	ip, r3
    6766:	683a      	ldr	r2, [r7, #0]
    6768:	687b      	ldr	r3, [r7, #4]
    676a:	0020      	movs	r0, r4
    676c:	0029      	movs	r1, r5
    676e:	44e0      	add	r8, ip
    6770:	f7fd fa4e 	bl	3c10 <__aeabi_dmul>
    6774:	0004      	movs	r4, r0
    6776:	000d      	movs	r5, r1
    6778:	1076      	asrs	r6, r6, #1
    677a:	3708      	adds	r7, #8
    677c:	2e00      	cmp	r6, #0
    677e:	d1ee      	bne.n	675e <_dtoa_r+0x26e>
    6780:	0022      	movs	r2, r4
    6782:	9808      	ldr	r0, [sp, #32]
    6784:	9909      	ldr	r1, [sp, #36]	; 0x24
    6786:	002b      	movs	r3, r5
    6788:	f7fc ff0e 	bl	35a8 <__aeabi_ddiv>
    678c:	0006      	movs	r6, r0
    678e:	000f      	movs	r7, r1
    6790:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6792:	2b00      	cmp	r3, #0
    6794:	d009      	beq.n	67aa <_dtoa_r+0x2ba>
    6796:	2200      	movs	r2, #0
    6798:	4b40      	ldr	r3, [pc, #256]	; (689c <_dtoa_r+0x3ac>)
    679a:	0030      	movs	r0, r6
    679c:	0039      	movs	r1, r7
    679e:	f7fe f8e3 	bl	4968 <__aeabi_dcmplt>
    67a2:	2800      	cmp	r0, #0
    67a4:	d001      	beq.n	67aa <_dtoa_r+0x2ba>
    67a6:	f000 fdc2 	bl	732e <_dtoa_r+0xe3e>
    67aa:	4640      	mov	r0, r8
    67ac:	f7fd fffa 	bl	47a4 <__aeabi_i2d>
    67b0:	0032      	movs	r2, r6
    67b2:	003b      	movs	r3, r7
    67b4:	f7fd fa2c 	bl	3c10 <__aeabi_dmul>
    67b8:	2200      	movs	r2, #0
    67ba:	4b43      	ldr	r3, [pc, #268]	; (68c8 <_dtoa_r+0x3d8>)
    67bc:	f002 f9f0 	bl	8ba0 <__aeabi_dadd>
    67c0:	4a42      	ldr	r2, [pc, #264]	; (68cc <_dtoa_r+0x3dc>)
    67c2:	000b      	movs	r3, r1
    67c4:	4694      	mov	ip, r2
    67c6:	4463      	add	r3, ip
    67c8:	9008      	str	r0, [sp, #32]
    67ca:	9109      	str	r1, [sp, #36]	; 0x24
    67cc:	9309      	str	r3, [sp, #36]	; 0x24
    67ce:	9b07      	ldr	r3, [sp, #28]
    67d0:	2b00      	cmp	r3, #0
    67d2:	d101      	bne.n	67d8 <_dtoa_r+0x2e8>
    67d4:	f000 fc50 	bl	7078 <_dtoa_r+0xb88>
    67d8:	9b03      	ldr	r3, [sp, #12]
    67da:	9313      	str	r3, [sp, #76]	; 0x4c
    67dc:	9b07      	ldr	r3, [sp, #28]
    67de:	9312      	str	r3, [sp, #72]	; 0x48
    67e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    67e2:	2b00      	cmp	r3, #0
    67e4:	d101      	bne.n	67ea <_dtoa_r+0x2fa>
    67e6:	f000 fd1d 	bl	7224 <_dtoa_r+0xd34>
    67ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
    67ec:	2000      	movs	r0, #0
    67ee:	1e5a      	subs	r2, r3, #1
    67f0:	4b33      	ldr	r3, [pc, #204]	; (68c0 <_dtoa_r+0x3d0>)
    67f2:	00d2      	lsls	r2, r2, #3
    67f4:	189b      	adds	r3, r3, r2
    67f6:	681a      	ldr	r2, [r3, #0]
    67f8:	685b      	ldr	r3, [r3, #4]
    67fa:	4935      	ldr	r1, [pc, #212]	; (68d0 <_dtoa_r+0x3e0>)
    67fc:	f7fc fed4 	bl	35a8 <__aeabi_ddiv>
    6800:	9a08      	ldr	r2, [sp, #32]
    6802:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6804:	f7fd fc84 	bl	4110 <__aeabi_dsub>
    6808:	9008      	str	r0, [sp, #32]
    680a:	9109      	str	r1, [sp, #36]	; 0x24
    680c:	0039      	movs	r1, r7
    680e:	0030      	movs	r0, r6
    6810:	f7fd ff94 	bl	473c <__aeabi_d2iz>
    6814:	0004      	movs	r4, r0
    6816:	f7fd ffc5 	bl	47a4 <__aeabi_i2d>
    681a:	0002      	movs	r2, r0
    681c:	000b      	movs	r3, r1
    681e:	0030      	movs	r0, r6
    6820:	0039      	movs	r1, r7
    6822:	f7fd fc75 	bl	4110 <__aeabi_dsub>
    6826:	0005      	movs	r5, r0
    6828:	000e      	movs	r6, r1
    682a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    682c:	3430      	adds	r4, #48	; 0x30
    682e:	1c51      	adds	r1, r2, #1
    6830:	b2e7      	uxtb	r7, r4
    6832:	9114      	str	r1, [sp, #80]	; 0x50
    6834:	7017      	strb	r7, [r2, #0]
    6836:	0033      	movs	r3, r6
    6838:	9808      	ldr	r0, [sp, #32]
    683a:	9909      	ldr	r1, [sp, #36]	; 0x24
    683c:	002a      	movs	r2, r5
    683e:	f7fe f8a7 	bl	4990 <__aeabi_dcmpgt>
    6842:	2800      	cmp	r0, #0
    6844:	d001      	beq.n	684a <_dtoa_r+0x35a>
    6846:	f000 fdfe 	bl	7446 <_dtoa_r+0xf56>
    684a:	002a      	movs	r2, r5
    684c:	0033      	movs	r3, r6
    684e:	2000      	movs	r0, #0
    6850:	4912      	ldr	r1, [pc, #72]	; (689c <_dtoa_r+0x3ac>)
    6852:	f7fd fc5d 	bl	4110 <__aeabi_dsub>
    6856:	0002      	movs	r2, r0
    6858:	000b      	movs	r3, r1
    685a:	9808      	ldr	r0, [sp, #32]
    685c:	9909      	ldr	r1, [sp, #36]	; 0x24
    685e:	f7fe f897 	bl	4990 <__aeabi_dcmpgt>
    6862:	2800      	cmp	r0, #0
    6864:	d001      	beq.n	686a <_dtoa_r+0x37a>
    6866:	f000 fde7 	bl	7438 <_dtoa_r+0xf48>
    686a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    686c:	2b01      	cmp	r3, #1
    686e:	d101      	bne.n	6874 <_dtoa_r+0x384>
    6870:	f000 fc78 	bl	7164 <_dtoa_r+0xc74>
    6874:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6876:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6878:	4694      	mov	ip, r2
    687a:	4463      	add	r3, ip
    687c:	4698      	mov	r8, r3
    687e:	464b      	mov	r3, r9
    6880:	9312      	str	r3, [sp, #72]	; 0x48
    6882:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6884:	4699      	mov	r9, r3
    6886:	e038      	b.n	68fa <_dtoa_r+0x40a>
    6888:	7ff00000 	.word	0x7ff00000
    688c:	0000a849 	.word	0x0000a849
    6890:	0000270f 	.word	0x0000270f
    6894:	0000a86c 	.word	0x0000a86c
    6898:	0000a878 	.word	0x0000a878
    689c:	3ff00000 	.word	0x3ff00000
    68a0:	fffffc01 	.word	0xfffffc01
    68a4:	3ff80000 	.word	0x3ff80000
    68a8:	636f4361 	.word	0x636f4361
    68ac:	3fd287a7 	.word	0x3fd287a7
    68b0:	8b60c8b3 	.word	0x8b60c8b3
    68b4:	3fc68a28 	.word	0x3fc68a28
    68b8:	509f79fb 	.word	0x509f79fb
    68bc:	3fd34413 	.word	0x3fd34413
    68c0:	0000a8a8 	.word	0x0000a8a8
    68c4:	0000a880 	.word	0x0000a880
    68c8:	401c0000 	.word	0x401c0000
    68cc:	fcc00000 	.word	0xfcc00000
    68d0:	3fe00000 	.word	0x3fe00000
    68d4:	002a      	movs	r2, r5
    68d6:	0033      	movs	r3, r6
    68d8:	2000      	movs	r0, #0
    68da:	49b9      	ldr	r1, [pc, #740]	; (6bc0 <_dtoa_r+0x6d0>)
    68dc:	f7fd fc18 	bl	4110 <__aeabi_dsub>
    68e0:	9a08      	ldr	r2, [sp, #32]
    68e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    68e4:	f7fe f840 	bl	4968 <__aeabi_dcmplt>
    68e8:	2800      	cmp	r0, #0
    68ea:	d001      	beq.n	68f0 <_dtoa_r+0x400>
    68ec:	f000 fd74 	bl	73d8 <_dtoa_r+0xee8>
    68f0:	46a1      	mov	r9, r4
    68f2:	4544      	cmp	r4, r8
    68f4:	d101      	bne.n	68fa <_dtoa_r+0x40a>
    68f6:	f000 fc33 	bl	7160 <_dtoa_r+0xc70>
    68fa:	9808      	ldr	r0, [sp, #32]
    68fc:	9909      	ldr	r1, [sp, #36]	; 0x24
    68fe:	2200      	movs	r2, #0
    6900:	4bb0      	ldr	r3, [pc, #704]	; (6bc4 <_dtoa_r+0x6d4>)
    6902:	f7fd f985 	bl	3c10 <__aeabi_dmul>
    6906:	2200      	movs	r2, #0
    6908:	4bae      	ldr	r3, [pc, #696]	; (6bc4 <_dtoa_r+0x6d4>)
    690a:	9008      	str	r0, [sp, #32]
    690c:	9109      	str	r1, [sp, #36]	; 0x24
    690e:	0028      	movs	r0, r5
    6910:	0031      	movs	r1, r6
    6912:	f7fd f97d 	bl	3c10 <__aeabi_dmul>
    6916:	000d      	movs	r5, r1
    6918:	0004      	movs	r4, r0
    691a:	f7fd ff0f 	bl	473c <__aeabi_d2iz>
    691e:	0007      	movs	r7, r0
    6920:	f7fd ff40 	bl	47a4 <__aeabi_i2d>
    6924:	0002      	movs	r2, r0
    6926:	000b      	movs	r3, r1
    6928:	0020      	movs	r0, r4
    692a:	0029      	movs	r1, r5
    692c:	f7fd fbf0 	bl	4110 <__aeabi_dsub>
    6930:	464b      	mov	r3, r9
    6932:	3730      	adds	r7, #48	; 0x30
    6934:	b2ff      	uxtb	r7, r7
    6936:	1c5c      	adds	r4, r3, #1
    6938:	701f      	strb	r7, [r3, #0]
    693a:	9a08      	ldr	r2, [sp, #32]
    693c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    693e:	0005      	movs	r5, r0
    6940:	000e      	movs	r6, r1
    6942:	f7fe f811 	bl	4968 <__aeabi_dcmplt>
    6946:	2800      	cmp	r0, #0
    6948:	d0c4      	beq.n	68d4 <_dtoa_r+0x3e4>
    694a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    694c:	9303      	str	r3, [sp, #12]
    694e:	4659      	mov	r1, fp
    6950:	4650      	mov	r0, sl
    6952:	f001 fa59 	bl	7e08 <_Bfree>
    6956:	2300      	movs	r3, #0
    6958:	7023      	strb	r3, [r4, #0]
    695a:	9b03      	ldr	r3, [sp, #12]
    695c:	9a24      	ldr	r2, [sp, #144]	; 0x90
    695e:	3301      	adds	r3, #1
    6960:	6013      	str	r3, [r2, #0]
    6962:	9b26      	ldr	r3, [sp, #152]	; 0x98
    6964:	2b00      	cmp	r3, #0
    6966:	d100      	bne.n	696a <_dtoa_r+0x47a>
    6968:	e3a8      	b.n	70bc <_dtoa_r+0xbcc>
    696a:	601c      	str	r4, [r3, #0]
    696c:	980a      	ldr	r0, [sp, #40]	; 0x28
    696e:	e5f4      	b.n	655a <_dtoa_r+0x6a>
    6970:	9b16      	ldr	r3, [sp, #88]	; 0x58
    6972:	4699      	mov	r9, r3
    6974:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6976:	444b      	add	r3, r9
    6978:	001c      	movs	r4, r3
    697a:	4b93      	ldr	r3, [pc, #588]	; (6bc8 <_dtoa_r+0x6d8>)
    697c:	18e3      	adds	r3, r4, r3
    697e:	2b20      	cmp	r3, #32
    6980:	dc00      	bgt.n	6984 <_dtoa_r+0x494>
    6982:	e17e      	b.n	6c82 <_dtoa_r+0x792>
    6984:	0031      	movs	r1, r6
    6986:	4a91      	ldr	r2, [pc, #580]	; (6bcc <_dtoa_r+0x6dc>)
    6988:	4640      	mov	r0, r8
    698a:	18a2      	adds	r2, r4, r2
    698c:	40d1      	lsrs	r1, r2
    698e:	000a      	movs	r2, r1
    6990:	2140      	movs	r1, #64	; 0x40
    6992:	1acb      	subs	r3, r1, r3
    6994:	4098      	lsls	r0, r3
    6996:	4310      	orrs	r0, r2
    6998:	f7fd ff46 	bl	4828 <__aeabi_ui2d>
    699c:	1e63      	subs	r3, r4, #1
    699e:	4698      	mov	r8, r3
    69a0:	2301      	movs	r3, #1
    69a2:	4d8b      	ldr	r5, [pc, #556]	; (6bd0 <_dtoa_r+0x6e0>)
    69a4:	930f      	str	r3, [sp, #60]	; 0x3c
    69a6:	1949      	adds	r1, r1, r5
    69a8:	e618      	b.n	65dc <_dtoa_r+0xec>
    69aa:	488a      	ldr	r0, [pc, #552]	; (6bd4 <_dtoa_r+0x6e4>)
    69ac:	e5d5      	b.n	655a <_dtoa_r+0x6a>
    69ae:	2300      	movs	r3, #0
    69b0:	4652      	mov	r2, sl
    69b2:	2100      	movs	r1, #0
    69b4:	6453      	str	r3, [r2, #68]	; 0x44
    69b6:	4650      	mov	r0, sl
    69b8:	f001 f9fe 	bl	7db8 <_Balloc>
    69bc:	4653      	mov	r3, sl
    69be:	6418      	str	r0, [r3, #64]	; 0x40
    69c0:	2301      	movs	r3, #1
    69c2:	425b      	negs	r3, r3
    69c4:	9307      	str	r3, [sp, #28]
    69c6:	930e      	str	r3, [sp, #56]	; 0x38
    69c8:	3302      	adds	r3, #2
    69ca:	2200      	movs	r2, #0
    69cc:	930b      	str	r3, [sp, #44]	; 0x2c
    69ce:	2300      	movs	r3, #0
    69d0:	900a      	str	r0, [sp, #40]	; 0x28
    69d2:	9223      	str	r2, [sp, #140]	; 0x8c
    69d4:	9322      	str	r3, [sp, #136]	; 0x88
    69d6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    69d8:	2b00      	cmp	r3, #0
    69da:	da00      	bge.n	69de <_dtoa_r+0x4ee>
    69dc:	e0ab      	b.n	6b36 <_dtoa_r+0x646>
    69de:	9a03      	ldr	r2, [sp, #12]
    69e0:	2a0e      	cmp	r2, #14
    69e2:	dd00      	ble.n	69e6 <_dtoa_r+0x4f6>
    69e4:	e0a7      	b.n	6b36 <_dtoa_r+0x646>
    69e6:	4b7c      	ldr	r3, [pc, #496]	; (6bd8 <_dtoa_r+0x6e8>)
    69e8:	00d2      	lsls	r2, r2, #3
    69ea:	189b      	adds	r3, r3, r2
    69ec:	685c      	ldr	r4, [r3, #4]
    69ee:	681b      	ldr	r3, [r3, #0]
    69f0:	9304      	str	r3, [sp, #16]
    69f2:	9405      	str	r4, [sp, #20]
    69f4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    69f6:	2b00      	cmp	r3, #0
    69f8:	da00      	bge.n	69fc <_dtoa_r+0x50c>
    69fa:	e2a7      	b.n	6f4c <_dtoa_r+0xa5c>
    69fc:	9c04      	ldr	r4, [sp, #16]
    69fe:	9d05      	ldr	r5, [sp, #20]
    6a00:	0030      	movs	r0, r6
    6a02:	0022      	movs	r2, r4
    6a04:	002b      	movs	r3, r5
    6a06:	0039      	movs	r1, r7
    6a08:	f7fc fdce 	bl	35a8 <__aeabi_ddiv>
    6a0c:	f7fd fe96 	bl	473c <__aeabi_d2iz>
    6a10:	4680      	mov	r8, r0
    6a12:	f7fd fec7 	bl	47a4 <__aeabi_i2d>
    6a16:	0022      	movs	r2, r4
    6a18:	002b      	movs	r3, r5
    6a1a:	f7fd f8f9 	bl	3c10 <__aeabi_dmul>
    6a1e:	0002      	movs	r2, r0
    6a20:	000b      	movs	r3, r1
    6a22:	0030      	movs	r0, r6
    6a24:	0039      	movs	r1, r7
    6a26:	f7fd fb73 	bl	4110 <__aeabi_dsub>
    6a2a:	4643      	mov	r3, r8
    6a2c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6a2e:	3330      	adds	r3, #48	; 0x30
    6a30:	7013      	strb	r3, [r2, #0]
    6a32:	9b07      	ldr	r3, [sp, #28]
    6a34:	0006      	movs	r6, r0
    6a36:	000f      	movs	r7, r1
    6a38:	1c54      	adds	r4, r2, #1
    6a3a:	2b01      	cmp	r3, #1
    6a3c:	d04e      	beq.n	6adc <_dtoa_r+0x5ec>
    6a3e:	2200      	movs	r2, #0
    6a40:	4b60      	ldr	r3, [pc, #384]	; (6bc4 <_dtoa_r+0x6d4>)
    6a42:	f7fd f8e5 	bl	3c10 <__aeabi_dmul>
    6a46:	2200      	movs	r2, #0
    6a48:	2300      	movs	r3, #0
    6a4a:	0006      	movs	r6, r0
    6a4c:	000f      	movs	r7, r1
    6a4e:	f7fd ff85 	bl	495c <__aeabi_dcmpeq>
    6a52:	2800      	cmp	r0, #0
    6a54:	d000      	beq.n	6a58 <_dtoa_r+0x568>
    6a56:	e77a      	b.n	694e <_dtoa_r+0x45e>
    6a58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6a5a:	9a07      	ldr	r2, [sp, #28]
    6a5c:	1c9d      	adds	r5, r3, #2
    6a5e:	469c      	mov	ip, r3
    6a60:	465b      	mov	r3, fp
    6a62:	9306      	str	r3, [sp, #24]
    6a64:	4653      	mov	r3, sl
    6a66:	4462      	add	r2, ip
    6a68:	46aa      	mov	sl, r5
    6a6a:	9c04      	ldr	r4, [sp, #16]
    6a6c:	9d05      	ldr	r5, [sp, #20]
    6a6e:	4691      	mov	r9, r2
    6a70:	9307      	str	r3, [sp, #28]
    6a72:	e00f      	b.n	6a94 <_dtoa_r+0x5a4>
    6a74:	2200      	movs	r2, #0
    6a76:	4b53      	ldr	r3, [pc, #332]	; (6bc4 <_dtoa_r+0x6d4>)
    6a78:	f7fd f8ca 	bl	3c10 <__aeabi_dmul>
    6a7c:	2301      	movs	r3, #1
    6a7e:	469c      	mov	ip, r3
    6a80:	2200      	movs	r2, #0
    6a82:	2300      	movs	r3, #0
    6a84:	0006      	movs	r6, r0
    6a86:	000f      	movs	r7, r1
    6a88:	44e2      	add	sl, ip
    6a8a:	f7fd ff67 	bl	495c <__aeabi_dcmpeq>
    6a8e:	2800      	cmp	r0, #0
    6a90:	d000      	beq.n	6a94 <_dtoa_r+0x5a4>
    6a92:	e2d9      	b.n	7048 <_dtoa_r+0xb58>
    6a94:	0022      	movs	r2, r4
    6a96:	002b      	movs	r3, r5
    6a98:	0030      	movs	r0, r6
    6a9a:	0039      	movs	r1, r7
    6a9c:	f7fc fd84 	bl	35a8 <__aeabi_ddiv>
    6aa0:	f7fd fe4c 	bl	473c <__aeabi_d2iz>
    6aa4:	4680      	mov	r8, r0
    6aa6:	f7fd fe7d 	bl	47a4 <__aeabi_i2d>
    6aaa:	0022      	movs	r2, r4
    6aac:	002b      	movs	r3, r5
    6aae:	f7fd f8af 	bl	3c10 <__aeabi_dmul>
    6ab2:	0002      	movs	r2, r0
    6ab4:	000b      	movs	r3, r1
    6ab6:	0030      	movs	r0, r6
    6ab8:	0039      	movs	r1, r7
    6aba:	f7fd fb29 	bl	4110 <__aeabi_dsub>
    6abe:	4653      	mov	r3, sl
    6ac0:	4642      	mov	r2, r8
    6ac2:	3b01      	subs	r3, #1
    6ac4:	3230      	adds	r2, #48	; 0x30
    6ac6:	0006      	movs	r6, r0
    6ac8:	000f      	movs	r7, r1
    6aca:	46d3      	mov	fp, sl
    6acc:	701a      	strb	r2, [r3, #0]
    6ace:	45d1      	cmp	r9, sl
    6ad0:	d1d0      	bne.n	6a74 <_dtoa_r+0x584>
    6ad2:	9b06      	ldr	r3, [sp, #24]
    6ad4:	4654      	mov	r4, sl
    6ad6:	469b      	mov	fp, r3
    6ad8:	9b07      	ldr	r3, [sp, #28]
    6ada:	469a      	mov	sl, r3
    6adc:	0032      	movs	r2, r6
    6ade:	003b      	movs	r3, r7
    6ae0:	0030      	movs	r0, r6
    6ae2:	0039      	movs	r1, r7
    6ae4:	f002 f85c 	bl	8ba0 <__aeabi_dadd>
    6ae8:	0006      	movs	r6, r0
    6aea:	000f      	movs	r7, r1
    6aec:	0002      	movs	r2, r0
    6aee:	000b      	movs	r3, r1
    6af0:	9804      	ldr	r0, [sp, #16]
    6af2:	9905      	ldr	r1, [sp, #20]
    6af4:	f7fd ff38 	bl	4968 <__aeabi_dcmplt>
    6af8:	2800      	cmp	r0, #0
    6afa:	d10c      	bne.n	6b16 <_dtoa_r+0x626>
    6afc:	9804      	ldr	r0, [sp, #16]
    6afe:	9905      	ldr	r1, [sp, #20]
    6b00:	0032      	movs	r2, r6
    6b02:	003b      	movs	r3, r7
    6b04:	f7fd ff2a 	bl	495c <__aeabi_dcmpeq>
    6b08:	2800      	cmp	r0, #0
    6b0a:	d100      	bne.n	6b0e <_dtoa_r+0x61e>
    6b0c:	e71f      	b.n	694e <_dtoa_r+0x45e>
    6b0e:	4643      	mov	r3, r8
    6b10:	07db      	lsls	r3, r3, #31
    6b12:	d400      	bmi.n	6b16 <_dtoa_r+0x626>
    6b14:	e71b      	b.n	694e <_dtoa_r+0x45e>
    6b16:	1e65      	subs	r5, r4, #1
    6b18:	782f      	ldrb	r7, [r5, #0]
    6b1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6b1c:	e006      	b.n	6b2c <_dtoa_r+0x63c>
    6b1e:	429d      	cmp	r5, r3
    6b20:	d100      	bne.n	6b24 <_dtoa_r+0x634>
    6b22:	e351      	b.n	71c8 <_dtoa_r+0xcd8>
    6b24:	3c02      	subs	r4, #2
    6b26:	7827      	ldrb	r7, [r4, #0]
    6b28:	002c      	movs	r4, r5
    6b2a:	3d01      	subs	r5, #1
    6b2c:	2f39      	cmp	r7, #57	; 0x39
    6b2e:	d0f6      	beq.n	6b1e <_dtoa_r+0x62e>
    6b30:	3701      	adds	r7, #1
    6b32:	702f      	strb	r7, [r5, #0]
    6b34:	e70b      	b.n	694e <_dtoa_r+0x45e>
    6b36:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    6b38:	2a00      	cmp	r2, #0
    6b3a:	d04f      	beq.n	6bdc <_dtoa_r+0x6ec>
    6b3c:	9a22      	ldr	r2, [sp, #136]	; 0x88
    6b3e:	2a01      	cmp	r2, #1
    6b40:	dc00      	bgt.n	6b44 <_dtoa_r+0x654>
    6b42:	e22c      	b.n	6f9e <_dtoa_r+0xaae>
    6b44:	9b07      	ldr	r3, [sp, #28]
    6b46:	1e5c      	subs	r4, r3, #1
    6b48:	464b      	mov	r3, r9
    6b4a:	45a1      	cmp	r9, r4
    6b4c:	da00      	bge.n	6b50 <_dtoa_r+0x660>
    6b4e:	e2b8      	b.n	70c2 <_dtoa_r+0xbd2>
    6b50:	1b1c      	subs	r4, r3, r4
    6b52:	9b07      	ldr	r3, [sp, #28]
    6b54:	2b00      	cmp	r3, #0
    6b56:	da00      	bge.n	6b5a <_dtoa_r+0x66a>
    6b58:	e3d4      	b.n	7304 <_dtoa_r+0xe14>
    6b5a:	9b06      	ldr	r3, [sp, #24]
    6b5c:	9308      	str	r3, [sp, #32]
    6b5e:	9b07      	ldr	r3, [sp, #28]
    6b60:	9a06      	ldr	r2, [sp, #24]
    6b62:	2101      	movs	r1, #1
    6b64:	4694      	mov	ip, r2
    6b66:	449c      	add	ip, r3
    6b68:	4662      	mov	r2, ip
    6b6a:	9206      	str	r2, [sp, #24]
    6b6c:	9a04      	ldr	r2, [sp, #16]
    6b6e:	4650      	mov	r0, sl
    6b70:	4694      	mov	ip, r2
    6b72:	449c      	add	ip, r3
    6b74:	4663      	mov	r3, ip
    6b76:	9304      	str	r3, [sp, #16]
    6b78:	f001 f9de 	bl	7f38 <__i2b>
    6b7c:	4680      	mov	r8, r0
    6b7e:	e032      	b.n	6be6 <_dtoa_r+0x6f6>
    6b80:	9a06      	ldr	r2, [sp, #24]
    6b82:	9b03      	ldr	r3, [sp, #12]
    6b84:	1ad2      	subs	r2, r2, r3
    6b86:	425b      	negs	r3, r3
    6b88:	4699      	mov	r9, r3
    6b8a:	2300      	movs	r3, #0
    6b8c:	9206      	str	r2, [sp, #24]
    6b8e:	930d      	str	r3, [sp, #52]	; 0x34
    6b90:	e579      	b.n	6686 <_dtoa_r+0x196>
    6b92:	9803      	ldr	r0, [sp, #12]
    6b94:	f7fd fe06 	bl	47a4 <__aeabi_i2d>
    6b98:	000b      	movs	r3, r1
    6b9a:	0002      	movs	r2, r0
    6b9c:	0029      	movs	r1, r5
    6b9e:	0020      	movs	r0, r4
    6ba0:	f7fd fedc 	bl	495c <__aeabi_dcmpeq>
    6ba4:	0002      	movs	r2, r0
    6ba6:	4250      	negs	r0, r2
    6ba8:	4150      	adcs	r0, r2
    6baa:	9b03      	ldr	r3, [sp, #12]
    6bac:	1a1b      	subs	r3, r3, r0
    6bae:	9303      	str	r3, [sp, #12]
    6bb0:	e53d      	b.n	662e <_dtoa_r+0x13e>
    6bb2:	2301      	movs	r3, #1
    6bb4:	1a9b      	subs	r3, r3, r2
    6bb6:	9306      	str	r3, [sp, #24]
    6bb8:	2300      	movs	r3, #0
    6bba:	9304      	str	r3, [sp, #16]
    6bbc:	e557      	b.n	666e <_dtoa_r+0x17e>
    6bbe:	46c0      	nop			; (mov r8, r8)
    6bc0:	3ff00000 	.word	0x3ff00000
    6bc4:	40240000 	.word	0x40240000
    6bc8:	00000432 	.word	0x00000432
    6bcc:	00000412 	.word	0x00000412
    6bd0:	fe100000 	.word	0xfe100000
    6bd4:	0000a848 	.word	0x0000a848
    6bd8:	0000a8a8 	.word	0x0000a8a8
    6bdc:	9b06      	ldr	r3, [sp, #24]
    6bde:	464c      	mov	r4, r9
    6be0:	9308      	str	r3, [sp, #32]
    6be2:	2300      	movs	r3, #0
    6be4:	4698      	mov	r8, r3
    6be6:	9908      	ldr	r1, [sp, #32]
    6be8:	1e0b      	subs	r3, r1, #0
    6bea:	dd0e      	ble.n	6c0a <_dtoa_r+0x71a>
    6bec:	9a04      	ldr	r2, [sp, #16]
    6bee:	2a00      	cmp	r2, #0
    6bf0:	dd0b      	ble.n	6c0a <_dtoa_r+0x71a>
    6bf2:	4293      	cmp	r3, r2
    6bf4:	dd00      	ble.n	6bf8 <_dtoa_r+0x708>
    6bf6:	e187      	b.n	6f08 <_dtoa_r+0xa18>
    6bf8:	9a06      	ldr	r2, [sp, #24]
    6bfa:	1ad2      	subs	r2, r2, r3
    6bfc:	9206      	str	r2, [sp, #24]
    6bfe:	9a08      	ldr	r2, [sp, #32]
    6c00:	1ad2      	subs	r2, r2, r3
    6c02:	9208      	str	r2, [sp, #32]
    6c04:	9a04      	ldr	r2, [sp, #16]
    6c06:	1ad3      	subs	r3, r2, r3
    6c08:	9304      	str	r3, [sp, #16]
    6c0a:	464b      	mov	r3, r9
    6c0c:	2b00      	cmp	r3, #0
    6c0e:	d01a      	beq.n	6c46 <_dtoa_r+0x756>
    6c10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6c12:	2b00      	cmp	r3, #0
    6c14:	d100      	bne.n	6c18 <_dtoa_r+0x728>
    6c16:	e1bb      	b.n	6f90 <_dtoa_r+0xaa0>
    6c18:	2c00      	cmp	r4, #0
    6c1a:	dd10      	ble.n	6c3e <_dtoa_r+0x74e>
    6c1c:	4641      	mov	r1, r8
    6c1e:	0022      	movs	r2, r4
    6c20:	4650      	mov	r0, sl
    6c22:	f001 fa3d 	bl	80a0 <__pow5mult>
    6c26:	465a      	mov	r2, fp
    6c28:	0001      	movs	r1, r0
    6c2a:	4680      	mov	r8, r0
    6c2c:	4650      	mov	r0, sl
    6c2e:	f001 f98d 	bl	7f4c <__multiply>
    6c32:	0005      	movs	r5, r0
    6c34:	4659      	mov	r1, fp
    6c36:	4650      	mov	r0, sl
    6c38:	f001 f8e6 	bl	7e08 <_Bfree>
    6c3c:	46ab      	mov	fp, r5
    6c3e:	464b      	mov	r3, r9
    6c40:	1b1a      	subs	r2, r3, r4
    6c42:	d000      	beq.n	6c46 <_dtoa_r+0x756>
    6c44:	e1a5      	b.n	6f92 <_dtoa_r+0xaa2>
    6c46:	2101      	movs	r1, #1
    6c48:	4650      	mov	r0, sl
    6c4a:	f001 f975 	bl	7f38 <__i2b>
    6c4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6c50:	4681      	mov	r9, r0
    6c52:	2b00      	cmp	r3, #0
    6c54:	dd1d      	ble.n	6c92 <_dtoa_r+0x7a2>
    6c56:	001a      	movs	r2, r3
    6c58:	0001      	movs	r1, r0
    6c5a:	4650      	mov	r0, sl
    6c5c:	f001 fa20 	bl	80a0 <__pow5mult>
    6c60:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6c62:	4681      	mov	r9, r0
    6c64:	2b01      	cmp	r3, #1
    6c66:	dc00      	bgt.n	6c6a <_dtoa_r+0x77a>
    6c68:	e150      	b.n	6f0c <_dtoa_r+0xa1c>
    6c6a:	2400      	movs	r4, #0
    6c6c:	464b      	mov	r3, r9
    6c6e:	691b      	ldr	r3, [r3, #16]
    6c70:	3303      	adds	r3, #3
    6c72:	009b      	lsls	r3, r3, #2
    6c74:	444b      	add	r3, r9
    6c76:	6858      	ldr	r0, [r3, #4]
    6c78:	f001 f916 	bl	7ea8 <__hi0bits>
    6c7c:	2320      	movs	r3, #32
    6c7e:	1a1b      	subs	r3, r3, r0
    6c80:	e010      	b.n	6ca4 <_dtoa_r+0x7b4>
    6c82:	2220      	movs	r2, #32
    6c84:	0030      	movs	r0, r6
    6c86:	1ad3      	subs	r3, r2, r3
    6c88:	4098      	lsls	r0, r3
    6c8a:	e685      	b.n	6998 <_dtoa_r+0x4a8>
    6c8c:	2300      	movs	r3, #0
    6c8e:	930c      	str	r3, [sp, #48]	; 0x30
    6c90:	e4e3      	b.n	665a <_dtoa_r+0x16a>
    6c92:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6c94:	2400      	movs	r4, #0
    6c96:	2b01      	cmp	r3, #1
    6c98:	dc00      	bgt.n	6c9c <_dtoa_r+0x7ac>
    6c9a:	e18b      	b.n	6fb4 <_dtoa_r+0xac4>
    6c9c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    6c9e:	2301      	movs	r3, #1
    6ca0:	2a00      	cmp	r2, #0
    6ca2:	d1e3      	bne.n	6c6c <_dtoa_r+0x77c>
    6ca4:	9904      	ldr	r1, [sp, #16]
    6ca6:	201f      	movs	r0, #31
    6ca8:	468c      	mov	ip, r1
    6caa:	4463      	add	r3, ip
    6cac:	4018      	ands	r0, r3
    6cae:	d100      	bne.n	6cb2 <_dtoa_r+0x7c2>
    6cb0:	e0ae      	b.n	6e10 <_dtoa_r+0x920>
    6cb2:	2320      	movs	r3, #32
    6cb4:	1a1b      	subs	r3, r3, r0
    6cb6:	2b04      	cmp	r3, #4
    6cb8:	dc00      	bgt.n	6cbc <_dtoa_r+0x7cc>
    6cba:	e3cc      	b.n	7456 <_dtoa_r+0xf66>
    6cbc:	231c      	movs	r3, #28
    6cbe:	1a18      	subs	r0, r3, r0
    6cc0:	9b06      	ldr	r3, [sp, #24]
    6cc2:	469c      	mov	ip, r3
    6cc4:	4484      	add	ip, r0
    6cc6:	4663      	mov	r3, ip
    6cc8:	9306      	str	r3, [sp, #24]
    6cca:	9b08      	ldr	r3, [sp, #32]
    6ccc:	469c      	mov	ip, r3
    6cce:	4484      	add	ip, r0
    6cd0:	4663      	mov	r3, ip
    6cd2:	468c      	mov	ip, r1
    6cd4:	4484      	add	ip, r0
    6cd6:	9308      	str	r3, [sp, #32]
    6cd8:	4663      	mov	r3, ip
    6cda:	9304      	str	r3, [sp, #16]
    6cdc:	9b06      	ldr	r3, [sp, #24]
    6cde:	2b00      	cmp	r3, #0
    6ce0:	dd05      	ble.n	6cee <_dtoa_r+0x7fe>
    6ce2:	4659      	mov	r1, fp
    6ce4:	001a      	movs	r2, r3
    6ce6:	4650      	mov	r0, sl
    6ce8:	f001 fa3a 	bl	8160 <__lshift>
    6cec:	4683      	mov	fp, r0
    6cee:	9b04      	ldr	r3, [sp, #16]
    6cf0:	2b00      	cmp	r3, #0
    6cf2:	dd05      	ble.n	6d00 <_dtoa_r+0x810>
    6cf4:	4649      	mov	r1, r9
    6cf6:	001a      	movs	r2, r3
    6cf8:	4650      	mov	r0, sl
    6cfa:	f001 fa31 	bl	8160 <__lshift>
    6cfe:	4681      	mov	r9, r0
    6d00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6d02:	2b00      	cmp	r3, #0
    6d04:	d000      	beq.n	6d08 <_dtoa_r+0x818>
    6d06:	e094      	b.n	6e32 <_dtoa_r+0x942>
    6d08:	9b07      	ldr	r3, [sp, #28]
    6d0a:	2b00      	cmp	r3, #0
    6d0c:	dc00      	bgt.n	6d10 <_dtoa_r+0x820>
    6d0e:	e175      	b.n	6ffc <_dtoa_r+0xb0c>
    6d10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6d12:	2b00      	cmp	r3, #0
    6d14:	d100      	bne.n	6d18 <_dtoa_r+0x828>
    6d16:	e0a6      	b.n	6e66 <_dtoa_r+0x976>
    6d18:	9b08      	ldr	r3, [sp, #32]
    6d1a:	2b00      	cmp	r3, #0
    6d1c:	dd05      	ble.n	6d2a <_dtoa_r+0x83a>
    6d1e:	4641      	mov	r1, r8
    6d20:	001a      	movs	r2, r3
    6d22:	4650      	mov	r0, sl
    6d24:	f001 fa1c 	bl	8160 <__lshift>
    6d28:	4680      	mov	r8, r0
    6d2a:	4643      	mov	r3, r8
    6d2c:	930c      	str	r3, [sp, #48]	; 0x30
    6d2e:	2c00      	cmp	r4, #0
    6d30:	d000      	beq.n	6d34 <_dtoa_r+0x844>
    6d32:	e250      	b.n	71d6 <_dtoa_r+0xce6>
    6d34:	9c07      	ldr	r4, [sp, #28]
    6d36:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6d38:	3c01      	subs	r4, #1
    6d3a:	0023      	movs	r3, r4
    6d3c:	4694      	mov	ip, r2
    6d3e:	4463      	add	r3, ip
    6d40:	9308      	str	r3, [sp, #32]
    6d42:	2301      	movs	r3, #1
    6d44:	4033      	ands	r3, r6
    6d46:	9307      	str	r3, [sp, #28]
    6d48:	464b      	mov	r3, r9
    6d4a:	9306      	str	r3, [sp, #24]
    6d4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6d4e:	4657      	mov	r7, sl
    6d50:	4645      	mov	r5, r8
    6d52:	465e      	mov	r6, fp
    6d54:	4692      	mov	sl, r2
    6d56:	4698      	mov	r8, r3
    6d58:	9b06      	ldr	r3, [sp, #24]
    6d5a:	0030      	movs	r0, r6
    6d5c:	0019      	movs	r1, r3
    6d5e:	4699      	mov	r9, r3
    6d60:	f7ff fb1c 	bl	639c <quorem>
    6d64:	0003      	movs	r3, r0
    6d66:	900b      	str	r0, [sp, #44]	; 0x2c
    6d68:	3330      	adds	r3, #48	; 0x30
    6d6a:	0029      	movs	r1, r5
    6d6c:	0030      	movs	r0, r6
    6d6e:	9304      	str	r3, [sp, #16]
    6d70:	f001 fa56 	bl	8220 <__mcmp>
    6d74:	4649      	mov	r1, r9
    6d76:	0004      	movs	r4, r0
    6d78:	4642      	mov	r2, r8
    6d7a:	0038      	movs	r0, r7
    6d7c:	f001 fa6a 	bl	8254 <__mdiff>
    6d80:	68c3      	ldr	r3, [r0, #12]
    6d82:	4681      	mov	r9, r0
    6d84:	2b00      	cmp	r3, #0
    6d86:	d000      	beq.n	6d8a <_dtoa_r+0x89a>
    6d88:	e11e      	b.n	6fc8 <_dtoa_r+0xad8>
    6d8a:	0001      	movs	r1, r0
    6d8c:	0030      	movs	r0, r6
    6d8e:	f001 fa47 	bl	8220 <__mcmp>
    6d92:	4683      	mov	fp, r0
    6d94:	4649      	mov	r1, r9
    6d96:	0038      	movs	r0, r7
    6d98:	f001 f836 	bl	7e08 <_Bfree>
    6d9c:	465b      	mov	r3, fp
    6d9e:	9a22      	ldr	r2, [sp, #136]	; 0x88
    6da0:	4313      	orrs	r3, r2
    6da2:	d103      	bne.n	6dac <_dtoa_r+0x8bc>
    6da4:	9b07      	ldr	r3, [sp, #28]
    6da6:	2b00      	cmp	r3, #0
    6da8:	d100      	bne.n	6dac <_dtoa_r+0x8bc>
    6daa:	e306      	b.n	73ba <_dtoa_r+0xeca>
    6dac:	2c00      	cmp	r4, #0
    6dae:	da00      	bge.n	6db2 <_dtoa_r+0x8c2>
    6db0:	e1a8      	b.n	7104 <_dtoa_r+0xc14>
    6db2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6db4:	431c      	orrs	r4, r3
    6db6:	d103      	bne.n	6dc0 <_dtoa_r+0x8d0>
    6db8:	9b07      	ldr	r3, [sp, #28]
    6dba:	2b00      	cmp	r3, #0
    6dbc:	d100      	bne.n	6dc0 <_dtoa_r+0x8d0>
    6dbe:	e1a1      	b.n	7104 <_dtoa_r+0xc14>
    6dc0:	465b      	mov	r3, fp
    6dc2:	2b00      	cmp	r3, #0
    6dc4:	dd00      	ble.n	6dc8 <_dtoa_r+0x8d8>
    6dc6:	e282      	b.n	72ce <_dtoa_r+0xdde>
    6dc8:	4669      	mov	r1, sp
    6dca:	4652      	mov	r2, sl
    6dcc:	4653      	mov	r3, sl
    6dce:	7c09      	ldrb	r1, [r1, #16]
    6dd0:	1c5c      	adds	r4, r3, #1
    6dd2:	7011      	strb	r1, [r2, #0]
    6dd4:	9a08      	ldr	r2, [sp, #32]
    6dd6:	4552      	cmp	r2, sl
    6dd8:	d100      	bne.n	6ddc <_dtoa_r+0x8ec>
    6dda:	e28a      	b.n	72f2 <_dtoa_r+0xe02>
    6ddc:	0031      	movs	r1, r6
    6dde:	2300      	movs	r3, #0
    6de0:	220a      	movs	r2, #10
    6de2:	0038      	movs	r0, r7
    6de4:	f001 f81a 	bl	7e1c <__multadd>
    6de8:	2300      	movs	r3, #0
    6dea:	0006      	movs	r6, r0
    6dec:	220a      	movs	r2, #10
    6dee:	0029      	movs	r1, r5
    6df0:	0038      	movs	r0, r7
    6df2:	4545      	cmp	r5, r8
    6df4:	d100      	bne.n	6df8 <_dtoa_r+0x908>
    6df6:	e0e1      	b.n	6fbc <_dtoa_r+0xacc>
    6df8:	f001 f810 	bl	7e1c <__multadd>
    6dfc:	4641      	mov	r1, r8
    6dfe:	0005      	movs	r5, r0
    6e00:	2300      	movs	r3, #0
    6e02:	220a      	movs	r2, #10
    6e04:	0038      	movs	r0, r7
    6e06:	f001 f809 	bl	7e1c <__multadd>
    6e0a:	46a2      	mov	sl, r4
    6e0c:	4680      	mov	r8, r0
    6e0e:	e7a3      	b.n	6d58 <_dtoa_r+0x868>
    6e10:	201c      	movs	r0, #28
    6e12:	9b06      	ldr	r3, [sp, #24]
    6e14:	469c      	mov	ip, r3
    6e16:	4484      	add	ip, r0
    6e18:	4663      	mov	r3, ip
    6e1a:	9306      	str	r3, [sp, #24]
    6e1c:	9b08      	ldr	r3, [sp, #32]
    6e1e:	469c      	mov	ip, r3
    6e20:	4484      	add	ip, r0
    6e22:	4663      	mov	r3, ip
    6e24:	9308      	str	r3, [sp, #32]
    6e26:	9b04      	ldr	r3, [sp, #16]
    6e28:	469c      	mov	ip, r3
    6e2a:	4484      	add	ip, r0
    6e2c:	4663      	mov	r3, ip
    6e2e:	9304      	str	r3, [sp, #16]
    6e30:	e754      	b.n	6cdc <_dtoa_r+0x7ec>
    6e32:	4649      	mov	r1, r9
    6e34:	4658      	mov	r0, fp
    6e36:	f001 f9f3 	bl	8220 <__mcmp>
    6e3a:	2800      	cmp	r0, #0
    6e3c:	db00      	blt.n	6e40 <_dtoa_r+0x950>
    6e3e:	e763      	b.n	6d08 <_dtoa_r+0x818>
    6e40:	9b03      	ldr	r3, [sp, #12]
    6e42:	4659      	mov	r1, fp
    6e44:	3b01      	subs	r3, #1
    6e46:	9303      	str	r3, [sp, #12]
    6e48:	220a      	movs	r2, #10
    6e4a:	2300      	movs	r3, #0
    6e4c:	4650      	mov	r0, sl
    6e4e:	f000 ffe5 	bl	7e1c <__multadd>
    6e52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6e54:	4683      	mov	fp, r0
    6e56:	2b00      	cmp	r3, #0
    6e58:	d000      	beq.n	6e5c <_dtoa_r+0x96c>
    6e5a:	e2ca      	b.n	73f2 <_dtoa_r+0xf02>
    6e5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6e5e:	2b00      	cmp	r3, #0
    6e60:	dc00      	bgt.n	6e64 <_dtoa_r+0x974>
    6e62:	e2d8      	b.n	7416 <_dtoa_r+0xf26>
    6e64:	9307      	str	r3, [sp, #28]
    6e66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6e68:	465d      	mov	r5, fp
    6e6a:	2400      	movs	r4, #0
    6e6c:	9f07      	ldr	r7, [sp, #28]
    6e6e:	469b      	mov	fp, r3
    6e70:	e006      	b.n	6e80 <_dtoa_r+0x990>
    6e72:	0029      	movs	r1, r5
    6e74:	2300      	movs	r3, #0
    6e76:	220a      	movs	r2, #10
    6e78:	4650      	mov	r0, sl
    6e7a:	f000 ffcf 	bl	7e1c <__multadd>
    6e7e:	0005      	movs	r5, r0
    6e80:	4649      	mov	r1, r9
    6e82:	0028      	movs	r0, r5
    6e84:	f7ff fa8a 	bl	639c <quorem>
    6e88:	465b      	mov	r3, fp
    6e8a:	3030      	adds	r0, #48	; 0x30
    6e8c:	5518      	strb	r0, [r3, r4]
    6e8e:	3401      	adds	r4, #1
    6e90:	42bc      	cmp	r4, r7
    6e92:	dbee      	blt.n	6e72 <_dtoa_r+0x982>
    6e94:	46ab      	mov	fp, r5
    6e96:	0006      	movs	r6, r0
    6e98:	9c07      	ldr	r4, [sp, #28]
    6e9a:	2c00      	cmp	r4, #0
    6e9c:	dc00      	bgt.n	6ea0 <_dtoa_r+0x9b0>
    6e9e:	e237      	b.n	7310 <_dtoa_r+0xe20>
    6ea0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6ea2:	2700      	movs	r7, #0
    6ea4:	469c      	mov	ip, r3
    6ea6:	4464      	add	r4, ip
    6ea8:	4659      	mov	r1, fp
    6eaa:	2201      	movs	r2, #1
    6eac:	4650      	mov	r0, sl
    6eae:	f001 f957 	bl	8160 <__lshift>
    6eb2:	4649      	mov	r1, r9
    6eb4:	4683      	mov	fp, r0
    6eb6:	f001 f9b3 	bl	8220 <__mcmp>
    6eba:	2800      	cmp	r0, #0
    6ebc:	dc00      	bgt.n	6ec0 <_dtoa_r+0x9d0>
    6ebe:	e144      	b.n	714a <_dtoa_r+0xc5a>
    6ec0:	1e65      	subs	r5, r4, #1
    6ec2:	782b      	ldrb	r3, [r5, #0]
    6ec4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6ec6:	e006      	b.n	6ed6 <_dtoa_r+0x9e6>
    6ec8:	4295      	cmp	r5, r2
    6eca:	d100      	bne.n	6ece <_dtoa_r+0x9de>
    6ecc:	e0b1      	b.n	7032 <_dtoa_r+0xb42>
    6ece:	3c02      	subs	r4, #2
    6ed0:	7823      	ldrb	r3, [r4, #0]
    6ed2:	002c      	movs	r4, r5
    6ed4:	3d01      	subs	r5, #1
    6ed6:	2b39      	cmp	r3, #57	; 0x39
    6ed8:	d0f6      	beq.n	6ec8 <_dtoa_r+0x9d8>
    6eda:	3301      	adds	r3, #1
    6edc:	702b      	strb	r3, [r5, #0]
    6ede:	4649      	mov	r1, r9
    6ee0:	4650      	mov	r0, sl
    6ee2:	f000 ff91 	bl	7e08 <_Bfree>
    6ee6:	4643      	mov	r3, r8
    6ee8:	2b00      	cmp	r3, #0
    6eea:	d100      	bne.n	6eee <_dtoa_r+0x9fe>
    6eec:	e52f      	b.n	694e <_dtoa_r+0x45e>
    6eee:	2f00      	cmp	r7, #0
    6ef0:	d005      	beq.n	6efe <_dtoa_r+0xa0e>
    6ef2:	4547      	cmp	r7, r8
    6ef4:	d003      	beq.n	6efe <_dtoa_r+0xa0e>
    6ef6:	0039      	movs	r1, r7
    6ef8:	4650      	mov	r0, sl
    6efa:	f000 ff85 	bl	7e08 <_Bfree>
    6efe:	4641      	mov	r1, r8
    6f00:	4650      	mov	r0, sl
    6f02:	f000 ff81 	bl	7e08 <_Bfree>
    6f06:	e522      	b.n	694e <_dtoa_r+0x45e>
    6f08:	0013      	movs	r3, r2
    6f0a:	e675      	b.n	6bf8 <_dtoa_r+0x708>
    6f0c:	2e00      	cmp	r6, #0
    6f0e:	d000      	beq.n	6f12 <_dtoa_r+0xa22>
    6f10:	e6ab      	b.n	6c6a <_dtoa_r+0x77a>
    6f12:	033b      	lsls	r3, r7, #12
    6f14:	2400      	movs	r4, #0
    6f16:	2b00      	cmp	r3, #0
    6f18:	d000      	beq.n	6f1c <_dtoa_r+0xa2c>
    6f1a:	e6bf      	b.n	6c9c <_dtoa_r+0x7ac>
    6f1c:	4bba      	ldr	r3, [pc, #744]	; (7208 <_dtoa_r+0xd18>)
    6f1e:	423b      	tst	r3, r7
    6f20:	d100      	bne.n	6f24 <_dtoa_r+0xa34>
    6f22:	e6bb      	b.n	6c9c <_dtoa_r+0x7ac>
    6f24:	9b06      	ldr	r3, [sp, #24]
    6f26:	3401      	adds	r4, #1
    6f28:	3301      	adds	r3, #1
    6f2a:	9306      	str	r3, [sp, #24]
    6f2c:	9b04      	ldr	r3, [sp, #16]
    6f2e:	3301      	adds	r3, #1
    6f30:	9304      	str	r3, [sp, #16]
    6f32:	e6b3      	b.n	6c9c <_dtoa_r+0x7ac>
    6f34:	2301      	movs	r3, #1
    6f36:	930b      	str	r3, [sp, #44]	; 0x2c
    6f38:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6f3a:	2b00      	cmp	r3, #0
    6f3c:	dc00      	bgt.n	6f40 <_dtoa_r+0xa50>
    6f3e:	e0d1      	b.n	70e4 <_dtoa_r+0xbf4>
    6f40:	001d      	movs	r5, r3
    6f42:	4698      	mov	r8, r3
    6f44:	930e      	str	r3, [sp, #56]	; 0x38
    6f46:	9307      	str	r3, [sp, #28]
    6f48:	f7ff fbc8 	bl	66dc <_dtoa_r+0x1ec>
    6f4c:	9b07      	ldr	r3, [sp, #28]
    6f4e:	2b00      	cmp	r3, #0
    6f50:	dd00      	ble.n	6f54 <_dtoa_r+0xa64>
    6f52:	e553      	b.n	69fc <_dtoa_r+0x50c>
    6f54:	d000      	beq.n	6f58 <_dtoa_r+0xa68>
    6f56:	e0ad      	b.n	70b4 <_dtoa_r+0xbc4>
    6f58:	9804      	ldr	r0, [sp, #16]
    6f5a:	9905      	ldr	r1, [sp, #20]
    6f5c:	2200      	movs	r2, #0
    6f5e:	4bab      	ldr	r3, [pc, #684]	; (720c <_dtoa_r+0xd1c>)
    6f60:	f7fc fe56 	bl	3c10 <__aeabi_dmul>
    6f64:	003b      	movs	r3, r7
    6f66:	0032      	movs	r2, r6
    6f68:	f7fd fd1c 	bl	49a4 <__aeabi_dcmpge>
    6f6c:	2300      	movs	r3, #0
    6f6e:	4699      	mov	r9, r3
    6f70:	4698      	mov	r8, r3
    6f72:	2800      	cmp	r0, #0
    6f74:	d055      	beq.n	7022 <_dtoa_r+0xb32>
    6f76:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6f78:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    6f7a:	43db      	mvns	r3, r3
    6f7c:	9303      	str	r3, [sp, #12]
    6f7e:	4649      	mov	r1, r9
    6f80:	4650      	mov	r0, sl
    6f82:	f000 ff41 	bl	7e08 <_Bfree>
    6f86:	4643      	mov	r3, r8
    6f88:	2b00      	cmp	r3, #0
    6f8a:	d100      	bne.n	6f8e <_dtoa_r+0xa9e>
    6f8c:	e4df      	b.n	694e <_dtoa_r+0x45e>
    6f8e:	e7b6      	b.n	6efe <_dtoa_r+0xa0e>
    6f90:	464a      	mov	r2, r9
    6f92:	4659      	mov	r1, fp
    6f94:	4650      	mov	r0, sl
    6f96:	f001 f883 	bl	80a0 <__pow5mult>
    6f9a:	4683      	mov	fp, r0
    6f9c:	e653      	b.n	6c46 <_dtoa_r+0x756>
    6f9e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    6fa0:	2a00      	cmp	r2, #0
    6fa2:	d100      	bne.n	6fa6 <_dtoa_r+0xab6>
    6fa4:	e1b6      	b.n	7314 <_dtoa_r+0xe24>
    6fa6:	4a9a      	ldr	r2, [pc, #616]	; (7210 <_dtoa_r+0xd20>)
    6fa8:	464c      	mov	r4, r9
    6faa:	4694      	mov	ip, r2
    6fac:	9a06      	ldr	r2, [sp, #24]
    6fae:	4463      	add	r3, ip
    6fb0:	9208      	str	r2, [sp, #32]
    6fb2:	e5d5      	b.n	6b60 <_dtoa_r+0x670>
    6fb4:	2e00      	cmp	r6, #0
    6fb6:	d000      	beq.n	6fba <_dtoa_r+0xaca>
    6fb8:	e670      	b.n	6c9c <_dtoa_r+0x7ac>
    6fba:	e7aa      	b.n	6f12 <_dtoa_r+0xa22>
    6fbc:	f000 ff2e 	bl	7e1c <__multadd>
    6fc0:	46a2      	mov	sl, r4
    6fc2:	0005      	movs	r5, r0
    6fc4:	4680      	mov	r8, r0
    6fc6:	e6c7      	b.n	6d58 <_dtoa_r+0x868>
    6fc8:	2301      	movs	r3, #1
    6fca:	469b      	mov	fp, r3
    6fcc:	e6e2      	b.n	6d94 <_dtoa_r+0x8a4>
    6fce:	2300      	movs	r3, #0
    6fd0:	930b      	str	r3, [sp, #44]	; 0x2c
    6fd2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6fd4:	2b02      	cmp	r3, #2
    6fd6:	d0af      	beq.n	6f38 <_dtoa_r+0xa48>
    6fd8:	2400      	movs	r4, #0
    6fda:	4653      	mov	r3, sl
    6fdc:	0021      	movs	r1, r4
    6fde:	645c      	str	r4, [r3, #68]	; 0x44
    6fe0:	4650      	mov	r0, sl
    6fe2:	f000 fee9 	bl	7db8 <_Balloc>
    6fe6:	4653      	mov	r3, sl
    6fe8:	6418      	str	r0, [r3, #64]	; 0x40
    6fea:	2301      	movs	r3, #1
    6fec:	425b      	negs	r3, r3
    6fee:	9307      	str	r3, [sp, #28]
    6ff0:	930e      	str	r3, [sp, #56]	; 0x38
    6ff2:	3302      	adds	r3, #2
    6ff4:	900a      	str	r0, [sp, #40]	; 0x28
    6ff6:	9423      	str	r4, [sp, #140]	; 0x8c
    6ff8:	930b      	str	r3, [sp, #44]	; 0x2c
    6ffa:	e4ec      	b.n	69d6 <_dtoa_r+0x4e6>
    6ffc:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6ffe:	2b02      	cmp	r3, #2
    7000:	dc00      	bgt.n	7004 <_dtoa_r+0xb14>
    7002:	e685      	b.n	6d10 <_dtoa_r+0x820>
    7004:	9b07      	ldr	r3, [sp, #28]
    7006:	2b00      	cmp	r3, #0
    7008:	d1b5      	bne.n	6f76 <_dtoa_r+0xa86>
    700a:	4649      	mov	r1, r9
    700c:	2205      	movs	r2, #5
    700e:	4650      	mov	r0, sl
    7010:	f000 ff04 	bl	7e1c <__multadd>
    7014:	4681      	mov	r9, r0
    7016:	0001      	movs	r1, r0
    7018:	4658      	mov	r0, fp
    701a:	f001 f901 	bl	8220 <__mcmp>
    701e:	2800      	cmp	r0, #0
    7020:	dda9      	ble.n	6f76 <_dtoa_r+0xa86>
    7022:	2331      	movs	r3, #49	; 0x31
    7024:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    7026:	7013      	strb	r3, [r2, #0]
    7028:	9b03      	ldr	r3, [sp, #12]
    702a:	1c54      	adds	r4, r2, #1
    702c:	3301      	adds	r3, #1
    702e:	9303      	str	r3, [sp, #12]
    7030:	e7a5      	b.n	6f7e <_dtoa_r+0xa8e>
    7032:	9b03      	ldr	r3, [sp, #12]
    7034:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    7036:	3301      	adds	r3, #1
    7038:	9303      	str	r3, [sp, #12]
    703a:	2331      	movs	r3, #49	; 0x31
    703c:	7013      	strb	r3, [r2, #0]
    703e:	e74e      	b.n	6ede <_dtoa_r+0x9ee>
    7040:	2300      	movs	r3, #0
    7042:	930b      	str	r3, [sp, #44]	; 0x2c
    7044:	f7ff fb3d 	bl	66c2 <_dtoa_r+0x1d2>
    7048:	9b06      	ldr	r3, [sp, #24]
    704a:	465c      	mov	r4, fp
    704c:	469b      	mov	fp, r3
    704e:	9b07      	ldr	r3, [sp, #28]
    7050:	469a      	mov	sl, r3
    7052:	e47c      	b.n	694e <_dtoa_r+0x45e>
    7054:	4640      	mov	r0, r8
    7056:	f7fd fba5 	bl	47a4 <__aeabi_i2d>
    705a:	0032      	movs	r2, r6
    705c:	003b      	movs	r3, r7
    705e:	f7fc fdd7 	bl	3c10 <__aeabi_dmul>
    7062:	2200      	movs	r2, #0
    7064:	4b6b      	ldr	r3, [pc, #428]	; (7214 <_dtoa_r+0xd24>)
    7066:	f001 fd9b 	bl	8ba0 <__aeabi_dadd>
    706a:	4a6b      	ldr	r2, [pc, #428]	; (7218 <_dtoa_r+0xd28>)
    706c:	000b      	movs	r3, r1
    706e:	4694      	mov	ip, r2
    7070:	4463      	add	r3, ip
    7072:	9008      	str	r0, [sp, #32]
    7074:	9109      	str	r1, [sp, #36]	; 0x24
    7076:	9309      	str	r3, [sp, #36]	; 0x24
    7078:	2200      	movs	r2, #0
    707a:	4b64      	ldr	r3, [pc, #400]	; (720c <_dtoa_r+0xd1c>)
    707c:	0030      	movs	r0, r6
    707e:	0039      	movs	r1, r7
    7080:	f7fd f846 	bl	4110 <__aeabi_dsub>
    7084:	9e08      	ldr	r6, [sp, #32]
    7086:	9f09      	ldr	r7, [sp, #36]	; 0x24
    7088:	0032      	movs	r2, r6
    708a:	003b      	movs	r3, r7
    708c:	0004      	movs	r4, r0
    708e:	000d      	movs	r5, r1
    7090:	f7fd fc7e 	bl	4990 <__aeabi_dcmpgt>
    7094:	2800      	cmp	r0, #0
    7096:	d000      	beq.n	709a <_dtoa_r+0xbaa>
    7098:	e0b2      	b.n	7200 <_dtoa_r+0xd10>
    709a:	2080      	movs	r0, #128	; 0x80
    709c:	0600      	lsls	r0, r0, #24
    709e:	4684      	mov	ip, r0
    70a0:	0039      	movs	r1, r7
    70a2:	4461      	add	r1, ip
    70a4:	000b      	movs	r3, r1
    70a6:	0032      	movs	r2, r6
    70a8:	0020      	movs	r0, r4
    70aa:	0029      	movs	r1, r5
    70ac:	f7fd fc5c 	bl	4968 <__aeabi_dcmplt>
    70b0:	2800      	cmp	r0, #0
    70b2:	d057      	beq.n	7164 <_dtoa_r+0xc74>
    70b4:	2300      	movs	r3, #0
    70b6:	4699      	mov	r9, r3
    70b8:	4698      	mov	r8, r3
    70ba:	e75c      	b.n	6f76 <_dtoa_r+0xa86>
    70bc:	980a      	ldr	r0, [sp, #40]	; 0x28
    70be:	f7ff fa4c 	bl	655a <_dtoa_r+0x6a>
    70c2:	1ae2      	subs	r2, r4, r3
    70c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    70c6:	46a1      	mov	r9, r4
    70c8:	469c      	mov	ip, r3
    70ca:	4494      	add	ip, r2
    70cc:	4663      	mov	r3, ip
    70ce:	2400      	movs	r4, #0
    70d0:	930d      	str	r3, [sp, #52]	; 0x34
    70d2:	e53e      	b.n	6b52 <_dtoa_r+0x662>
    70d4:	9a10      	ldr	r2, [sp, #64]	; 0x40
    70d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    70d8:	9208      	str	r2, [sp, #32]
    70da:	9309      	str	r3, [sp, #36]	; 0x24
    70dc:	2302      	movs	r3, #2
    70de:	4698      	mov	r8, r3
    70e0:	f7ff fb3a 	bl	6758 <_dtoa_r+0x268>
    70e4:	2300      	movs	r3, #0
    70e6:	4652      	mov	r2, sl
    70e8:	2100      	movs	r1, #0
    70ea:	6453      	str	r3, [r2, #68]	; 0x44
    70ec:	4650      	mov	r0, sl
    70ee:	f000 fe63 	bl	7db8 <_Balloc>
    70f2:	4653      	mov	r3, sl
    70f4:	6418      	str	r0, [r3, #64]	; 0x40
    70f6:	2301      	movs	r3, #1
    70f8:	900a      	str	r0, [sp, #40]	; 0x28
    70fa:	9307      	str	r3, [sp, #28]
    70fc:	9323      	str	r3, [sp, #140]	; 0x8c
    70fe:	930e      	str	r3, [sp, #56]	; 0x38
    7100:	f7ff fb07 	bl	6712 <_dtoa_r+0x222>
    7104:	4643      	mov	r3, r8
    7106:	930c      	str	r3, [sp, #48]	; 0x30
    7108:	465b      	mov	r3, fp
    710a:	9a06      	ldr	r2, [sp, #24]
    710c:	46a8      	mov	r8, r5
    710e:	46b3      	mov	fp, r6
    7110:	4655      	mov	r5, sl
    7112:	9e04      	ldr	r6, [sp, #16]
    7114:	4691      	mov	r9, r2
    7116:	46ba      	mov	sl, r7
    7118:	2b00      	cmp	r3, #0
    711a:	dd10      	ble.n	713e <_dtoa_r+0xc4e>
    711c:	4659      	mov	r1, fp
    711e:	2201      	movs	r2, #1
    7120:	0038      	movs	r0, r7
    7122:	f001 f81d 	bl	8160 <__lshift>
    7126:	4649      	mov	r1, r9
    7128:	4683      	mov	fp, r0
    712a:	f001 f879 	bl	8220 <__mcmp>
    712e:	2800      	cmp	r0, #0
    7130:	dc00      	bgt.n	7134 <_dtoa_r+0xc44>
    7132:	e157      	b.n	73e4 <_dtoa_r+0xef4>
    7134:	2e39      	cmp	r6, #57	; 0x39
    7136:	d100      	bne.n	713a <_dtoa_r+0xc4a>
    7138:	e122      	b.n	7380 <_dtoa_r+0xe90>
    713a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    713c:	3631      	adds	r6, #49	; 0x31
    713e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7140:	4647      	mov	r7, r8
    7142:	1c6c      	adds	r4, r5, #1
    7144:	702e      	strb	r6, [r5, #0]
    7146:	4698      	mov	r8, r3
    7148:	e6c9      	b.n	6ede <_dtoa_r+0x9ee>
    714a:	2800      	cmp	r0, #0
    714c:	d103      	bne.n	7156 <_dtoa_r+0xc66>
    714e:	07f3      	lsls	r3, r6, #31
    7150:	d501      	bpl.n	7156 <_dtoa_r+0xc66>
    7152:	e6b5      	b.n	6ec0 <_dtoa_r+0x9d0>
    7154:	001c      	movs	r4, r3
    7156:	1e63      	subs	r3, r4, #1
    7158:	781a      	ldrb	r2, [r3, #0]
    715a:	2a30      	cmp	r2, #48	; 0x30
    715c:	d0fa      	beq.n	7154 <_dtoa_r+0xc64>
    715e:	e6be      	b.n	6ede <_dtoa_r+0x9ee>
    7160:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7162:	4699      	mov	r9, r3
    7164:	9e10      	ldr	r6, [sp, #64]	; 0x40
    7166:	9f11      	ldr	r7, [sp, #68]	; 0x44
    7168:	e435      	b.n	69d6 <_dtoa_r+0x4e6>
    716a:	2501      	movs	r5, #1
    716c:	f7ff fab4 	bl	66d8 <_dtoa_r+0x1e8>
    7170:	9b03      	ldr	r3, [sp, #12]
    7172:	2b00      	cmp	r3, #0
    7174:	d100      	bne.n	7178 <_dtoa_r+0xc88>
    7176:	e0d4      	b.n	7322 <_dtoa_r+0xe32>
    7178:	9810      	ldr	r0, [sp, #64]	; 0x40
    717a:	9911      	ldr	r1, [sp, #68]	; 0x44
    717c:	425c      	negs	r4, r3
    717e:	230f      	movs	r3, #15
    7180:	4a26      	ldr	r2, [pc, #152]	; (721c <_dtoa_r+0xd2c>)
    7182:	4023      	ands	r3, r4
    7184:	00db      	lsls	r3, r3, #3
    7186:	18d3      	adds	r3, r2, r3
    7188:	681a      	ldr	r2, [r3, #0]
    718a:	685b      	ldr	r3, [r3, #4]
    718c:	f7fc fd40 	bl	3c10 <__aeabi_dmul>
    7190:	1124      	asrs	r4, r4, #4
    7192:	0006      	movs	r6, r0
    7194:	000f      	movs	r7, r1
    7196:	2c00      	cmp	r4, #0
    7198:	d100      	bne.n	719c <_dtoa_r+0xcac>
    719a:	e149      	b.n	7430 <_dtoa_r+0xf40>
    719c:	2302      	movs	r3, #2
    719e:	4698      	mov	r8, r3
    71a0:	4d1f      	ldr	r5, [pc, #124]	; (7220 <_dtoa_r+0xd30>)
    71a2:	2301      	movs	r3, #1
    71a4:	4223      	tst	r3, r4
    71a6:	d009      	beq.n	71bc <_dtoa_r+0xccc>
    71a8:	469c      	mov	ip, r3
    71aa:	682a      	ldr	r2, [r5, #0]
    71ac:	686b      	ldr	r3, [r5, #4]
    71ae:	0030      	movs	r0, r6
    71b0:	0039      	movs	r1, r7
    71b2:	44e0      	add	r8, ip
    71b4:	f7fc fd2c 	bl	3c10 <__aeabi_dmul>
    71b8:	0006      	movs	r6, r0
    71ba:	000f      	movs	r7, r1
    71bc:	1064      	asrs	r4, r4, #1
    71be:	3508      	adds	r5, #8
    71c0:	2c00      	cmp	r4, #0
    71c2:	d1ee      	bne.n	71a2 <_dtoa_r+0xcb2>
    71c4:	f7ff fae4 	bl	6790 <_dtoa_r+0x2a0>
    71c8:	9b03      	ldr	r3, [sp, #12]
    71ca:	2730      	movs	r7, #48	; 0x30
    71cc:	3301      	adds	r3, #1
    71ce:	9303      	str	r3, [sp, #12]
    71d0:	2330      	movs	r3, #48	; 0x30
    71d2:	702b      	strb	r3, [r5, #0]
    71d4:	e4ac      	b.n	6b30 <_dtoa_r+0x640>
    71d6:	6859      	ldr	r1, [r3, #4]
    71d8:	4650      	mov	r0, sl
    71da:	f000 fded 	bl	7db8 <_Balloc>
    71de:	4643      	mov	r3, r8
    71e0:	4641      	mov	r1, r8
    71e2:	0004      	movs	r4, r0
    71e4:	691b      	ldr	r3, [r3, #16]
    71e6:	310c      	adds	r1, #12
    71e8:	1c9a      	adds	r2, r3, #2
    71ea:	0092      	lsls	r2, r2, #2
    71ec:	300c      	adds	r0, #12
    71ee:	f000 fd91 	bl	7d14 <memcpy>
    71f2:	2201      	movs	r2, #1
    71f4:	0021      	movs	r1, r4
    71f6:	4650      	mov	r0, sl
    71f8:	f000 ffb2 	bl	8160 <__lshift>
    71fc:	900c      	str	r0, [sp, #48]	; 0x30
    71fe:	e599      	b.n	6d34 <_dtoa_r+0x844>
    7200:	2300      	movs	r3, #0
    7202:	4699      	mov	r9, r3
    7204:	4698      	mov	r8, r3
    7206:	e70c      	b.n	7022 <_dtoa_r+0xb32>
    7208:	7ff00000 	.word	0x7ff00000
    720c:	40140000 	.word	0x40140000
    7210:	00000433 	.word	0x00000433
    7214:	401c0000 	.word	0x401c0000
    7218:	fcc00000 	.word	0xfcc00000
    721c:	0000a8a8 	.word	0x0000a8a8
    7220:	0000a880 	.word	0x0000a880
    7224:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7226:	498f      	ldr	r1, [pc, #572]	; (7464 <_dtoa_r+0xf74>)
    7228:	3b01      	subs	r3, #1
    722a:	00db      	lsls	r3, r3, #3
    722c:	18c9      	adds	r1, r1, r3
    722e:	6808      	ldr	r0, [r1, #0]
    7230:	6849      	ldr	r1, [r1, #4]
    7232:	9a08      	ldr	r2, [sp, #32]
    7234:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7236:	f7fc fceb 	bl	3c10 <__aeabi_dmul>
    723a:	9014      	str	r0, [sp, #80]	; 0x50
    723c:	9115      	str	r1, [sp, #84]	; 0x54
    723e:	0039      	movs	r1, r7
    7240:	0030      	movs	r0, r6
    7242:	f7fd fa7b 	bl	473c <__aeabi_d2iz>
    7246:	0005      	movs	r5, r0
    7248:	f7fd faac 	bl	47a4 <__aeabi_i2d>
    724c:	0002      	movs	r2, r0
    724e:	000b      	movs	r3, r1
    7250:	0030      	movs	r0, r6
    7252:	0039      	movs	r1, r7
    7254:	f7fc ff5c 	bl	4110 <__aeabi_dsub>
    7258:	9b12      	ldr	r3, [sp, #72]	; 0x48
    725a:	9008      	str	r0, [sp, #32]
    725c:	9109      	str	r1, [sp, #36]	; 0x24
    725e:	990a      	ldr	r1, [sp, #40]	; 0x28
    7260:	001a      	movs	r2, r3
    7262:	468c      	mov	ip, r1
    7264:	3530      	adds	r5, #48	; 0x30
    7266:	4462      	add	r2, ip
    7268:	1c4c      	adds	r4, r1, #1
    726a:	700d      	strb	r5, [r1, #0]
    726c:	4690      	mov	r8, r2
    726e:	2b01      	cmp	r3, #1
    7270:	d01b      	beq.n	72aa <_dtoa_r+0xdba>
    7272:	9808      	ldr	r0, [sp, #32]
    7274:	9909      	ldr	r1, [sp, #36]	; 0x24
    7276:	0025      	movs	r5, r4
    7278:	2200      	movs	r2, #0
    727a:	4b7b      	ldr	r3, [pc, #492]	; (7468 <_dtoa_r+0xf78>)
    727c:	f7fc fcc8 	bl	3c10 <__aeabi_dmul>
    7280:	000f      	movs	r7, r1
    7282:	0006      	movs	r6, r0
    7284:	f7fd fa5a 	bl	473c <__aeabi_d2iz>
    7288:	0004      	movs	r4, r0
    728a:	f7fd fa8b 	bl	47a4 <__aeabi_i2d>
    728e:	3430      	adds	r4, #48	; 0x30
    7290:	0002      	movs	r2, r0
    7292:	000b      	movs	r3, r1
    7294:	0030      	movs	r0, r6
    7296:	0039      	movs	r1, r7
    7298:	f7fc ff3a 	bl	4110 <__aeabi_dsub>
    729c:	702c      	strb	r4, [r5, #0]
    729e:	3501      	adds	r5, #1
    72a0:	45a8      	cmp	r8, r5
    72a2:	d1e9      	bne.n	7278 <_dtoa_r+0xd88>
    72a4:	4644      	mov	r4, r8
    72a6:	9008      	str	r0, [sp, #32]
    72a8:	9109      	str	r1, [sp, #36]	; 0x24
    72aa:	9814      	ldr	r0, [sp, #80]	; 0x50
    72ac:	9915      	ldr	r1, [sp, #84]	; 0x54
    72ae:	2200      	movs	r2, #0
    72b0:	4b6e      	ldr	r3, [pc, #440]	; (746c <_dtoa_r+0xf7c>)
    72b2:	f001 fc75 	bl	8ba0 <__aeabi_dadd>
    72b6:	9a08      	ldr	r2, [sp, #32]
    72b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    72ba:	f7fd fb55 	bl	4968 <__aeabi_dcmplt>
    72be:	2800      	cmp	r0, #0
    72c0:	d067      	beq.n	7392 <_dtoa_r+0xea2>
    72c2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    72c4:	1e65      	subs	r5, r4, #1
    72c6:	9303      	str	r3, [sp, #12]
    72c8:	782f      	ldrb	r7, [r5, #0]
    72ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    72cc:	e42e      	b.n	6b2c <_dtoa_r+0x63c>
    72ce:	4643      	mov	r3, r8
    72d0:	46b3      	mov	fp, r6
    72d2:	930c      	str	r3, [sp, #48]	; 0x30
    72d4:	9e04      	ldr	r6, [sp, #16]
    72d6:	9b06      	ldr	r3, [sp, #24]
    72d8:	46a8      	mov	r8, r5
    72da:	4699      	mov	r9, r3
    72dc:	4655      	mov	r5, sl
    72de:	46ba      	mov	sl, r7
    72e0:	2e39      	cmp	r6, #57	; 0x39
    72e2:	d04d      	beq.n	7380 <_dtoa_r+0xe90>
    72e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    72e6:	3601      	adds	r6, #1
    72e8:	4647      	mov	r7, r8
    72ea:	1c6c      	adds	r4, r5, #1
    72ec:	702e      	strb	r6, [r5, #0]
    72ee:	4698      	mov	r8, r3
    72f0:	e5f5      	b.n	6ede <_dtoa_r+0x9ee>
    72f2:	4642      	mov	r2, r8
    72f4:	9b06      	ldr	r3, [sp, #24]
    72f6:	46b3      	mov	fp, r6
    72f8:	46ba      	mov	sl, r7
    72fa:	9e04      	ldr	r6, [sp, #16]
    72fc:	4699      	mov	r9, r3
    72fe:	002f      	movs	r7, r5
    7300:	4690      	mov	r8, r2
    7302:	e5d1      	b.n	6ea8 <_dtoa_r+0x9b8>
    7304:	9b06      	ldr	r3, [sp, #24]
    7306:	9a07      	ldr	r2, [sp, #28]
    7308:	1a9b      	subs	r3, r3, r2
    730a:	9308      	str	r3, [sp, #32]
    730c:	2300      	movs	r3, #0
    730e:	e427      	b.n	6b60 <_dtoa_r+0x670>
    7310:	2401      	movs	r4, #1
    7312:	e5c5      	b.n	6ea0 <_dtoa_r+0x9b0>
    7314:	2336      	movs	r3, #54	; 0x36
    7316:	9a16      	ldr	r2, [sp, #88]	; 0x58
    7318:	464c      	mov	r4, r9
    731a:	1a9b      	subs	r3, r3, r2
    731c:	9a06      	ldr	r2, [sp, #24]
    731e:	9208      	str	r2, [sp, #32]
    7320:	e41e      	b.n	6b60 <_dtoa_r+0x670>
    7322:	2302      	movs	r3, #2
    7324:	9e10      	ldr	r6, [sp, #64]	; 0x40
    7326:	9f11      	ldr	r7, [sp, #68]	; 0x44
    7328:	4698      	mov	r8, r3
    732a:	f7ff fa31 	bl	6790 <_dtoa_r+0x2a0>
    732e:	9b07      	ldr	r3, [sp, #28]
    7330:	2b00      	cmp	r3, #0
    7332:	d100      	bne.n	7336 <_dtoa_r+0xe46>
    7334:	e68e      	b.n	7054 <_dtoa_r+0xb64>
    7336:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    7338:	2c00      	cmp	r4, #0
    733a:	dc00      	bgt.n	733e <_dtoa_r+0xe4e>
    733c:	e712      	b.n	7164 <_dtoa_r+0xc74>
    733e:	9b03      	ldr	r3, [sp, #12]
    7340:	2200      	movs	r2, #0
    7342:	3b01      	subs	r3, #1
    7344:	9313      	str	r3, [sp, #76]	; 0x4c
    7346:	0030      	movs	r0, r6
    7348:	4b47      	ldr	r3, [pc, #284]	; (7468 <_dtoa_r+0xf78>)
    734a:	0039      	movs	r1, r7
    734c:	f7fc fc60 	bl	3c10 <__aeabi_dmul>
    7350:	0006      	movs	r6, r0
    7352:	4640      	mov	r0, r8
    7354:	000f      	movs	r7, r1
    7356:	3001      	adds	r0, #1
    7358:	f7fd fa24 	bl	47a4 <__aeabi_i2d>
    735c:	0032      	movs	r2, r6
    735e:	003b      	movs	r3, r7
    7360:	f7fc fc56 	bl	3c10 <__aeabi_dmul>
    7364:	2200      	movs	r2, #0
    7366:	4b42      	ldr	r3, [pc, #264]	; (7470 <_dtoa_r+0xf80>)
    7368:	f001 fc1a 	bl	8ba0 <__aeabi_dadd>
    736c:	4a41      	ldr	r2, [pc, #260]	; (7474 <_dtoa_r+0xf84>)
    736e:	000b      	movs	r3, r1
    7370:	4694      	mov	ip, r2
    7372:	4463      	add	r3, ip
    7374:	9008      	str	r0, [sp, #32]
    7376:	9109      	str	r1, [sp, #36]	; 0x24
    7378:	9412      	str	r4, [sp, #72]	; 0x48
    737a:	9309      	str	r3, [sp, #36]	; 0x24
    737c:	f7ff fa30 	bl	67e0 <_dtoa_r+0x2f0>
    7380:	2339      	movs	r3, #57	; 0x39
    7382:	702b      	strb	r3, [r5, #0]
    7384:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7386:	4647      	mov	r7, r8
    7388:	1c6c      	adds	r4, r5, #1
    738a:	4698      	mov	r8, r3
    738c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    738e:	2339      	movs	r3, #57	; 0x39
    7390:	e5a1      	b.n	6ed6 <_dtoa_r+0x9e6>
    7392:	9a14      	ldr	r2, [sp, #80]	; 0x50
    7394:	9b15      	ldr	r3, [sp, #84]	; 0x54
    7396:	2000      	movs	r0, #0
    7398:	4934      	ldr	r1, [pc, #208]	; (746c <_dtoa_r+0xf7c>)
    739a:	f7fc feb9 	bl	4110 <__aeabi_dsub>
    739e:	9a08      	ldr	r2, [sp, #32]
    73a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    73a2:	f7fd faf5 	bl	4990 <__aeabi_dcmpgt>
    73a6:	2800      	cmp	r0, #0
    73a8:	d101      	bne.n	73ae <_dtoa_r+0xebe>
    73aa:	e6db      	b.n	7164 <_dtoa_r+0xc74>
    73ac:	001c      	movs	r4, r3
    73ae:	1e63      	subs	r3, r4, #1
    73b0:	781a      	ldrb	r2, [r3, #0]
    73b2:	2a30      	cmp	r2, #48	; 0x30
    73b4:	d0fa      	beq.n	73ac <_dtoa_r+0xebc>
    73b6:	f7ff fac8 	bl	694a <_dtoa_r+0x45a>
    73ba:	4643      	mov	r3, r8
    73bc:	46b3      	mov	fp, r6
    73be:	930c      	str	r3, [sp, #48]	; 0x30
    73c0:	9e04      	ldr	r6, [sp, #16]
    73c2:	9b06      	ldr	r3, [sp, #24]
    73c4:	46a8      	mov	r8, r5
    73c6:	4699      	mov	r9, r3
    73c8:	4655      	mov	r5, sl
    73ca:	46ba      	mov	sl, r7
    73cc:	2e39      	cmp	r6, #57	; 0x39
    73ce:	d0d7      	beq.n	7380 <_dtoa_r+0xe90>
    73d0:	2c00      	cmp	r4, #0
    73d2:	dd00      	ble.n	73d6 <_dtoa_r+0xee6>
    73d4:	e6b1      	b.n	713a <_dtoa_r+0xc4a>
    73d6:	e6b2      	b.n	713e <_dtoa_r+0xc4e>
    73d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    73da:	464d      	mov	r5, r9
    73dc:	9203      	str	r2, [sp, #12]
    73de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    73e0:	f7ff fba4 	bl	6b2c <_dtoa_r+0x63c>
    73e4:	2800      	cmp	r0, #0
    73e6:	d000      	beq.n	73ea <_dtoa_r+0xefa>
    73e8:	e6a9      	b.n	713e <_dtoa_r+0xc4e>
    73ea:	07f3      	lsls	r3, r6, #31
    73ec:	d400      	bmi.n	73f0 <_dtoa_r+0xf00>
    73ee:	e6a6      	b.n	713e <_dtoa_r+0xc4e>
    73f0:	e6a0      	b.n	7134 <_dtoa_r+0xc44>
    73f2:	2300      	movs	r3, #0
    73f4:	4641      	mov	r1, r8
    73f6:	220a      	movs	r2, #10
    73f8:	4650      	mov	r0, sl
    73fa:	f000 fd0f 	bl	7e1c <__multadd>
    73fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7400:	4680      	mov	r8, r0
    7402:	2b00      	cmp	r3, #0
    7404:	dd01      	ble.n	740a <_dtoa_r+0xf1a>
    7406:	9307      	str	r3, [sp, #28]
    7408:	e486      	b.n	6d18 <_dtoa_r+0x828>
    740a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    740c:	2b02      	cmp	r3, #2
    740e:	dc1f      	bgt.n	7450 <_dtoa_r+0xf60>
    7410:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7412:	9307      	str	r3, [sp, #28]
    7414:	e480      	b.n	6d18 <_dtoa_r+0x828>
    7416:	9b22      	ldr	r3, [sp, #136]	; 0x88
    7418:	2b02      	cmp	r3, #2
    741a:	dc19      	bgt.n	7450 <_dtoa_r+0xf60>
    741c:	4649      	mov	r1, r9
    741e:	f7fe ffbd 	bl	639c <quorem>
    7422:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7424:	3030      	adds	r0, #48	; 0x30
    7426:	7018      	strb	r0, [r3, #0]
    7428:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    742a:	0006      	movs	r6, r0
    742c:	9307      	str	r3, [sp, #28]
    742e:	e533      	b.n	6e98 <_dtoa_r+0x9a8>
    7430:	2302      	movs	r3, #2
    7432:	4698      	mov	r8, r3
    7434:	f7ff f9ac 	bl	6790 <_dtoa_r+0x2a0>
    7438:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    743a:	9c14      	ldr	r4, [sp, #80]	; 0x50
    743c:	9303      	str	r3, [sp, #12]
    743e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7440:	001d      	movs	r5, r3
    7442:	f7ff fb73 	bl	6b2c <_dtoa_r+0x63c>
    7446:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    7448:	9c14      	ldr	r4, [sp, #80]	; 0x50
    744a:	9303      	str	r3, [sp, #12]
    744c:	f7ff fa7f 	bl	694e <_dtoa_r+0x45e>
    7450:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7452:	9307      	str	r3, [sp, #28]
    7454:	e5d6      	b.n	7004 <_dtoa_r+0xb14>
    7456:	2b04      	cmp	r3, #4
    7458:	d100      	bne.n	745c <_dtoa_r+0xf6c>
    745a:	e43f      	b.n	6cdc <_dtoa_r+0x7ec>
    745c:	233c      	movs	r3, #60	; 0x3c
    745e:	1a18      	subs	r0, r3, r0
    7460:	e4d7      	b.n	6e12 <_dtoa_r+0x922>
    7462:	46c0      	nop			; (mov r8, r8)
    7464:	0000a8a8 	.word	0x0000a8a8
    7468:	40240000 	.word	0x40240000
    746c:	3fe00000 	.word	0x3fe00000
    7470:	401c0000 	.word	0x401c0000
    7474:	fcc00000 	.word	0xfcc00000

00007478 <__libc_fini_array>:
    7478:	b570      	push	{r4, r5, r6, lr}
    747a:	4b09      	ldr	r3, [pc, #36]	; (74a0 <__libc_fini_array+0x28>)
    747c:	4c09      	ldr	r4, [pc, #36]	; (74a4 <__libc_fini_array+0x2c>)
    747e:	1ae4      	subs	r4, r4, r3
    7480:	10a4      	asrs	r4, r4, #2
    7482:	d009      	beq.n	7498 <__libc_fini_array+0x20>
    7484:	4a08      	ldr	r2, [pc, #32]	; (74a8 <__libc_fini_array+0x30>)
    7486:	18a5      	adds	r5, r4, r2
    7488:	00ad      	lsls	r5, r5, #2
    748a:	18ed      	adds	r5, r5, r3
    748c:	682b      	ldr	r3, [r5, #0]
    748e:	3c01      	subs	r4, #1
    7490:	4798      	blx	r3
    7492:	3d04      	subs	r5, #4
    7494:	2c00      	cmp	r4, #0
    7496:	d1f9      	bne.n	748c <__libc_fini_array+0x14>
    7498:	f003 fb02 	bl	aaa0 <_fini>
    749c:	bd70      	pop	{r4, r5, r6, pc}
    749e:	46c0      	nop			; (mov r8, r8)
    74a0:	0000aaac 	.word	0x0000aaac
    74a4:	0000aab0 	.word	0x0000aab0
    74a8:	3fffffff 	.word	0x3fffffff

000074ac <_malloc_trim_r>:
    74ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    74ae:	000c      	movs	r4, r1
    74b0:	0006      	movs	r6, r0
    74b2:	f000 fc71 	bl	7d98 <__malloc_lock>
    74b6:	4f20      	ldr	r7, [pc, #128]	; (7538 <_malloc_trim_r+0x8c>)
    74b8:	68bb      	ldr	r3, [r7, #8]
    74ba:	685d      	ldr	r5, [r3, #4]
    74bc:	2303      	movs	r3, #3
    74be:	439d      	bics	r5, r3
    74c0:	4b1e      	ldr	r3, [pc, #120]	; (753c <_malloc_trim_r+0x90>)
    74c2:	1b2c      	subs	r4, r5, r4
    74c4:	469c      	mov	ip, r3
    74c6:	4464      	add	r4, ip
    74c8:	0b24      	lsrs	r4, r4, #12
    74ca:	4b1d      	ldr	r3, [pc, #116]	; (7540 <_malloc_trim_r+0x94>)
    74cc:	3c01      	subs	r4, #1
    74ce:	0324      	lsls	r4, r4, #12
    74d0:	429c      	cmp	r4, r3
    74d2:	dd07      	ble.n	74e4 <_malloc_trim_r+0x38>
    74d4:	2100      	movs	r1, #0
    74d6:	0030      	movs	r0, r6
    74d8:	f000 ffb6 	bl	8448 <_sbrk_r>
    74dc:	68bb      	ldr	r3, [r7, #8]
    74de:	195b      	adds	r3, r3, r5
    74e0:	4298      	cmp	r0, r3
    74e2:	d004      	beq.n	74ee <_malloc_trim_r+0x42>
    74e4:	0030      	movs	r0, r6
    74e6:	f000 fc5f 	bl	7da8 <__malloc_unlock>
    74ea:	2000      	movs	r0, #0
    74ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    74ee:	4261      	negs	r1, r4
    74f0:	0030      	movs	r0, r6
    74f2:	f000 ffa9 	bl	8448 <_sbrk_r>
    74f6:	1c43      	adds	r3, r0, #1
    74f8:	d00d      	beq.n	7516 <_malloc_trim_r+0x6a>
    74fa:	2201      	movs	r2, #1
    74fc:	68bb      	ldr	r3, [r7, #8]
    74fe:	1b2d      	subs	r5, r5, r4
    7500:	4315      	orrs	r5, r2
    7502:	605d      	str	r5, [r3, #4]
    7504:	4b0f      	ldr	r3, [pc, #60]	; (7544 <_malloc_trim_r+0x98>)
    7506:	0030      	movs	r0, r6
    7508:	681a      	ldr	r2, [r3, #0]
    750a:	1b14      	subs	r4, r2, r4
    750c:	601c      	str	r4, [r3, #0]
    750e:	f000 fc4b 	bl	7da8 <__malloc_unlock>
    7512:	2001      	movs	r0, #1
    7514:	e7ea      	b.n	74ec <_malloc_trim_r+0x40>
    7516:	2100      	movs	r1, #0
    7518:	0030      	movs	r0, r6
    751a:	f000 ff95 	bl	8448 <_sbrk_r>
    751e:	68ba      	ldr	r2, [r7, #8]
    7520:	1a83      	subs	r3, r0, r2
    7522:	2b0f      	cmp	r3, #15
    7524:	ddde      	ble.n	74e4 <_malloc_trim_r+0x38>
    7526:	4908      	ldr	r1, [pc, #32]	; (7548 <_malloc_trim_r+0x9c>)
    7528:	6809      	ldr	r1, [r1, #0]
    752a:	1a40      	subs	r0, r0, r1
    752c:	4905      	ldr	r1, [pc, #20]	; (7544 <_malloc_trim_r+0x98>)
    752e:	6008      	str	r0, [r1, #0]
    7530:	2101      	movs	r1, #1
    7532:	430b      	orrs	r3, r1
    7534:	6053      	str	r3, [r2, #4]
    7536:	e7d5      	b.n	74e4 <_malloc_trim_r+0x38>
    7538:	2000048c 	.word	0x2000048c
    753c:	00000fef 	.word	0x00000fef
    7540:	00000fff 	.word	0x00000fff
    7544:	200020dc 	.word	0x200020dc
    7548:	20000894 	.word	0x20000894

0000754c <_free_r>:
    754c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    754e:	0004      	movs	r4, r0
    7550:	1e0d      	subs	r5, r1, #0
    7552:	d03c      	beq.n	75ce <_free_r+0x82>
    7554:	f000 fc20 	bl	7d98 <__malloc_lock>
    7558:	0029      	movs	r1, r5
    755a:	3908      	subs	r1, #8
    755c:	6848      	ldr	r0, [r1, #4]
    755e:	2301      	movs	r3, #1
    7560:	0005      	movs	r5, r0
    7562:	2603      	movs	r6, #3
    7564:	439d      	bics	r5, r3
    7566:	194a      	adds	r2, r1, r5
    7568:	469c      	mov	ip, r3
    756a:	4f61      	ldr	r7, [pc, #388]	; (76f0 <_free_r+0x1a4>)
    756c:	6853      	ldr	r3, [r2, #4]
    756e:	43b3      	bics	r3, r6
    7570:	68be      	ldr	r6, [r7, #8]
    7572:	42b2      	cmp	r2, r6
    7574:	d056      	beq.n	7624 <_free_r+0xd8>
    7576:	4666      	mov	r6, ip
    7578:	6053      	str	r3, [r2, #4]
    757a:	4206      	tst	r6, r0
    757c:	d10a      	bne.n	7594 <_free_r+0x48>
    757e:	003e      	movs	r6, r7
    7580:	6808      	ldr	r0, [r1, #0]
    7582:	3608      	adds	r6, #8
    7584:	1a09      	subs	r1, r1, r0
    7586:	182d      	adds	r5, r5, r0
    7588:	6888      	ldr	r0, [r1, #8]
    758a:	42b0      	cmp	r0, r6
    758c:	d065      	beq.n	765a <_free_r+0x10e>
    758e:	68ce      	ldr	r6, [r1, #12]
    7590:	60c6      	str	r6, [r0, #12]
    7592:	60b0      	str	r0, [r6, #8]
    7594:	2001      	movs	r0, #1
    7596:	18d6      	adds	r6, r2, r3
    7598:	6876      	ldr	r6, [r6, #4]
    759a:	4206      	tst	r6, r0
    759c:	d033      	beq.n	7606 <_free_r+0xba>
    759e:	4b55      	ldr	r3, [pc, #340]	; (76f4 <_free_r+0x1a8>)
    75a0:	4328      	orrs	r0, r5
    75a2:	6048      	str	r0, [r1, #4]
    75a4:	514d      	str	r5, [r1, r5]
    75a6:	429d      	cmp	r5, r3
    75a8:	d812      	bhi.n	75d0 <_free_r+0x84>
    75aa:	08ed      	lsrs	r5, r5, #3
    75ac:	3bff      	subs	r3, #255	; 0xff
    75ae:	10aa      	asrs	r2, r5, #2
    75b0:	3bff      	subs	r3, #255	; 0xff
    75b2:	4093      	lsls	r3, r2
    75b4:	687a      	ldr	r2, [r7, #4]
    75b6:	00ed      	lsls	r5, r5, #3
    75b8:	4313      	orrs	r3, r2
    75ba:	607b      	str	r3, [r7, #4]
    75bc:	19ef      	adds	r7, r5, r7
    75be:	68bb      	ldr	r3, [r7, #8]
    75c0:	60cf      	str	r7, [r1, #12]
    75c2:	608b      	str	r3, [r1, #8]
    75c4:	60b9      	str	r1, [r7, #8]
    75c6:	60d9      	str	r1, [r3, #12]
    75c8:	0020      	movs	r0, r4
    75ca:	f000 fbed 	bl	7da8 <__malloc_unlock>
    75ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    75d0:	0a68      	lsrs	r0, r5, #9
    75d2:	2804      	cmp	r0, #4
    75d4:	d850      	bhi.n	7678 <_free_r+0x12c>
    75d6:	09a8      	lsrs	r0, r5, #6
    75d8:	0002      	movs	r2, r0
    75da:	3039      	adds	r0, #57	; 0x39
    75dc:	3238      	adds	r2, #56	; 0x38
    75de:	00c0      	lsls	r0, r0, #3
    75e0:	1838      	adds	r0, r7, r0
    75e2:	3808      	subs	r0, #8
    75e4:	6883      	ldr	r3, [r0, #8]
    75e6:	2603      	movs	r6, #3
    75e8:	4298      	cmp	r0, r3
    75ea:	d04c      	beq.n	7686 <_free_r+0x13a>
    75ec:	685a      	ldr	r2, [r3, #4]
    75ee:	43b2      	bics	r2, r6
    75f0:	4295      	cmp	r5, r2
    75f2:	d230      	bcs.n	7656 <_free_r+0x10a>
    75f4:	689b      	ldr	r3, [r3, #8]
    75f6:	4298      	cmp	r0, r3
    75f8:	d1f8      	bne.n	75ec <_free_r+0xa0>
    75fa:	68c3      	ldr	r3, [r0, #12]
    75fc:	60cb      	str	r3, [r1, #12]
    75fe:	6088      	str	r0, [r1, #8]
    7600:	6099      	str	r1, [r3, #8]
    7602:	60c1      	str	r1, [r0, #12]
    7604:	e7e0      	b.n	75c8 <_free_r+0x7c>
    7606:	18ed      	adds	r5, r5, r3
    7608:	4e3b      	ldr	r6, [pc, #236]	; (76f8 <_free_r+0x1ac>)
    760a:	6893      	ldr	r3, [r2, #8]
    760c:	42b3      	cmp	r3, r6
    760e:	d042      	beq.n	7696 <_free_r+0x14a>
    7610:	68d2      	ldr	r2, [r2, #12]
    7612:	4328      	orrs	r0, r5
    7614:	60da      	str	r2, [r3, #12]
    7616:	6093      	str	r3, [r2, #8]
    7618:	4b36      	ldr	r3, [pc, #216]	; (76f4 <_free_r+0x1a8>)
    761a:	6048      	str	r0, [r1, #4]
    761c:	514d      	str	r5, [r1, r5]
    761e:	429d      	cmp	r5, r3
    7620:	d8d6      	bhi.n	75d0 <_free_r+0x84>
    7622:	e7c2      	b.n	75aa <_free_r+0x5e>
    7624:	4662      	mov	r2, ip
    7626:	18eb      	adds	r3, r5, r3
    7628:	4202      	tst	r2, r0
    762a:	d106      	bne.n	763a <_free_r+0xee>
    762c:	680a      	ldr	r2, [r1, #0]
    762e:	1a89      	subs	r1, r1, r2
    7630:	6888      	ldr	r0, [r1, #8]
    7632:	189b      	adds	r3, r3, r2
    7634:	68ca      	ldr	r2, [r1, #12]
    7636:	60c2      	str	r2, [r0, #12]
    7638:	6090      	str	r0, [r2, #8]
    763a:	2201      	movs	r2, #1
    763c:	431a      	orrs	r2, r3
    763e:	604a      	str	r2, [r1, #4]
    7640:	4a2e      	ldr	r2, [pc, #184]	; (76fc <_free_r+0x1b0>)
    7642:	60b9      	str	r1, [r7, #8]
    7644:	6812      	ldr	r2, [r2, #0]
    7646:	4293      	cmp	r3, r2
    7648:	d3be      	bcc.n	75c8 <_free_r+0x7c>
    764a:	4b2d      	ldr	r3, [pc, #180]	; (7700 <_free_r+0x1b4>)
    764c:	0020      	movs	r0, r4
    764e:	6819      	ldr	r1, [r3, #0]
    7650:	f7ff ff2c 	bl	74ac <_malloc_trim_r>
    7654:	e7b8      	b.n	75c8 <_free_r+0x7c>
    7656:	0018      	movs	r0, r3
    7658:	e7cf      	b.n	75fa <_free_r+0xae>
    765a:	4666      	mov	r6, ip
    765c:	18d0      	adds	r0, r2, r3
    765e:	6840      	ldr	r0, [r0, #4]
    7660:	4230      	tst	r0, r6
    7662:	d13f      	bne.n	76e4 <_free_r+0x198>
    7664:	6890      	ldr	r0, [r2, #8]
    7666:	195d      	adds	r5, r3, r5
    7668:	68d3      	ldr	r3, [r2, #12]
    766a:	60c3      	str	r3, [r0, #12]
    766c:	6098      	str	r0, [r3, #8]
    766e:	4663      	mov	r3, ip
    7670:	432b      	orrs	r3, r5
    7672:	604b      	str	r3, [r1, #4]
    7674:	514d      	str	r5, [r1, r5]
    7676:	e7a7      	b.n	75c8 <_free_r+0x7c>
    7678:	2814      	cmp	r0, #20
    767a:	d814      	bhi.n	76a6 <_free_r+0x15a>
    767c:	0002      	movs	r2, r0
    767e:	305c      	adds	r0, #92	; 0x5c
    7680:	325b      	adds	r2, #91	; 0x5b
    7682:	00c0      	lsls	r0, r0, #3
    7684:	e7ac      	b.n	75e0 <_free_r+0x94>
    7686:	2301      	movs	r3, #1
    7688:	1092      	asrs	r2, r2, #2
    768a:	4093      	lsls	r3, r2
    768c:	687a      	ldr	r2, [r7, #4]
    768e:	4313      	orrs	r3, r2
    7690:	607b      	str	r3, [r7, #4]
    7692:	0003      	movs	r3, r0
    7694:	e7b2      	b.n	75fc <_free_r+0xb0>
    7696:	4328      	orrs	r0, r5
    7698:	60d9      	str	r1, [r3, #12]
    769a:	6099      	str	r1, [r3, #8]
    769c:	60cb      	str	r3, [r1, #12]
    769e:	608b      	str	r3, [r1, #8]
    76a0:	6048      	str	r0, [r1, #4]
    76a2:	514d      	str	r5, [r1, r5]
    76a4:	e790      	b.n	75c8 <_free_r+0x7c>
    76a6:	2854      	cmp	r0, #84	; 0x54
    76a8:	d805      	bhi.n	76b6 <_free_r+0x16a>
    76aa:	0b28      	lsrs	r0, r5, #12
    76ac:	0002      	movs	r2, r0
    76ae:	306f      	adds	r0, #111	; 0x6f
    76b0:	326e      	adds	r2, #110	; 0x6e
    76b2:	00c0      	lsls	r0, r0, #3
    76b4:	e794      	b.n	75e0 <_free_r+0x94>
    76b6:	22aa      	movs	r2, #170	; 0xaa
    76b8:	0052      	lsls	r2, r2, #1
    76ba:	4290      	cmp	r0, r2
    76bc:	d805      	bhi.n	76ca <_free_r+0x17e>
    76be:	0be8      	lsrs	r0, r5, #15
    76c0:	0002      	movs	r2, r0
    76c2:	3078      	adds	r0, #120	; 0x78
    76c4:	3277      	adds	r2, #119	; 0x77
    76c6:	00c0      	lsls	r0, r0, #3
    76c8:	e78a      	b.n	75e0 <_free_r+0x94>
    76ca:	4a0e      	ldr	r2, [pc, #56]	; (7704 <_free_r+0x1b8>)
    76cc:	4290      	cmp	r0, r2
    76ce:	d805      	bhi.n	76dc <_free_r+0x190>
    76d0:	0ca8      	lsrs	r0, r5, #18
    76d2:	0002      	movs	r2, r0
    76d4:	307d      	adds	r0, #125	; 0x7d
    76d6:	327c      	adds	r2, #124	; 0x7c
    76d8:	00c0      	lsls	r0, r0, #3
    76da:	e781      	b.n	75e0 <_free_r+0x94>
    76dc:	20fe      	movs	r0, #254	; 0xfe
    76de:	227e      	movs	r2, #126	; 0x7e
    76e0:	0080      	lsls	r0, r0, #2
    76e2:	e77d      	b.n	75e0 <_free_r+0x94>
    76e4:	4663      	mov	r3, ip
    76e6:	432b      	orrs	r3, r5
    76e8:	604b      	str	r3, [r1, #4]
    76ea:	6015      	str	r5, [r2, #0]
    76ec:	e76c      	b.n	75c8 <_free_r+0x7c>
    76ee:	46c0      	nop			; (mov r8, r8)
    76f0:	2000048c 	.word	0x2000048c
    76f4:	000001ff 	.word	0x000001ff
    76f8:	20000494 	.word	0x20000494
    76fc:	20000898 	.word	0x20000898
    7700:	2000210c 	.word	0x2000210c
    7704:	00000554 	.word	0x00000554

00007708 <_localeconv_r>:
    7708:	4b04      	ldr	r3, [pc, #16]	; (771c <_localeconv_r+0x14>)
    770a:	681b      	ldr	r3, [r3, #0]
    770c:	6b58      	ldr	r0, [r3, #52]	; 0x34
    770e:	2800      	cmp	r0, #0
    7710:	d001      	beq.n	7716 <_localeconv_r+0xe>
    7712:	30f0      	adds	r0, #240	; 0xf0
    7714:	4770      	bx	lr
    7716:	4802      	ldr	r0, [pc, #8]	; (7720 <_localeconv_r+0x18>)
    7718:	e7fb      	b.n	7712 <_localeconv_r+0xa>
    771a:	46c0      	nop			; (mov r8, r8)
    771c:	20000058 	.word	0x20000058
    7720:	2000089c 	.word	0x2000089c

00007724 <__retarget_lock_acquire_recursive>:
    7724:	4770      	bx	lr
    7726:	46c0      	nop			; (mov r8, r8)

00007728 <__retarget_lock_release_recursive>:
    7728:	4770      	bx	lr
    772a:	46c0      	nop			; (mov r8, r8)

0000772c <_malloc_r>:
    772c:	b5f0      	push	{r4, r5, r6, r7, lr}
    772e:	4657      	mov	r7, sl
    7730:	4645      	mov	r5, r8
    7732:	46de      	mov	lr, fp
    7734:	464e      	mov	r6, r9
    7736:	b5e0      	push	{r5, r6, r7, lr}
    7738:	000d      	movs	r5, r1
    773a:	350b      	adds	r5, #11
    773c:	b083      	sub	sp, #12
    773e:	0007      	movs	r7, r0
    7740:	2d16      	cmp	r5, #22
    7742:	d800      	bhi.n	7746 <_malloc_r+0x1a>
    7744:	e09f      	b.n	7886 <_malloc_r+0x15a>
    7746:	2307      	movs	r3, #7
    7748:	439d      	bics	r5, r3
    774a:	d500      	bpl.n	774e <_malloc_r+0x22>
    774c:	e0c4      	b.n	78d8 <_malloc_r+0x1ac>
    774e:	42a9      	cmp	r1, r5
    7750:	d900      	bls.n	7754 <_malloc_r+0x28>
    7752:	e0c1      	b.n	78d8 <_malloc_r+0x1ac>
    7754:	f000 fb20 	bl	7d98 <__malloc_lock>
    7758:	23f8      	movs	r3, #248	; 0xf8
    775a:	33ff      	adds	r3, #255	; 0xff
    775c:	429d      	cmp	r5, r3
    775e:	d800      	bhi.n	7762 <_malloc_r+0x36>
    7760:	e28f      	b.n	7c82 <_malloc_r+0x556>
    7762:	0a68      	lsrs	r0, r5, #9
    7764:	d100      	bne.n	7768 <_malloc_r+0x3c>
    7766:	e0bb      	b.n	78e0 <_malloc_r+0x1b4>
    7768:	2804      	cmp	r0, #4
    776a:	d900      	bls.n	776e <_malloc_r+0x42>
    776c:	e162      	b.n	7a34 <_malloc_r+0x308>
    776e:	2338      	movs	r3, #56	; 0x38
    7770:	4698      	mov	r8, r3
    7772:	09a8      	lsrs	r0, r5, #6
    7774:	4480      	add	r8, r0
    7776:	3039      	adds	r0, #57	; 0x39
    7778:	00c1      	lsls	r1, r0, #3
    777a:	4ed2      	ldr	r6, [pc, #840]	; (7ac4 <_malloc_r+0x398>)
    777c:	1871      	adds	r1, r6, r1
    777e:	3908      	subs	r1, #8
    7780:	68cc      	ldr	r4, [r1, #12]
    7782:	42a1      	cmp	r1, r4
    7784:	d019      	beq.n	77ba <_malloc_r+0x8e>
    7786:	2303      	movs	r3, #3
    7788:	6862      	ldr	r2, [r4, #4]
    778a:	439a      	bics	r2, r3
    778c:	0013      	movs	r3, r2
    778e:	1b52      	subs	r2, r2, r5
    7790:	2a0f      	cmp	r2, #15
    7792:	dd00      	ble.n	7796 <_malloc_r+0x6a>
    7794:	e0aa      	b.n	78ec <_malloc_r+0x1c0>
    7796:	2a00      	cmp	r2, #0
    7798:	db00      	blt.n	779c <_malloc_r+0x70>
    779a:	e088      	b.n	78ae <_malloc_r+0x182>
    779c:	2303      	movs	r3, #3
    779e:	469c      	mov	ip, r3
    77a0:	e008      	b.n	77b4 <_malloc_r+0x88>
    77a2:	4662      	mov	r2, ip
    77a4:	6863      	ldr	r3, [r4, #4]
    77a6:	4393      	bics	r3, r2
    77a8:	1b5a      	subs	r2, r3, r5
    77aa:	2a0f      	cmp	r2, #15
    77ac:	dd00      	ble.n	77b0 <_malloc_r+0x84>
    77ae:	e09d      	b.n	78ec <_malloc_r+0x1c0>
    77b0:	2a00      	cmp	r2, #0
    77b2:	da7c      	bge.n	78ae <_malloc_r+0x182>
    77b4:	68e4      	ldr	r4, [r4, #12]
    77b6:	42a1      	cmp	r1, r4
    77b8:	d1f3      	bne.n	77a2 <_malloc_r+0x76>
    77ba:	0032      	movs	r2, r6
    77bc:	6934      	ldr	r4, [r6, #16]
    77be:	3208      	adds	r2, #8
    77c0:	4294      	cmp	r4, r2
    77c2:	d100      	bne.n	77c6 <_malloc_r+0x9a>
    77c4:	e190      	b.n	7ae8 <_malloc_r+0x3bc>
    77c6:	2303      	movs	r3, #3
    77c8:	6861      	ldr	r1, [r4, #4]
    77ca:	4399      	bics	r1, r3
    77cc:	4689      	mov	r9, r1
    77ce:	1b49      	subs	r1, r1, r5
    77d0:	290f      	cmp	r1, #15
    77d2:	dd00      	ble.n	77d6 <_malloc_r+0xaa>
    77d4:	e162      	b.n	7a9c <_malloc_r+0x370>
    77d6:	6172      	str	r2, [r6, #20]
    77d8:	6132      	str	r2, [r6, #16]
    77da:	2900      	cmp	r1, #0
    77dc:	db00      	blt.n	77e0 <_malloc_r+0xb4>
    77de:	e087      	b.n	78f0 <_malloc_r+0x1c4>
    77e0:	4ab9      	ldr	r2, [pc, #740]	; (7ac8 <_malloc_r+0x39c>)
    77e2:	464b      	mov	r3, r9
    77e4:	4591      	cmp	r9, r2
    77e6:	d900      	bls.n	77ea <_malloc_r+0xbe>
    77e8:	e130      	b.n	7a4c <_malloc_r+0x320>
    77ea:	08db      	lsrs	r3, r3, #3
    77ec:	3aff      	subs	r2, #255	; 0xff
    77ee:	1099      	asrs	r1, r3, #2
    77f0:	3aff      	subs	r2, #255	; 0xff
    77f2:	408a      	lsls	r2, r1
    77f4:	00db      	lsls	r3, r3, #3
    77f6:	6871      	ldr	r1, [r6, #4]
    77f8:	199b      	adds	r3, r3, r6
    77fa:	430a      	orrs	r2, r1
    77fc:	6899      	ldr	r1, [r3, #8]
    77fe:	6072      	str	r2, [r6, #4]
    7800:	60e3      	str	r3, [r4, #12]
    7802:	60a1      	str	r1, [r4, #8]
    7804:	609c      	str	r4, [r3, #8]
    7806:	0013      	movs	r3, r2
    7808:	60cc      	str	r4, [r1, #12]
    780a:	2101      	movs	r1, #1
    780c:	1082      	asrs	r2, r0, #2
    780e:	4091      	lsls	r1, r2
    7810:	4299      	cmp	r1, r3
    7812:	d86f      	bhi.n	78f4 <_malloc_r+0x1c8>
    7814:	420b      	tst	r3, r1
    7816:	d105      	bne.n	7824 <_malloc_r+0xf8>
    7818:	2203      	movs	r2, #3
    781a:	4390      	bics	r0, r2
    781c:	0049      	lsls	r1, r1, #1
    781e:	3004      	adds	r0, #4
    7820:	420b      	tst	r3, r1
    7822:	d0fb      	beq.n	781c <_malloc_r+0xf0>
    7824:	2303      	movs	r3, #3
    7826:	4698      	mov	r8, r3
    7828:	00c3      	lsls	r3, r0, #3
    782a:	4699      	mov	r9, r3
    782c:	44b1      	add	r9, r6
    782e:	46cc      	mov	ip, r9
    7830:	4682      	mov	sl, r0
    7832:	4663      	mov	r3, ip
    7834:	68dc      	ldr	r4, [r3, #12]
    7836:	45a4      	cmp	ip, r4
    7838:	d107      	bne.n	784a <_malloc_r+0x11e>
    783a:	e157      	b.n	7aec <_malloc_r+0x3c0>
    783c:	2a00      	cmp	r2, #0
    783e:	db00      	blt.n	7842 <_malloc_r+0x116>
    7840:	e166      	b.n	7b10 <_malloc_r+0x3e4>
    7842:	68e4      	ldr	r4, [r4, #12]
    7844:	45a4      	cmp	ip, r4
    7846:	d100      	bne.n	784a <_malloc_r+0x11e>
    7848:	e150      	b.n	7aec <_malloc_r+0x3c0>
    784a:	4642      	mov	r2, r8
    784c:	6863      	ldr	r3, [r4, #4]
    784e:	4393      	bics	r3, r2
    7850:	1b5a      	subs	r2, r3, r5
    7852:	2a0f      	cmp	r2, #15
    7854:	ddf2      	ble.n	783c <_malloc_r+0x110>
    7856:	2001      	movs	r0, #1
    7858:	4680      	mov	r8, r0
    785a:	1961      	adds	r1, r4, r5
    785c:	4305      	orrs	r5, r0
    785e:	6065      	str	r5, [r4, #4]
    7860:	68a0      	ldr	r0, [r4, #8]
    7862:	68e5      	ldr	r5, [r4, #12]
    7864:	3608      	adds	r6, #8
    7866:	60c5      	str	r5, [r0, #12]
    7868:	60a8      	str	r0, [r5, #8]
    786a:	4640      	mov	r0, r8
    786c:	60f1      	str	r1, [r6, #12]
    786e:	60b1      	str	r1, [r6, #8]
    7870:	4310      	orrs	r0, r2
    7872:	6048      	str	r0, [r1, #4]
    7874:	60ce      	str	r6, [r1, #12]
    7876:	608e      	str	r6, [r1, #8]
    7878:	0038      	movs	r0, r7
    787a:	50e2      	str	r2, [r4, r3]
    787c:	f000 fa94 	bl	7da8 <__malloc_unlock>
    7880:	0020      	movs	r0, r4
    7882:	3008      	adds	r0, #8
    7884:	e021      	b.n	78ca <_malloc_r+0x19e>
    7886:	2910      	cmp	r1, #16
    7888:	d826      	bhi.n	78d8 <_malloc_r+0x1ac>
    788a:	0038      	movs	r0, r7
    788c:	f000 fa84 	bl	7d98 <__malloc_lock>
    7890:	2510      	movs	r5, #16
    7892:	2318      	movs	r3, #24
    7894:	2002      	movs	r0, #2
    7896:	4e8b      	ldr	r6, [pc, #556]	; (7ac4 <_malloc_r+0x398>)
    7898:	18f3      	adds	r3, r6, r3
    789a:	001a      	movs	r2, r3
    789c:	685c      	ldr	r4, [r3, #4]
    789e:	3a08      	subs	r2, #8
    78a0:	4294      	cmp	r4, r2
    78a2:	d100      	bne.n	78a6 <_malloc_r+0x17a>
    78a4:	e12e      	b.n	7b04 <_malloc_r+0x3d8>
    78a6:	2303      	movs	r3, #3
    78a8:	6862      	ldr	r2, [r4, #4]
    78aa:	439a      	bics	r2, r3
    78ac:	0013      	movs	r3, r2
    78ae:	68e2      	ldr	r2, [r4, #12]
    78b0:	68a1      	ldr	r1, [r4, #8]
    78b2:	60ca      	str	r2, [r1, #12]
    78b4:	6091      	str	r1, [r2, #8]
    78b6:	2201      	movs	r2, #1
    78b8:	18e3      	adds	r3, r4, r3
    78ba:	6859      	ldr	r1, [r3, #4]
    78bc:	0038      	movs	r0, r7
    78be:	430a      	orrs	r2, r1
    78c0:	605a      	str	r2, [r3, #4]
    78c2:	f000 fa71 	bl	7da8 <__malloc_unlock>
    78c6:	0020      	movs	r0, r4
    78c8:	3008      	adds	r0, #8
    78ca:	b003      	add	sp, #12
    78cc:	bc3c      	pop	{r2, r3, r4, r5}
    78ce:	4690      	mov	r8, r2
    78d0:	4699      	mov	r9, r3
    78d2:	46a2      	mov	sl, r4
    78d4:	46ab      	mov	fp, r5
    78d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    78d8:	230c      	movs	r3, #12
    78da:	2000      	movs	r0, #0
    78dc:	603b      	str	r3, [r7, #0]
    78de:	e7f4      	b.n	78ca <_malloc_r+0x19e>
    78e0:	2180      	movs	r1, #128	; 0x80
    78e2:	233f      	movs	r3, #63	; 0x3f
    78e4:	2040      	movs	r0, #64	; 0x40
    78e6:	0089      	lsls	r1, r1, #2
    78e8:	4698      	mov	r8, r3
    78ea:	e746      	b.n	777a <_malloc_r+0x4e>
    78ec:	4640      	mov	r0, r8
    78ee:	e764      	b.n	77ba <_malloc_r+0x8e>
    78f0:	464b      	mov	r3, r9
    78f2:	e7e0      	b.n	78b6 <_malloc_r+0x18a>
    78f4:	2303      	movs	r3, #3
    78f6:	68b4      	ldr	r4, [r6, #8]
    78f8:	6862      	ldr	r2, [r4, #4]
    78fa:	439a      	bics	r2, r3
    78fc:	4690      	mov	r8, r2
    78fe:	42aa      	cmp	r2, r5
    7900:	d303      	bcc.n	790a <_malloc_r+0x1de>
    7902:	1b53      	subs	r3, r2, r5
    7904:	2b0f      	cmp	r3, #15
    7906:	dd00      	ble.n	790a <_malloc_r+0x1de>
    7908:	e086      	b.n	7a18 <_malloc_r+0x2ec>
    790a:	0023      	movs	r3, r4
    790c:	4443      	add	r3, r8
    790e:	4a6f      	ldr	r2, [pc, #444]	; (7acc <_malloc_r+0x3a0>)
    7910:	9301      	str	r3, [sp, #4]
    7912:	4b6f      	ldr	r3, [pc, #444]	; (7ad0 <_malloc_r+0x3a4>)
    7914:	4693      	mov	fp, r2
    7916:	681b      	ldr	r3, [r3, #0]
    7918:	6812      	ldr	r2, [r2, #0]
    791a:	18eb      	adds	r3, r5, r3
    791c:	3201      	adds	r2, #1
    791e:	d100      	bne.n	7922 <_malloc_r+0x1f6>
    7920:	e168      	b.n	7bf4 <_malloc_r+0x4c8>
    7922:	4a6c      	ldr	r2, [pc, #432]	; (7ad4 <_malloc_r+0x3a8>)
    7924:	4694      	mov	ip, r2
    7926:	4463      	add	r3, ip
    7928:	0b1b      	lsrs	r3, r3, #12
    792a:	031b      	lsls	r3, r3, #12
    792c:	9300      	str	r3, [sp, #0]
    792e:	9900      	ldr	r1, [sp, #0]
    7930:	0038      	movs	r0, r7
    7932:	f000 fd89 	bl	8448 <_sbrk_r>
    7936:	0003      	movs	r3, r0
    7938:	4681      	mov	r9, r0
    793a:	3301      	adds	r3, #1
    793c:	d061      	beq.n	7a02 <_malloc_r+0x2d6>
    793e:	9b01      	ldr	r3, [sp, #4]
    7940:	4283      	cmp	r3, r0
    7942:	d900      	bls.n	7946 <_malloc_r+0x21a>
    7944:	e0ff      	b.n	7b46 <_malloc_r+0x41a>
    7946:	4b64      	ldr	r3, [pc, #400]	; (7ad8 <_malloc_r+0x3ac>)
    7948:	9a00      	ldr	r2, [sp, #0]
    794a:	469a      	mov	sl, r3
    794c:	681b      	ldr	r3, [r3, #0]
    794e:	469c      	mov	ip, r3
    7950:	4653      	mov	r3, sl
    7952:	4462      	add	r2, ip
    7954:	601a      	str	r2, [r3, #0]
    7956:	9b01      	ldr	r3, [sp, #4]
    7958:	0011      	movs	r1, r2
    795a:	4283      	cmp	r3, r0
    795c:	d100      	bne.n	7960 <_malloc_r+0x234>
    795e:	e155      	b.n	7c0c <_malloc_r+0x4e0>
    7960:	465b      	mov	r3, fp
    7962:	681b      	ldr	r3, [r3, #0]
    7964:	3301      	adds	r3, #1
    7966:	d100      	bne.n	796a <_malloc_r+0x23e>
    7968:	e16c      	b.n	7c44 <_malloc_r+0x518>
    796a:	464b      	mov	r3, r9
    796c:	9a01      	ldr	r2, [sp, #4]
    796e:	1a9b      	subs	r3, r3, r2
    7970:	1859      	adds	r1, r3, r1
    7972:	4653      	mov	r3, sl
    7974:	6019      	str	r1, [r3, #0]
    7976:	2307      	movs	r3, #7
    7978:	464a      	mov	r2, r9
    797a:	4013      	ands	r3, r2
    797c:	d100      	bne.n	7980 <_malloc_r+0x254>
    797e:	e124      	b.n	7bca <_malloc_r+0x49e>
    7980:	2108      	movs	r1, #8
    7982:	4689      	mov	r9, r1
    7984:	4955      	ldr	r1, [pc, #340]	; (7adc <_malloc_r+0x3b0>)
    7986:	1ad2      	subs	r2, r2, r3
    7988:	4491      	add	r9, r2
    798a:	1acb      	subs	r3, r1, r3
    798c:	9a00      	ldr	r2, [sp, #0]
    798e:	0038      	movs	r0, r7
    7990:	444a      	add	r2, r9
    7992:	0511      	lsls	r1, r2, #20
    7994:	0d09      	lsrs	r1, r1, #20
    7996:	1a5b      	subs	r3, r3, r1
    7998:	0019      	movs	r1, r3
    799a:	469b      	mov	fp, r3
    799c:	f000 fd54 	bl	8448 <_sbrk_r>
    79a0:	1c43      	adds	r3, r0, #1
    79a2:	d100      	bne.n	79a6 <_malloc_r+0x27a>
    79a4:	e142      	b.n	7c2c <_malloc_r+0x500>
    79a6:	464b      	mov	r3, r9
    79a8:	1ac0      	subs	r0, r0, r3
    79aa:	2301      	movs	r3, #1
    79ac:	4458      	add	r0, fp
    79ae:	4318      	orrs	r0, r3
    79b0:	4653      	mov	r3, sl
    79b2:	681b      	ldr	r3, [r3, #0]
    79b4:	445b      	add	r3, fp
    79b6:	0019      	movs	r1, r3
    79b8:	4653      	mov	r3, sl
    79ba:	6019      	str	r1, [r3, #0]
    79bc:	464b      	mov	r3, r9
    79be:	60b3      	str	r3, [r6, #8]
    79c0:	6058      	str	r0, [r3, #4]
    79c2:	42b4      	cmp	r4, r6
    79c4:	d013      	beq.n	79ee <_malloc_r+0x2c2>
    79c6:	4643      	mov	r3, r8
    79c8:	2b0f      	cmp	r3, #15
    79ca:	d800      	bhi.n	79ce <_malloc_r+0x2a2>
    79cc:	e0e8      	b.n	7ba0 <_malloc_r+0x474>
    79ce:	4643      	mov	r3, r8
    79d0:	2207      	movs	r2, #7
    79d2:	6860      	ldr	r0, [r4, #4]
    79d4:	3b0c      	subs	r3, #12
    79d6:	4393      	bics	r3, r2
    79d8:	3a06      	subs	r2, #6
    79da:	4002      	ands	r2, r0
    79dc:	2005      	movs	r0, #5
    79de:	431a      	orrs	r2, r3
    79e0:	6062      	str	r2, [r4, #4]
    79e2:	18e2      	adds	r2, r4, r3
    79e4:	6050      	str	r0, [r2, #4]
    79e6:	6090      	str	r0, [r2, #8]
    79e8:	2b0f      	cmp	r3, #15
    79ea:	d900      	bls.n	79ee <_malloc_r+0x2c2>
    79ec:	e122      	b.n	7c34 <_malloc_r+0x508>
    79ee:	4b3c      	ldr	r3, [pc, #240]	; (7ae0 <_malloc_r+0x3b4>)
    79f0:	681a      	ldr	r2, [r3, #0]
    79f2:	4291      	cmp	r1, r2
    79f4:	d900      	bls.n	79f8 <_malloc_r+0x2cc>
    79f6:	6019      	str	r1, [r3, #0]
    79f8:	4b3a      	ldr	r3, [pc, #232]	; (7ae4 <_malloc_r+0x3b8>)
    79fa:	681a      	ldr	r2, [r3, #0]
    79fc:	4291      	cmp	r1, r2
    79fe:	d900      	bls.n	7a02 <_malloc_r+0x2d6>
    7a00:	6019      	str	r1, [r3, #0]
    7a02:	2303      	movs	r3, #3
    7a04:	68b4      	ldr	r4, [r6, #8]
    7a06:	6862      	ldr	r2, [r4, #4]
    7a08:	439a      	bics	r2, r3
    7a0a:	1b53      	subs	r3, r2, r5
    7a0c:	4295      	cmp	r5, r2
    7a0e:	d900      	bls.n	7a12 <_malloc_r+0x2e6>
    7a10:	e0c9      	b.n	7ba6 <_malloc_r+0x47a>
    7a12:	2b0f      	cmp	r3, #15
    7a14:	dc00      	bgt.n	7a18 <_malloc_r+0x2ec>
    7a16:	e0c6      	b.n	7ba6 <_malloc_r+0x47a>
    7a18:	2201      	movs	r2, #1
    7a1a:	0029      	movs	r1, r5
    7a1c:	4313      	orrs	r3, r2
    7a1e:	4311      	orrs	r1, r2
    7a20:	1965      	adds	r5, r4, r5
    7a22:	6061      	str	r1, [r4, #4]
    7a24:	0038      	movs	r0, r7
    7a26:	60b5      	str	r5, [r6, #8]
    7a28:	606b      	str	r3, [r5, #4]
    7a2a:	f000 f9bd 	bl	7da8 <__malloc_unlock>
    7a2e:	0020      	movs	r0, r4
    7a30:	3008      	adds	r0, #8
    7a32:	e74a      	b.n	78ca <_malloc_r+0x19e>
    7a34:	2814      	cmp	r0, #20
    7a36:	d97a      	bls.n	7b2e <_malloc_r+0x402>
    7a38:	2854      	cmp	r0, #84	; 0x54
    7a3a:	d900      	bls.n	7a3e <_malloc_r+0x312>
    7a3c:	e0ba      	b.n	7bb4 <_malloc_r+0x488>
    7a3e:	236e      	movs	r3, #110	; 0x6e
    7a40:	4698      	mov	r8, r3
    7a42:	0b28      	lsrs	r0, r5, #12
    7a44:	4480      	add	r8, r0
    7a46:	306f      	adds	r0, #111	; 0x6f
    7a48:	00c1      	lsls	r1, r0, #3
    7a4a:	e696      	b.n	777a <_malloc_r+0x4e>
    7a4c:	0a5a      	lsrs	r2, r3, #9
    7a4e:	2a04      	cmp	r2, #4
    7a50:	d973      	bls.n	7b3a <_malloc_r+0x40e>
    7a52:	2a14      	cmp	r2, #20
    7a54:	d900      	bls.n	7a58 <_malloc_r+0x32c>
    7a56:	e0d0      	b.n	7bfa <_malloc_r+0x4ce>
    7a58:	0011      	movs	r1, r2
    7a5a:	325c      	adds	r2, #92	; 0x5c
    7a5c:	315b      	adds	r1, #91	; 0x5b
    7a5e:	00d2      	lsls	r2, r2, #3
    7a60:	2308      	movs	r3, #8
    7a62:	425b      	negs	r3, r3
    7a64:	469c      	mov	ip, r3
    7a66:	18b2      	adds	r2, r6, r2
    7a68:	4494      	add	ip, r2
    7a6a:	4663      	mov	r3, ip
    7a6c:	689a      	ldr	r2, [r3, #8]
    7a6e:	2303      	movs	r3, #3
    7a70:	4698      	mov	r8, r3
    7a72:	4594      	cmp	ip, r2
    7a74:	d100      	bne.n	7a78 <_malloc_r+0x34c>
    7a76:	e0ab      	b.n	7bd0 <_malloc_r+0x4a4>
    7a78:	4643      	mov	r3, r8
    7a7a:	6851      	ldr	r1, [r2, #4]
    7a7c:	4399      	bics	r1, r3
    7a7e:	4589      	cmp	r9, r1
    7a80:	d300      	bcc.n	7a84 <_malloc_r+0x358>
    7a82:	e095      	b.n	7bb0 <_malloc_r+0x484>
    7a84:	6892      	ldr	r2, [r2, #8]
    7a86:	4594      	cmp	ip, r2
    7a88:	d1f6      	bne.n	7a78 <_malloc_r+0x34c>
    7a8a:	4663      	mov	r3, ip
    7a8c:	68da      	ldr	r2, [r3, #12]
    7a8e:	6873      	ldr	r3, [r6, #4]
    7a90:	4661      	mov	r1, ip
    7a92:	60e2      	str	r2, [r4, #12]
    7a94:	60a1      	str	r1, [r4, #8]
    7a96:	6094      	str	r4, [r2, #8]
    7a98:	60cc      	str	r4, [r1, #12]
    7a9a:	e6b6      	b.n	780a <_malloc_r+0xde>
    7a9c:	2301      	movs	r3, #1
    7a9e:	1960      	adds	r0, r4, r5
    7aa0:	431d      	orrs	r5, r3
    7aa2:	6065      	str	r5, [r4, #4]
    7aa4:	6170      	str	r0, [r6, #20]
    7aa6:	6130      	str	r0, [r6, #16]
    7aa8:	60c2      	str	r2, [r0, #12]
    7aaa:	6082      	str	r2, [r0, #8]
    7aac:	001a      	movs	r2, r3
    7aae:	464b      	mov	r3, r9
    7ab0:	430a      	orrs	r2, r1
    7ab2:	6042      	str	r2, [r0, #4]
    7ab4:	0038      	movs	r0, r7
    7ab6:	50e1      	str	r1, [r4, r3]
    7ab8:	f000 f976 	bl	7da8 <__malloc_unlock>
    7abc:	0020      	movs	r0, r4
    7abe:	3008      	adds	r0, #8
    7ac0:	e703      	b.n	78ca <_malloc_r+0x19e>
    7ac2:	46c0      	nop			; (mov r8, r8)
    7ac4:	2000048c 	.word	0x2000048c
    7ac8:	000001ff 	.word	0x000001ff
    7acc:	20000894 	.word	0x20000894
    7ad0:	2000210c 	.word	0x2000210c
    7ad4:	0000100f 	.word	0x0000100f
    7ad8:	200020dc 	.word	0x200020dc
    7adc:	00001008 	.word	0x00001008
    7ae0:	20002104 	.word	0x20002104
    7ae4:	20002108 	.word	0x20002108
    7ae8:	6873      	ldr	r3, [r6, #4]
    7aea:	e68e      	b.n	780a <_malloc_r+0xde>
    7aec:	2308      	movs	r3, #8
    7aee:	469b      	mov	fp, r3
    7af0:	3b07      	subs	r3, #7
    7af2:	44dc      	add	ip, fp
    7af4:	469b      	mov	fp, r3
    7af6:	44da      	add	sl, fp
    7af8:	4643      	mov	r3, r8
    7afa:	4652      	mov	r2, sl
    7afc:	4213      	tst	r3, r2
    7afe:	d000      	beq.n	7b02 <_malloc_r+0x3d6>
    7b00:	e697      	b.n	7832 <_malloc_r+0x106>
    7b02:	e037      	b.n	7b74 <_malloc_r+0x448>
    7b04:	68dc      	ldr	r4, [r3, #12]
    7b06:	3002      	adds	r0, #2
    7b08:	42a3      	cmp	r3, r4
    7b0a:	d100      	bne.n	7b0e <_malloc_r+0x3e2>
    7b0c:	e655      	b.n	77ba <_malloc_r+0x8e>
    7b0e:	e6ca      	b.n	78a6 <_malloc_r+0x17a>
    7b10:	2201      	movs	r2, #1
    7b12:	18e3      	adds	r3, r4, r3
    7b14:	6859      	ldr	r1, [r3, #4]
    7b16:	0038      	movs	r0, r7
    7b18:	430a      	orrs	r2, r1
    7b1a:	605a      	str	r2, [r3, #4]
    7b1c:	68e3      	ldr	r3, [r4, #12]
    7b1e:	68a2      	ldr	r2, [r4, #8]
    7b20:	60d3      	str	r3, [r2, #12]
    7b22:	609a      	str	r2, [r3, #8]
    7b24:	f000 f940 	bl	7da8 <__malloc_unlock>
    7b28:	0020      	movs	r0, r4
    7b2a:	3008      	adds	r0, #8
    7b2c:	e6cd      	b.n	78ca <_malloc_r+0x19e>
    7b2e:	235b      	movs	r3, #91	; 0x5b
    7b30:	4698      	mov	r8, r3
    7b32:	4480      	add	r8, r0
    7b34:	305c      	adds	r0, #92	; 0x5c
    7b36:	00c1      	lsls	r1, r0, #3
    7b38:	e61f      	b.n	777a <_malloc_r+0x4e>
    7b3a:	099a      	lsrs	r2, r3, #6
    7b3c:	0011      	movs	r1, r2
    7b3e:	3239      	adds	r2, #57	; 0x39
    7b40:	3138      	adds	r1, #56	; 0x38
    7b42:	00d2      	lsls	r2, r2, #3
    7b44:	e78c      	b.n	7a60 <_malloc_r+0x334>
    7b46:	42b4      	cmp	r4, r6
    7b48:	d000      	beq.n	7b4c <_malloc_r+0x420>
    7b4a:	e75a      	b.n	7a02 <_malloc_r+0x2d6>
    7b4c:	4b4f      	ldr	r3, [pc, #316]	; (7c8c <_malloc_r+0x560>)
    7b4e:	9a00      	ldr	r2, [sp, #0]
    7b50:	469a      	mov	sl, r3
    7b52:	681b      	ldr	r3, [r3, #0]
    7b54:	469c      	mov	ip, r3
    7b56:	4653      	mov	r3, sl
    7b58:	4462      	add	r2, ip
    7b5a:	0011      	movs	r1, r2
    7b5c:	601a      	str	r2, [r3, #0]
    7b5e:	e6ff      	b.n	7960 <_malloc_r+0x234>
    7b60:	2308      	movs	r3, #8
    7b62:	425b      	negs	r3, r3
    7b64:	469c      	mov	ip, r3
    7b66:	44e1      	add	r9, ip
    7b68:	464b      	mov	r3, r9
    7b6a:	689b      	ldr	r3, [r3, #8]
    7b6c:	3801      	subs	r0, #1
    7b6e:	4599      	cmp	r9, r3
    7b70:	d000      	beq.n	7b74 <_malloc_r+0x448>
    7b72:	e084      	b.n	7c7e <_malloc_r+0x552>
    7b74:	4643      	mov	r3, r8
    7b76:	4203      	tst	r3, r0
    7b78:	d1f2      	bne.n	7b60 <_malloc_r+0x434>
    7b7a:	6873      	ldr	r3, [r6, #4]
    7b7c:	438b      	bics	r3, r1
    7b7e:	6073      	str	r3, [r6, #4]
    7b80:	0049      	lsls	r1, r1, #1
    7b82:	4299      	cmp	r1, r3
    7b84:	d900      	bls.n	7b88 <_malloc_r+0x45c>
    7b86:	e6b5      	b.n	78f4 <_malloc_r+0x1c8>
    7b88:	2900      	cmp	r1, #0
    7b8a:	d100      	bne.n	7b8e <_malloc_r+0x462>
    7b8c:	e6b2      	b.n	78f4 <_malloc_r+0x1c8>
    7b8e:	4650      	mov	r0, sl
    7b90:	420b      	tst	r3, r1
    7b92:	d000      	beq.n	7b96 <_malloc_r+0x46a>
    7b94:	e648      	b.n	7828 <_malloc_r+0xfc>
    7b96:	0049      	lsls	r1, r1, #1
    7b98:	3004      	adds	r0, #4
    7b9a:	420b      	tst	r3, r1
    7b9c:	d0fb      	beq.n	7b96 <_malloc_r+0x46a>
    7b9e:	e643      	b.n	7828 <_malloc_r+0xfc>
    7ba0:	2301      	movs	r3, #1
    7ba2:	464a      	mov	r2, r9
    7ba4:	6053      	str	r3, [r2, #4]
    7ba6:	0038      	movs	r0, r7
    7ba8:	f000 f8fe 	bl	7da8 <__malloc_unlock>
    7bac:	2000      	movs	r0, #0
    7bae:	e68c      	b.n	78ca <_malloc_r+0x19e>
    7bb0:	4694      	mov	ip, r2
    7bb2:	e76a      	b.n	7a8a <_malloc_r+0x35e>
    7bb4:	23aa      	movs	r3, #170	; 0xaa
    7bb6:	005b      	lsls	r3, r3, #1
    7bb8:	4298      	cmp	r0, r3
    7bba:	d811      	bhi.n	7be0 <_malloc_r+0x4b4>
    7bbc:	3bdd      	subs	r3, #221	; 0xdd
    7bbe:	4698      	mov	r8, r3
    7bc0:	0be8      	lsrs	r0, r5, #15
    7bc2:	4480      	add	r8, r0
    7bc4:	3078      	adds	r0, #120	; 0x78
    7bc6:	00c1      	lsls	r1, r0, #3
    7bc8:	e5d7      	b.n	777a <_malloc_r+0x4e>
    7bca:	2380      	movs	r3, #128	; 0x80
    7bcc:	015b      	lsls	r3, r3, #5
    7bce:	e6dd      	b.n	798c <_malloc_r+0x260>
    7bd0:	1089      	asrs	r1, r1, #2
    7bd2:	3b02      	subs	r3, #2
    7bd4:	408b      	lsls	r3, r1
    7bd6:	6872      	ldr	r2, [r6, #4]
    7bd8:	4313      	orrs	r3, r2
    7bda:	6073      	str	r3, [r6, #4]
    7bdc:	4662      	mov	r2, ip
    7bde:	e757      	b.n	7a90 <_malloc_r+0x364>
    7be0:	4b2b      	ldr	r3, [pc, #172]	; (7c90 <_malloc_r+0x564>)
    7be2:	4298      	cmp	r0, r3
    7be4:	d81c      	bhi.n	7c20 <_malloc_r+0x4f4>
    7be6:	237c      	movs	r3, #124	; 0x7c
    7be8:	4698      	mov	r8, r3
    7bea:	0ca8      	lsrs	r0, r5, #18
    7bec:	4480      	add	r8, r0
    7bee:	307d      	adds	r0, #125	; 0x7d
    7bf0:	00c1      	lsls	r1, r0, #3
    7bf2:	e5c2      	b.n	777a <_malloc_r+0x4e>
    7bf4:	3310      	adds	r3, #16
    7bf6:	9300      	str	r3, [sp, #0]
    7bf8:	e699      	b.n	792e <_malloc_r+0x202>
    7bfa:	2a54      	cmp	r2, #84	; 0x54
    7bfc:	d826      	bhi.n	7c4c <_malloc_r+0x520>
    7bfe:	464b      	mov	r3, r9
    7c00:	0b1a      	lsrs	r2, r3, #12
    7c02:	0011      	movs	r1, r2
    7c04:	326f      	adds	r2, #111	; 0x6f
    7c06:	316e      	adds	r1, #110	; 0x6e
    7c08:	00d2      	lsls	r2, r2, #3
    7c0a:	e729      	b.n	7a60 <_malloc_r+0x334>
    7c0c:	051b      	lsls	r3, r3, #20
    7c0e:	d000      	beq.n	7c12 <_malloc_r+0x4e6>
    7c10:	e6a6      	b.n	7960 <_malloc_r+0x234>
    7c12:	2001      	movs	r0, #1
    7c14:	9b00      	ldr	r3, [sp, #0]
    7c16:	68b2      	ldr	r2, [r6, #8]
    7c18:	4443      	add	r3, r8
    7c1a:	4303      	orrs	r3, r0
    7c1c:	6053      	str	r3, [r2, #4]
    7c1e:	e6e6      	b.n	79ee <_malloc_r+0x2c2>
    7c20:	21fe      	movs	r1, #254	; 0xfe
    7c22:	237e      	movs	r3, #126	; 0x7e
    7c24:	207f      	movs	r0, #127	; 0x7f
    7c26:	0089      	lsls	r1, r1, #2
    7c28:	4698      	mov	r8, r3
    7c2a:	e5a6      	b.n	777a <_malloc_r+0x4e>
    7c2c:	2300      	movs	r3, #0
    7c2e:	2001      	movs	r0, #1
    7c30:	469b      	mov	fp, r3
    7c32:	e6bd      	b.n	79b0 <_malloc_r+0x284>
    7c34:	0021      	movs	r1, r4
    7c36:	0038      	movs	r0, r7
    7c38:	3108      	adds	r1, #8
    7c3a:	f7ff fc87 	bl	754c <_free_r>
    7c3e:	4653      	mov	r3, sl
    7c40:	6819      	ldr	r1, [r3, #0]
    7c42:	e6d4      	b.n	79ee <_malloc_r+0x2c2>
    7c44:	465b      	mov	r3, fp
    7c46:	464a      	mov	r2, r9
    7c48:	601a      	str	r2, [r3, #0]
    7c4a:	e694      	b.n	7976 <_malloc_r+0x24a>
    7c4c:	21aa      	movs	r1, #170	; 0xaa
    7c4e:	0049      	lsls	r1, r1, #1
    7c50:	428a      	cmp	r2, r1
    7c52:	d806      	bhi.n	7c62 <_malloc_r+0x536>
    7c54:	464b      	mov	r3, r9
    7c56:	0bda      	lsrs	r2, r3, #15
    7c58:	0011      	movs	r1, r2
    7c5a:	3278      	adds	r2, #120	; 0x78
    7c5c:	3177      	adds	r1, #119	; 0x77
    7c5e:	00d2      	lsls	r2, r2, #3
    7c60:	e6fe      	b.n	7a60 <_malloc_r+0x334>
    7c62:	490b      	ldr	r1, [pc, #44]	; (7c90 <_malloc_r+0x564>)
    7c64:	428a      	cmp	r2, r1
    7c66:	d806      	bhi.n	7c76 <_malloc_r+0x54a>
    7c68:	464b      	mov	r3, r9
    7c6a:	0c9a      	lsrs	r2, r3, #18
    7c6c:	0011      	movs	r1, r2
    7c6e:	327d      	adds	r2, #125	; 0x7d
    7c70:	317c      	adds	r1, #124	; 0x7c
    7c72:	00d2      	lsls	r2, r2, #3
    7c74:	e6f4      	b.n	7a60 <_malloc_r+0x334>
    7c76:	22fe      	movs	r2, #254	; 0xfe
    7c78:	217e      	movs	r1, #126	; 0x7e
    7c7a:	0092      	lsls	r2, r2, #2
    7c7c:	e6f0      	b.n	7a60 <_malloc_r+0x334>
    7c7e:	6873      	ldr	r3, [r6, #4]
    7c80:	e77e      	b.n	7b80 <_malloc_r+0x454>
    7c82:	002b      	movs	r3, r5
    7c84:	08e8      	lsrs	r0, r5, #3
    7c86:	3308      	adds	r3, #8
    7c88:	e605      	b.n	7896 <_malloc_r+0x16a>
    7c8a:	46c0      	nop			; (mov r8, r8)
    7c8c:	200020dc 	.word	0x200020dc
    7c90:	00000554 	.word	0x00000554

00007c94 <memchr>:
    7c94:	b570      	push	{r4, r5, r6, lr}
    7c96:	b2cd      	uxtb	r5, r1
    7c98:	0783      	lsls	r3, r0, #30
    7c9a:	d034      	beq.n	7d06 <memchr+0x72>
    7c9c:	1e54      	subs	r4, r2, #1
    7c9e:	2a00      	cmp	r2, #0
    7ca0:	d01b      	beq.n	7cda <memchr+0x46>
    7ca2:	7803      	ldrb	r3, [r0, #0]
    7ca4:	42ab      	cmp	r3, r5
    7ca6:	d019      	beq.n	7cdc <memchr+0x48>
    7ca8:	2203      	movs	r2, #3
    7caa:	e004      	b.n	7cb6 <memchr+0x22>
    7cac:	3c01      	subs	r4, #1
    7cae:	d314      	bcc.n	7cda <memchr+0x46>
    7cb0:	7803      	ldrb	r3, [r0, #0]
    7cb2:	42ab      	cmp	r3, r5
    7cb4:	d012      	beq.n	7cdc <memchr+0x48>
    7cb6:	3001      	adds	r0, #1
    7cb8:	4210      	tst	r0, r2
    7cba:	d1f7      	bne.n	7cac <memchr+0x18>
    7cbc:	2c03      	cmp	r4, #3
    7cbe:	d80e      	bhi.n	7cde <memchr+0x4a>
    7cc0:	2c00      	cmp	r4, #0
    7cc2:	d00a      	beq.n	7cda <memchr+0x46>
    7cc4:	7803      	ldrb	r3, [r0, #0]
    7cc6:	42ab      	cmp	r3, r5
    7cc8:	d008      	beq.n	7cdc <memchr+0x48>
    7cca:	1904      	adds	r4, r0, r4
    7ccc:	e002      	b.n	7cd4 <memchr+0x40>
    7cce:	7803      	ldrb	r3, [r0, #0]
    7cd0:	42ab      	cmp	r3, r5
    7cd2:	d003      	beq.n	7cdc <memchr+0x48>
    7cd4:	3001      	adds	r0, #1
    7cd6:	4284      	cmp	r4, r0
    7cd8:	d1f9      	bne.n	7cce <memchr+0x3a>
    7cda:	2000      	movs	r0, #0
    7cdc:	bd70      	pop	{r4, r5, r6, pc}
    7cde:	22ff      	movs	r2, #255	; 0xff
    7ce0:	060b      	lsls	r3, r1, #24
    7ce2:	0c1b      	lsrs	r3, r3, #16
    7ce4:	4011      	ands	r1, r2
    7ce6:	4319      	orrs	r1, r3
    7ce8:	040b      	lsls	r3, r1, #16
    7cea:	4e08      	ldr	r6, [pc, #32]	; (7d0c <memchr+0x78>)
    7cec:	4319      	orrs	r1, r3
    7cee:	6803      	ldr	r3, [r0, #0]
    7cf0:	4a07      	ldr	r2, [pc, #28]	; (7d10 <memchr+0x7c>)
    7cf2:	404b      	eors	r3, r1
    7cf4:	189a      	adds	r2, r3, r2
    7cf6:	439a      	bics	r2, r3
    7cf8:	4232      	tst	r2, r6
    7cfa:	d1e3      	bne.n	7cc4 <memchr+0x30>
    7cfc:	3c04      	subs	r4, #4
    7cfe:	3004      	adds	r0, #4
    7d00:	2c03      	cmp	r4, #3
    7d02:	d8f4      	bhi.n	7cee <memchr+0x5a>
    7d04:	e7dc      	b.n	7cc0 <memchr+0x2c>
    7d06:	0014      	movs	r4, r2
    7d08:	e7d8      	b.n	7cbc <memchr+0x28>
    7d0a:	46c0      	nop			; (mov r8, r8)
    7d0c:	80808080 	.word	0x80808080
    7d10:	fefefeff 	.word	0xfefefeff

00007d14 <memcpy>:
    7d14:	b5f0      	push	{r4, r5, r6, r7, lr}
    7d16:	0005      	movs	r5, r0
    7d18:	2a0f      	cmp	r2, #15
    7d1a:	d92f      	bls.n	7d7c <memcpy+0x68>
    7d1c:	000b      	movs	r3, r1
    7d1e:	4303      	orrs	r3, r0
    7d20:	079b      	lsls	r3, r3, #30
    7d22:	d134      	bne.n	7d8e <memcpy+0x7a>
    7d24:	0016      	movs	r6, r2
    7d26:	000c      	movs	r4, r1
    7d28:	0003      	movs	r3, r0
    7d2a:	3e10      	subs	r6, #16
    7d2c:	0935      	lsrs	r5, r6, #4
    7d2e:	3501      	adds	r5, #1
    7d30:	012d      	lsls	r5, r5, #4
    7d32:	1945      	adds	r5, r0, r5
    7d34:	6827      	ldr	r7, [r4, #0]
    7d36:	601f      	str	r7, [r3, #0]
    7d38:	6867      	ldr	r7, [r4, #4]
    7d3a:	605f      	str	r7, [r3, #4]
    7d3c:	68a7      	ldr	r7, [r4, #8]
    7d3e:	609f      	str	r7, [r3, #8]
    7d40:	68e7      	ldr	r7, [r4, #12]
    7d42:	3410      	adds	r4, #16
    7d44:	60df      	str	r7, [r3, #12]
    7d46:	3310      	adds	r3, #16
    7d48:	429d      	cmp	r5, r3
    7d4a:	d1f3      	bne.n	7d34 <memcpy+0x20>
    7d4c:	230f      	movs	r3, #15
    7d4e:	439e      	bics	r6, r3
    7d50:	3610      	adds	r6, #16
    7d52:	1985      	adds	r5, r0, r6
    7d54:	1989      	adds	r1, r1, r6
    7d56:	4013      	ands	r3, r2
    7d58:	2b03      	cmp	r3, #3
    7d5a:	d91a      	bls.n	7d92 <memcpy+0x7e>
    7d5c:	1f1e      	subs	r6, r3, #4
    7d5e:	2300      	movs	r3, #0
    7d60:	08b4      	lsrs	r4, r6, #2
    7d62:	3401      	adds	r4, #1
    7d64:	00a4      	lsls	r4, r4, #2
    7d66:	58cf      	ldr	r7, [r1, r3]
    7d68:	50ef      	str	r7, [r5, r3]
    7d6a:	3304      	adds	r3, #4
    7d6c:	42a3      	cmp	r3, r4
    7d6e:	d1fa      	bne.n	7d66 <memcpy+0x52>
    7d70:	2403      	movs	r4, #3
    7d72:	43a6      	bics	r6, r4
    7d74:	1d33      	adds	r3, r6, #4
    7d76:	4022      	ands	r2, r4
    7d78:	18c9      	adds	r1, r1, r3
    7d7a:	18ed      	adds	r5, r5, r3
    7d7c:	2a00      	cmp	r2, #0
    7d7e:	d005      	beq.n	7d8c <memcpy+0x78>
    7d80:	2300      	movs	r3, #0
    7d82:	5ccc      	ldrb	r4, [r1, r3]
    7d84:	54ec      	strb	r4, [r5, r3]
    7d86:	3301      	adds	r3, #1
    7d88:	4293      	cmp	r3, r2
    7d8a:	d1fa      	bne.n	7d82 <memcpy+0x6e>
    7d8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7d8e:	0005      	movs	r5, r0
    7d90:	e7f6      	b.n	7d80 <memcpy+0x6c>
    7d92:	001a      	movs	r2, r3
    7d94:	e7f2      	b.n	7d7c <memcpy+0x68>
    7d96:	46c0      	nop			; (mov r8, r8)

00007d98 <__malloc_lock>:
    7d98:	b510      	push	{r4, lr}
    7d9a:	4802      	ldr	r0, [pc, #8]	; (7da4 <__malloc_lock+0xc>)
    7d9c:	f7ff fcc2 	bl	7724 <__retarget_lock_acquire_recursive>
    7da0:	bd10      	pop	{r4, pc}
    7da2:	46c0      	nop			; (mov r8, r8)
    7da4:	20002250 	.word	0x20002250

00007da8 <__malloc_unlock>:
    7da8:	b510      	push	{r4, lr}
    7daa:	4802      	ldr	r0, [pc, #8]	; (7db4 <__malloc_unlock+0xc>)
    7dac:	f7ff fcbc 	bl	7728 <__retarget_lock_release_recursive>
    7db0:	bd10      	pop	{r4, pc}
    7db2:	46c0      	nop			; (mov r8, r8)
    7db4:	20002250 	.word	0x20002250

00007db8 <_Balloc>:
    7db8:	b570      	push	{r4, r5, r6, lr}
    7dba:	0004      	movs	r4, r0
    7dbc:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    7dbe:	000d      	movs	r5, r1
    7dc0:	2800      	cmp	r0, #0
    7dc2:	d00a      	beq.n	7dda <_Balloc+0x22>
    7dc4:	00ab      	lsls	r3, r5, #2
    7dc6:	18c3      	adds	r3, r0, r3
    7dc8:	6818      	ldr	r0, [r3, #0]
    7dca:	2800      	cmp	r0, #0
    7dcc:	d00f      	beq.n	7dee <_Balloc+0x36>
    7dce:	6802      	ldr	r2, [r0, #0]
    7dd0:	601a      	str	r2, [r3, #0]
    7dd2:	2300      	movs	r3, #0
    7dd4:	6103      	str	r3, [r0, #16]
    7dd6:	60c3      	str	r3, [r0, #12]
    7dd8:	bd70      	pop	{r4, r5, r6, pc}
    7dda:	2221      	movs	r2, #33	; 0x21
    7ddc:	2104      	movs	r1, #4
    7dde:	0020      	movs	r0, r4
    7de0:	f000 fc80 	bl	86e4 <_calloc_r>
    7de4:	64e0      	str	r0, [r4, #76]	; 0x4c
    7de6:	2800      	cmp	r0, #0
    7de8:	d1ec      	bne.n	7dc4 <_Balloc+0xc>
    7dea:	2000      	movs	r0, #0
    7dec:	e7f4      	b.n	7dd8 <_Balloc+0x20>
    7dee:	2601      	movs	r6, #1
    7df0:	40ae      	lsls	r6, r5
    7df2:	1d72      	adds	r2, r6, #5
    7df4:	0092      	lsls	r2, r2, #2
    7df6:	2101      	movs	r1, #1
    7df8:	0020      	movs	r0, r4
    7dfa:	f000 fc73 	bl	86e4 <_calloc_r>
    7dfe:	2800      	cmp	r0, #0
    7e00:	d0f3      	beq.n	7dea <_Balloc+0x32>
    7e02:	6045      	str	r5, [r0, #4]
    7e04:	6086      	str	r6, [r0, #8]
    7e06:	e7e4      	b.n	7dd2 <_Balloc+0x1a>

00007e08 <_Bfree>:
    7e08:	2900      	cmp	r1, #0
    7e0a:	d006      	beq.n	7e1a <_Bfree+0x12>
    7e0c:	684b      	ldr	r3, [r1, #4]
    7e0e:	009a      	lsls	r2, r3, #2
    7e10:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    7e12:	189b      	adds	r3, r3, r2
    7e14:	681a      	ldr	r2, [r3, #0]
    7e16:	600a      	str	r2, [r1, #0]
    7e18:	6019      	str	r1, [r3, #0]
    7e1a:	4770      	bx	lr

00007e1c <__multadd>:
    7e1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7e1e:	46ce      	mov	lr, r9
    7e20:	4647      	mov	r7, r8
    7e22:	4681      	mov	r9, r0
    7e24:	0008      	movs	r0, r1
    7e26:	b580      	push	{r7, lr}
    7e28:	000d      	movs	r5, r1
    7e2a:	690c      	ldr	r4, [r1, #16]
    7e2c:	001f      	movs	r7, r3
    7e2e:	2100      	movs	r1, #0
    7e30:	3014      	adds	r0, #20
    7e32:	6803      	ldr	r3, [r0, #0]
    7e34:	3101      	adds	r1, #1
    7e36:	041e      	lsls	r6, r3, #16
    7e38:	0c36      	lsrs	r6, r6, #16
    7e3a:	4356      	muls	r6, r2
    7e3c:	0c1b      	lsrs	r3, r3, #16
    7e3e:	4353      	muls	r3, r2
    7e40:	19f6      	adds	r6, r6, r7
    7e42:	0c37      	lsrs	r7, r6, #16
    7e44:	19db      	adds	r3, r3, r7
    7e46:	0436      	lsls	r6, r6, #16
    7e48:	0c1f      	lsrs	r7, r3, #16
    7e4a:	0c36      	lsrs	r6, r6, #16
    7e4c:	041b      	lsls	r3, r3, #16
    7e4e:	199b      	adds	r3, r3, r6
    7e50:	c008      	stmia	r0!, {r3}
    7e52:	428c      	cmp	r4, r1
    7e54:	dced      	bgt.n	7e32 <__multadd+0x16>
    7e56:	2f00      	cmp	r7, #0
    7e58:	d008      	beq.n	7e6c <__multadd+0x50>
    7e5a:	68ab      	ldr	r3, [r5, #8]
    7e5c:	429c      	cmp	r4, r3
    7e5e:	da0a      	bge.n	7e76 <__multadd+0x5a>
    7e60:	1d23      	adds	r3, r4, #4
    7e62:	009b      	lsls	r3, r3, #2
    7e64:	18eb      	adds	r3, r5, r3
    7e66:	3401      	adds	r4, #1
    7e68:	605f      	str	r7, [r3, #4]
    7e6a:	612c      	str	r4, [r5, #16]
    7e6c:	0028      	movs	r0, r5
    7e6e:	bc0c      	pop	{r2, r3}
    7e70:	4690      	mov	r8, r2
    7e72:	4699      	mov	r9, r3
    7e74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7e76:	686b      	ldr	r3, [r5, #4]
    7e78:	4648      	mov	r0, r9
    7e7a:	1c59      	adds	r1, r3, #1
    7e7c:	f7ff ff9c 	bl	7db8 <_Balloc>
    7e80:	0029      	movs	r1, r5
    7e82:	692b      	ldr	r3, [r5, #16]
    7e84:	4680      	mov	r8, r0
    7e86:	1c9a      	adds	r2, r3, #2
    7e88:	0092      	lsls	r2, r2, #2
    7e8a:	310c      	adds	r1, #12
    7e8c:	300c      	adds	r0, #12
    7e8e:	f7ff ff41 	bl	7d14 <memcpy>
    7e92:	686b      	ldr	r3, [r5, #4]
    7e94:	009a      	lsls	r2, r3, #2
    7e96:	464b      	mov	r3, r9
    7e98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    7e9a:	189b      	adds	r3, r3, r2
    7e9c:	681a      	ldr	r2, [r3, #0]
    7e9e:	602a      	str	r2, [r5, #0]
    7ea0:	601d      	str	r5, [r3, #0]
    7ea2:	4645      	mov	r5, r8
    7ea4:	e7dc      	b.n	7e60 <__multadd+0x44>
    7ea6:	46c0      	nop			; (mov r8, r8)

00007ea8 <__hi0bits>:
    7ea8:	0003      	movs	r3, r0
    7eaa:	0c02      	lsrs	r2, r0, #16
    7eac:	2000      	movs	r0, #0
    7eae:	2a00      	cmp	r2, #0
    7eb0:	d101      	bne.n	7eb6 <__hi0bits+0xe>
    7eb2:	041b      	lsls	r3, r3, #16
    7eb4:	3010      	adds	r0, #16
    7eb6:	0e1a      	lsrs	r2, r3, #24
    7eb8:	d101      	bne.n	7ebe <__hi0bits+0x16>
    7eba:	3008      	adds	r0, #8
    7ebc:	021b      	lsls	r3, r3, #8
    7ebe:	0f1a      	lsrs	r2, r3, #28
    7ec0:	d101      	bne.n	7ec6 <__hi0bits+0x1e>
    7ec2:	3004      	adds	r0, #4
    7ec4:	011b      	lsls	r3, r3, #4
    7ec6:	0f9a      	lsrs	r2, r3, #30
    7ec8:	d101      	bne.n	7ece <__hi0bits+0x26>
    7eca:	3002      	adds	r0, #2
    7ecc:	009b      	lsls	r3, r3, #2
    7ece:	2b00      	cmp	r3, #0
    7ed0:	db03      	blt.n	7eda <__hi0bits+0x32>
    7ed2:	3001      	adds	r0, #1
    7ed4:	005b      	lsls	r3, r3, #1
    7ed6:	d400      	bmi.n	7eda <__hi0bits+0x32>
    7ed8:	2020      	movs	r0, #32
    7eda:	4770      	bx	lr

00007edc <__lo0bits>:
    7edc:	6803      	ldr	r3, [r0, #0]
    7ede:	075a      	lsls	r2, r3, #29
    7ee0:	d009      	beq.n	7ef6 <__lo0bits+0x1a>
    7ee2:	2200      	movs	r2, #0
    7ee4:	07d9      	lsls	r1, r3, #31
    7ee6:	d404      	bmi.n	7ef2 <__lo0bits+0x16>
    7ee8:	079a      	lsls	r2, r3, #30
    7eea:	d420      	bmi.n	7f2e <__lo0bits+0x52>
    7eec:	2202      	movs	r2, #2
    7eee:	089b      	lsrs	r3, r3, #2
    7ef0:	6003      	str	r3, [r0, #0]
    7ef2:	0010      	movs	r0, r2
    7ef4:	4770      	bx	lr
    7ef6:	0419      	lsls	r1, r3, #16
    7ef8:	2200      	movs	r2, #0
    7efa:	2900      	cmp	r1, #0
    7efc:	d101      	bne.n	7f02 <__lo0bits+0x26>
    7efe:	0c1b      	lsrs	r3, r3, #16
    7f00:	3210      	adds	r2, #16
    7f02:	21ff      	movs	r1, #255	; 0xff
    7f04:	4219      	tst	r1, r3
    7f06:	d101      	bne.n	7f0c <__lo0bits+0x30>
    7f08:	3208      	adds	r2, #8
    7f0a:	0a1b      	lsrs	r3, r3, #8
    7f0c:	0719      	lsls	r1, r3, #28
    7f0e:	d101      	bne.n	7f14 <__lo0bits+0x38>
    7f10:	3204      	adds	r2, #4
    7f12:	091b      	lsrs	r3, r3, #4
    7f14:	0799      	lsls	r1, r3, #30
    7f16:	d101      	bne.n	7f1c <__lo0bits+0x40>
    7f18:	3202      	adds	r2, #2
    7f1a:	089b      	lsrs	r3, r3, #2
    7f1c:	07d9      	lsls	r1, r3, #31
    7f1e:	d404      	bmi.n	7f2a <__lo0bits+0x4e>
    7f20:	085b      	lsrs	r3, r3, #1
    7f22:	d101      	bne.n	7f28 <__lo0bits+0x4c>
    7f24:	2220      	movs	r2, #32
    7f26:	e7e4      	b.n	7ef2 <__lo0bits+0x16>
    7f28:	3201      	adds	r2, #1
    7f2a:	6003      	str	r3, [r0, #0]
    7f2c:	e7e1      	b.n	7ef2 <__lo0bits+0x16>
    7f2e:	085b      	lsrs	r3, r3, #1
    7f30:	6003      	str	r3, [r0, #0]
    7f32:	2201      	movs	r2, #1
    7f34:	e7dd      	b.n	7ef2 <__lo0bits+0x16>
    7f36:	46c0      	nop			; (mov r8, r8)

00007f38 <__i2b>:
    7f38:	b510      	push	{r4, lr}
    7f3a:	000c      	movs	r4, r1
    7f3c:	2101      	movs	r1, #1
    7f3e:	f7ff ff3b 	bl	7db8 <_Balloc>
    7f42:	2301      	movs	r3, #1
    7f44:	6144      	str	r4, [r0, #20]
    7f46:	6103      	str	r3, [r0, #16]
    7f48:	bd10      	pop	{r4, pc}
    7f4a:	46c0      	nop			; (mov r8, r8)

00007f4c <__multiply>:
    7f4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    7f4e:	4657      	mov	r7, sl
    7f50:	464e      	mov	r6, r9
    7f52:	4645      	mov	r5, r8
    7f54:	46de      	mov	lr, fp
    7f56:	b5e0      	push	{r5, r6, r7, lr}
    7f58:	6914      	ldr	r4, [r2, #16]
    7f5a:	690e      	ldr	r6, [r1, #16]
    7f5c:	b085      	sub	sp, #20
    7f5e:	000f      	movs	r7, r1
    7f60:	0015      	movs	r5, r2
    7f62:	42a6      	cmp	r6, r4
    7f64:	da04      	bge.n	7f70 <__multiply+0x24>
    7f66:	0033      	movs	r3, r6
    7f68:	0017      	movs	r7, r2
    7f6a:	0026      	movs	r6, r4
    7f6c:	000d      	movs	r5, r1
    7f6e:	001c      	movs	r4, r3
    7f70:	1933      	adds	r3, r6, r4
    7f72:	4698      	mov	r8, r3
    7f74:	68bb      	ldr	r3, [r7, #8]
    7f76:	6879      	ldr	r1, [r7, #4]
    7f78:	4598      	cmp	r8, r3
    7f7a:	dd00      	ble.n	7f7e <__multiply+0x32>
    7f7c:	3101      	adds	r1, #1
    7f7e:	f7ff ff1b 	bl	7db8 <_Balloc>
    7f82:	2214      	movs	r2, #20
    7f84:	0003      	movs	r3, r0
    7f86:	4694      	mov	ip, r2
    7f88:	4463      	add	r3, ip
    7f8a:	469b      	mov	fp, r3
    7f8c:	4643      	mov	r3, r8
    7f8e:	009b      	lsls	r3, r3, #2
    7f90:	445b      	add	r3, fp
    7f92:	0019      	movs	r1, r3
    7f94:	9302      	str	r3, [sp, #8]
    7f96:	9003      	str	r0, [sp, #12]
    7f98:	465b      	mov	r3, fp
    7f9a:	2200      	movs	r2, #0
    7f9c:	458b      	cmp	fp, r1
    7f9e:	d203      	bcs.n	7fa8 <__multiply+0x5c>
    7fa0:	9902      	ldr	r1, [sp, #8]
    7fa2:	c304      	stmia	r3!, {r2}
    7fa4:	4299      	cmp	r1, r3
    7fa6:	d8fc      	bhi.n	7fa2 <__multiply+0x56>
    7fa8:	2314      	movs	r3, #20
    7faa:	00a4      	lsls	r4, r4, #2
    7fac:	469a      	mov	sl, r3
    7fae:	3714      	adds	r7, #20
    7fb0:	0023      	movs	r3, r4
    7fb2:	46bc      	mov	ip, r7
    7fb4:	44aa      	add	sl, r5
    7fb6:	00b6      	lsls	r6, r6, #2
    7fb8:	4453      	add	r3, sl
    7fba:	9700      	str	r7, [sp, #0]
    7fbc:	44b4      	add	ip, r6
    7fbe:	9301      	str	r3, [sp, #4]
    7fc0:	459a      	cmp	sl, r3
    7fc2:	d24f      	bcs.n	8064 <__multiply+0x118>
    7fc4:	4653      	mov	r3, sl
    7fc6:	681b      	ldr	r3, [r3, #0]
    7fc8:	041e      	lsls	r6, r3, #16
    7fca:	0c36      	lsrs	r6, r6, #16
    7fcc:	d020      	beq.n	8010 <__multiply+0xc4>
    7fce:	465c      	mov	r4, fp
    7fd0:	2700      	movs	r7, #0
    7fd2:	9d00      	ldr	r5, [sp, #0]
    7fd4:	0021      	movs	r1, r4
    7fd6:	cc08      	ldmia	r4!, {r3}
    7fd8:	cd04      	ldmia	r5!, {r2}
    7fda:	4699      	mov	r9, r3
    7fdc:	4648      	mov	r0, r9
    7fde:	0413      	lsls	r3, r2, #16
    7fe0:	0c1b      	lsrs	r3, r3, #16
    7fe2:	4373      	muls	r3, r6
    7fe4:	0400      	lsls	r0, r0, #16
    7fe6:	0c00      	lsrs	r0, r0, #16
    7fe8:	181b      	adds	r3, r3, r0
    7fea:	19d8      	adds	r0, r3, r7
    7fec:	0c13      	lsrs	r3, r2, #16
    7fee:	464a      	mov	r2, r9
    7ff0:	4373      	muls	r3, r6
    7ff2:	0c12      	lsrs	r2, r2, #16
    7ff4:	189b      	adds	r3, r3, r2
    7ff6:	0c02      	lsrs	r2, r0, #16
    7ff8:	189b      	adds	r3, r3, r2
    7ffa:	0402      	lsls	r2, r0, #16
    7ffc:	0c1f      	lsrs	r7, r3, #16
    7ffe:	0c12      	lsrs	r2, r2, #16
    8000:	041b      	lsls	r3, r3, #16
    8002:	4313      	orrs	r3, r2
    8004:	600b      	str	r3, [r1, #0]
    8006:	45ac      	cmp	ip, r5
    8008:	d8e4      	bhi.n	7fd4 <__multiply+0x88>
    800a:	4653      	mov	r3, sl
    800c:	6027      	str	r7, [r4, #0]
    800e:	681b      	ldr	r3, [r3, #0]
    8010:	0c1e      	lsrs	r6, r3, #16
    8012:	d020      	beq.n	8056 <__multiply+0x10a>
    8014:	465b      	mov	r3, fp
    8016:	2100      	movs	r1, #0
    8018:	681b      	ldr	r3, [r3, #0]
    801a:	465c      	mov	r4, fp
    801c:	0018      	movs	r0, r3
    801e:	000f      	movs	r7, r1
    8020:	4662      	mov	r2, ip
    8022:	9d00      	ldr	r5, [sp, #0]
    8024:	8829      	ldrh	r1, [r5, #0]
    8026:	0c00      	lsrs	r0, r0, #16
    8028:	4371      	muls	r1, r6
    802a:	1809      	adds	r1, r1, r0
    802c:	19c9      	adds	r1, r1, r7
    802e:	041b      	lsls	r3, r3, #16
    8030:	0408      	lsls	r0, r1, #16
    8032:	0c1b      	lsrs	r3, r3, #16
    8034:	4303      	orrs	r3, r0
    8036:	6023      	str	r3, [r4, #0]
    8038:	cd08      	ldmia	r5!, {r3}
    803a:	6860      	ldr	r0, [r4, #4]
    803c:	0c1b      	lsrs	r3, r3, #16
    803e:	4373      	muls	r3, r6
    8040:	0407      	lsls	r7, r0, #16
    8042:	0c3f      	lsrs	r7, r7, #16
    8044:	19db      	adds	r3, r3, r7
    8046:	0c09      	lsrs	r1, r1, #16
    8048:	185b      	adds	r3, r3, r1
    804a:	0c1f      	lsrs	r7, r3, #16
    804c:	3404      	adds	r4, #4
    804e:	42aa      	cmp	r2, r5
    8050:	d8e8      	bhi.n	8024 <__multiply+0xd8>
    8052:	4694      	mov	ip, r2
    8054:	6023      	str	r3, [r4, #0]
    8056:	2304      	movs	r3, #4
    8058:	4699      	mov	r9, r3
    805a:	9b01      	ldr	r3, [sp, #4]
    805c:	44ca      	add	sl, r9
    805e:	44cb      	add	fp, r9
    8060:	4553      	cmp	r3, sl
    8062:	d8af      	bhi.n	7fc4 <__multiply+0x78>
    8064:	4643      	mov	r3, r8
    8066:	2b00      	cmp	r3, #0
    8068:	dd0e      	ble.n	8088 <__multiply+0x13c>
    806a:	9b02      	ldr	r3, [sp, #8]
    806c:	3b04      	subs	r3, #4
    806e:	681a      	ldr	r2, [r3, #0]
    8070:	2a00      	cmp	r2, #0
    8072:	d109      	bne.n	8088 <__multiply+0x13c>
    8074:	4642      	mov	r2, r8
    8076:	e003      	b.n	8080 <__multiply+0x134>
    8078:	3b04      	subs	r3, #4
    807a:	6819      	ldr	r1, [r3, #0]
    807c:	2900      	cmp	r1, #0
    807e:	d102      	bne.n	8086 <__multiply+0x13a>
    8080:	3a01      	subs	r2, #1
    8082:	2a00      	cmp	r2, #0
    8084:	d1f8      	bne.n	8078 <__multiply+0x12c>
    8086:	4690      	mov	r8, r2
    8088:	9b03      	ldr	r3, [sp, #12]
    808a:	4642      	mov	r2, r8
    808c:	0018      	movs	r0, r3
    808e:	611a      	str	r2, [r3, #16]
    8090:	b005      	add	sp, #20
    8092:	bc3c      	pop	{r2, r3, r4, r5}
    8094:	4690      	mov	r8, r2
    8096:	4699      	mov	r9, r3
    8098:	46a2      	mov	sl, r4
    809a:	46ab      	mov	fp, r5
    809c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    809e:	46c0      	nop			; (mov r8, r8)

000080a0 <__pow5mult>:
    80a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    80a2:	4647      	mov	r7, r8
    80a4:	46ce      	mov	lr, r9
    80a6:	2303      	movs	r3, #3
    80a8:	b580      	push	{r7, lr}
    80aa:	4680      	mov	r8, r0
    80ac:	000f      	movs	r7, r1
    80ae:	0014      	movs	r4, r2
    80b0:	4013      	ands	r3, r2
    80b2:	d13a      	bne.n	812a <__pow5mult+0x8a>
    80b4:	10a4      	asrs	r4, r4, #2
    80b6:	003e      	movs	r6, r7
    80b8:	2c00      	cmp	r4, #0
    80ba:	d025      	beq.n	8108 <__pow5mult+0x68>
    80bc:	4643      	mov	r3, r8
    80be:	6c9d      	ldr	r5, [r3, #72]	; 0x48
    80c0:	2d00      	cmp	r5, #0
    80c2:	d03b      	beq.n	813c <__pow5mult+0x9c>
    80c4:	003e      	movs	r6, r7
    80c6:	2300      	movs	r3, #0
    80c8:	2701      	movs	r7, #1
    80ca:	4699      	mov	r9, r3
    80cc:	4227      	tst	r7, r4
    80ce:	d107      	bne.n	80e0 <__pow5mult+0x40>
    80d0:	1064      	asrs	r4, r4, #1
    80d2:	d019      	beq.n	8108 <__pow5mult+0x68>
    80d4:	6828      	ldr	r0, [r5, #0]
    80d6:	2800      	cmp	r0, #0
    80d8:	d01b      	beq.n	8112 <__pow5mult+0x72>
    80da:	0005      	movs	r5, r0
    80dc:	4227      	tst	r7, r4
    80de:	d0f7      	beq.n	80d0 <__pow5mult+0x30>
    80e0:	002a      	movs	r2, r5
    80e2:	0031      	movs	r1, r6
    80e4:	4640      	mov	r0, r8
    80e6:	f7ff ff31 	bl	7f4c <__multiply>
    80ea:	2e00      	cmp	r6, #0
    80ec:	d01b      	beq.n	8126 <__pow5mult+0x86>
    80ee:	4642      	mov	r2, r8
    80f0:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    80f2:	6873      	ldr	r3, [r6, #4]
    80f4:	4694      	mov	ip, r2
    80f6:	009b      	lsls	r3, r3, #2
    80f8:	4463      	add	r3, ip
    80fa:	681a      	ldr	r2, [r3, #0]
    80fc:	1064      	asrs	r4, r4, #1
    80fe:	6032      	str	r2, [r6, #0]
    8100:	601e      	str	r6, [r3, #0]
    8102:	0006      	movs	r6, r0
    8104:	2c00      	cmp	r4, #0
    8106:	d1e5      	bne.n	80d4 <__pow5mult+0x34>
    8108:	0030      	movs	r0, r6
    810a:	bc0c      	pop	{r2, r3}
    810c:	4690      	mov	r8, r2
    810e:	4699      	mov	r9, r3
    8110:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8112:	002a      	movs	r2, r5
    8114:	0029      	movs	r1, r5
    8116:	4640      	mov	r0, r8
    8118:	f7ff ff18 	bl	7f4c <__multiply>
    811c:	464b      	mov	r3, r9
    811e:	6028      	str	r0, [r5, #0]
    8120:	6003      	str	r3, [r0, #0]
    8122:	0005      	movs	r5, r0
    8124:	e7da      	b.n	80dc <__pow5mult+0x3c>
    8126:	0006      	movs	r6, r0
    8128:	e7d2      	b.n	80d0 <__pow5mult+0x30>
    812a:	4a0b      	ldr	r2, [pc, #44]	; (8158 <__pow5mult+0xb8>)
    812c:	3b01      	subs	r3, #1
    812e:	009b      	lsls	r3, r3, #2
    8130:	589a      	ldr	r2, [r3, r2]
    8132:	2300      	movs	r3, #0
    8134:	f7ff fe72 	bl	7e1c <__multadd>
    8138:	0007      	movs	r7, r0
    813a:	e7bb      	b.n	80b4 <__pow5mult+0x14>
    813c:	2101      	movs	r1, #1
    813e:	4640      	mov	r0, r8
    8140:	f7ff fe3a 	bl	7db8 <_Balloc>
    8144:	4b05      	ldr	r3, [pc, #20]	; (815c <__pow5mult+0xbc>)
    8146:	0005      	movs	r5, r0
    8148:	6143      	str	r3, [r0, #20]
    814a:	2301      	movs	r3, #1
    814c:	6103      	str	r3, [r0, #16]
    814e:	4643      	mov	r3, r8
    8150:	6498      	str	r0, [r3, #72]	; 0x48
    8152:	2300      	movs	r3, #0
    8154:	6003      	str	r3, [r0, #0]
    8156:	e7b5      	b.n	80c4 <__pow5mult+0x24>
    8158:	0000a970 	.word	0x0000a970
    815c:	00000271 	.word	0x00000271

00008160 <__lshift>:
    8160:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8162:	464e      	mov	r6, r9
    8164:	4645      	mov	r5, r8
    8166:	46de      	mov	lr, fp
    8168:	4657      	mov	r7, sl
    816a:	b5e0      	push	{r5, r6, r7, lr}
    816c:	000e      	movs	r6, r1
    816e:	6933      	ldr	r3, [r6, #16]
    8170:	1154      	asrs	r4, r2, #5
    8172:	4698      	mov	r8, r3
    8174:	44a0      	add	r8, r4
    8176:	4643      	mov	r3, r8
    8178:	1c5d      	adds	r5, r3, #1
    817a:	68b3      	ldr	r3, [r6, #8]
    817c:	4683      	mov	fp, r0
    817e:	4691      	mov	r9, r2
    8180:	6849      	ldr	r1, [r1, #4]
    8182:	429d      	cmp	r5, r3
    8184:	dd03      	ble.n	818e <__lshift+0x2e>
    8186:	3101      	adds	r1, #1
    8188:	005b      	lsls	r3, r3, #1
    818a:	429d      	cmp	r5, r3
    818c:	dcfb      	bgt.n	8186 <__lshift+0x26>
    818e:	4658      	mov	r0, fp
    8190:	f7ff fe12 	bl	7db8 <_Balloc>
    8194:	0003      	movs	r3, r0
    8196:	4684      	mov	ip, r0
    8198:	3314      	adds	r3, #20
    819a:	2c00      	cmp	r4, #0
    819c:	dd06      	ble.n	81ac <__lshift+0x4c>
    819e:	2100      	movs	r1, #0
    81a0:	00a4      	lsls	r4, r4, #2
    81a2:	001a      	movs	r2, r3
    81a4:	191b      	adds	r3, r3, r4
    81a6:	c202      	stmia	r2!, {r1}
    81a8:	4293      	cmp	r3, r2
    81aa:	d1fc      	bne.n	81a6 <__lshift+0x46>
    81ac:	6932      	ldr	r2, [r6, #16]
    81ae:	4648      	mov	r0, r9
    81b0:	0097      	lsls	r7, r2, #2
    81b2:	0031      	movs	r1, r6
    81b4:	221f      	movs	r2, #31
    81b6:	3114      	adds	r1, #20
    81b8:	4010      	ands	r0, r2
    81ba:	19cf      	adds	r7, r1, r7
    81bc:	4681      	mov	r9, r0
    81be:	2800      	cmp	r0, #0
    81c0:	d025      	beq.n	820e <__lshift+0xae>
    81c2:	2220      	movs	r2, #32
    81c4:	1a12      	subs	r2, r2, r0
    81c6:	4692      	mov	sl, r2
    81c8:	2200      	movs	r2, #0
    81ca:	4648      	mov	r0, r9
    81cc:	680c      	ldr	r4, [r1, #0]
    81ce:	4084      	lsls	r4, r0
    81d0:	4650      	mov	r0, sl
    81d2:	4314      	orrs	r4, r2
    81d4:	601c      	str	r4, [r3, #0]
    81d6:	c904      	ldmia	r1!, {r2}
    81d8:	3304      	adds	r3, #4
    81da:	40c2      	lsrs	r2, r0
    81dc:	428f      	cmp	r7, r1
    81de:	d8f4      	bhi.n	81ca <__lshift+0x6a>
    81e0:	601a      	str	r2, [r3, #0]
    81e2:	2a00      	cmp	r2, #0
    81e4:	d001      	beq.n	81ea <__lshift+0x8a>
    81e6:	4645      	mov	r5, r8
    81e8:	3502      	adds	r5, #2
    81ea:	4663      	mov	r3, ip
    81ec:	3d01      	subs	r5, #1
    81ee:	611d      	str	r5, [r3, #16]
    81f0:	6873      	ldr	r3, [r6, #4]
    81f2:	4660      	mov	r0, ip
    81f4:	009a      	lsls	r2, r3, #2
    81f6:	465b      	mov	r3, fp
    81f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    81fa:	189b      	adds	r3, r3, r2
    81fc:	681a      	ldr	r2, [r3, #0]
    81fe:	6032      	str	r2, [r6, #0]
    8200:	601e      	str	r6, [r3, #0]
    8202:	bc3c      	pop	{r2, r3, r4, r5}
    8204:	4690      	mov	r8, r2
    8206:	4699      	mov	r9, r3
    8208:	46a2      	mov	sl, r4
    820a:	46ab      	mov	fp, r5
    820c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    820e:	c904      	ldmia	r1!, {r2}
    8210:	c304      	stmia	r3!, {r2}
    8212:	428f      	cmp	r7, r1
    8214:	d9e9      	bls.n	81ea <__lshift+0x8a>
    8216:	c904      	ldmia	r1!, {r2}
    8218:	c304      	stmia	r3!, {r2}
    821a:	428f      	cmp	r7, r1
    821c:	d8f7      	bhi.n	820e <__lshift+0xae>
    821e:	e7e4      	b.n	81ea <__lshift+0x8a>

00008220 <__mcmp>:
    8220:	690a      	ldr	r2, [r1, #16]
    8222:	6903      	ldr	r3, [r0, #16]
    8224:	b530      	push	{r4, r5, lr}
    8226:	0005      	movs	r5, r0
    8228:	1a98      	subs	r0, r3, r2
    822a:	d111      	bne.n	8250 <__mcmp+0x30>
    822c:	0092      	lsls	r2, r2, #2
    822e:	3514      	adds	r5, #20
    8230:	3114      	adds	r1, #20
    8232:	18ab      	adds	r3, r5, r2
    8234:	1889      	adds	r1, r1, r2
    8236:	e001      	b.n	823c <__mcmp+0x1c>
    8238:	429d      	cmp	r5, r3
    823a:	d209      	bcs.n	8250 <__mcmp+0x30>
    823c:	3b04      	subs	r3, #4
    823e:	3904      	subs	r1, #4
    8240:	681c      	ldr	r4, [r3, #0]
    8242:	680a      	ldr	r2, [r1, #0]
    8244:	4294      	cmp	r4, r2
    8246:	d0f7      	beq.n	8238 <__mcmp+0x18>
    8248:	4294      	cmp	r4, r2
    824a:	4180      	sbcs	r0, r0
    824c:	2201      	movs	r2, #1
    824e:	4310      	orrs	r0, r2
    8250:	bd30      	pop	{r4, r5, pc}
    8252:	46c0      	nop			; (mov r8, r8)

00008254 <__mdiff>:
    8254:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8256:	4645      	mov	r5, r8
    8258:	46de      	mov	lr, fp
    825a:	4657      	mov	r7, sl
    825c:	464e      	mov	r6, r9
    825e:	0014      	movs	r4, r2
    8260:	690b      	ldr	r3, [r1, #16]
    8262:	6912      	ldr	r2, [r2, #16]
    8264:	b5e0      	push	{r5, r6, r7, lr}
    8266:	4688      	mov	r8, r1
    8268:	1a9d      	subs	r5, r3, r2
    826a:	d11a      	bne.n	82a2 <__mdiff+0x4e>
    826c:	000f      	movs	r7, r1
    826e:	2114      	movs	r1, #20
    8270:	468c      	mov	ip, r1
    8272:	0092      	lsls	r2, r2, #2
    8274:	3714      	adds	r7, #20
    8276:	44a4      	add	ip, r4
    8278:	18bb      	adds	r3, r7, r2
    827a:	4462      	add	r2, ip
    827c:	e002      	b.n	8284 <__mdiff+0x30>
    827e:	429f      	cmp	r7, r3
    8280:	d300      	bcc.n	8284 <__mdiff+0x30>
    8282:	e070      	b.n	8366 <__mdiff+0x112>
    8284:	3b04      	subs	r3, #4
    8286:	3a04      	subs	r2, #4
    8288:	681e      	ldr	r6, [r3, #0]
    828a:	6811      	ldr	r1, [r2, #0]
    828c:	428e      	cmp	r6, r1
    828e:	d0f6      	beq.n	827e <__mdiff+0x2a>
    8290:	d300      	bcc.n	8294 <__mdiff+0x40>
    8292:	e071      	b.n	8378 <__mdiff+0x124>
    8294:	4643      	mov	r3, r8
    8296:	003e      	movs	r6, r7
    8298:	46a0      	mov	r8, r4
    829a:	4667      	mov	r7, ip
    829c:	001c      	movs	r4, r3
    829e:	2501      	movs	r5, #1
    82a0:	e006      	b.n	82b0 <__mdiff+0x5c>
    82a2:	2d00      	cmp	r5, #0
    82a4:	db6a      	blt.n	837c <__mdiff+0x128>
    82a6:	4647      	mov	r7, r8
    82a8:	0026      	movs	r6, r4
    82aa:	2500      	movs	r5, #0
    82ac:	3714      	adds	r7, #20
    82ae:	3614      	adds	r6, #20
    82b0:	4643      	mov	r3, r8
    82b2:	6859      	ldr	r1, [r3, #4]
    82b4:	f7ff fd80 	bl	7db8 <_Balloc>
    82b8:	4643      	mov	r3, r8
    82ba:	4681      	mov	r9, r0
    82bc:	60c5      	str	r5, [r0, #12]
    82be:	6918      	ldr	r0, [r3, #16]
    82c0:	464d      	mov	r5, r9
    82c2:	0083      	lsls	r3, r0, #2
    82c4:	469c      	mov	ip, r3
    82c6:	6923      	ldr	r3, [r4, #16]
    82c8:	44bc      	add	ip, r7
    82ca:	009b      	lsls	r3, r3, #2
    82cc:	4698      	mov	r8, r3
    82ce:	2300      	movs	r3, #0
    82d0:	44b0      	add	r8, r6
    82d2:	3514      	adds	r5, #20
    82d4:	469a      	mov	sl, r3
    82d6:	e000      	b.n	82da <__mdiff+0x86>
    82d8:	0027      	movs	r7, r4
    82da:	ce04      	ldmia	r6!, {r2}
    82dc:	003c      	movs	r4, r7
    82de:	4693      	mov	fp, r2
    82e0:	4659      	mov	r1, fp
    82e2:	cc08      	ldmia	r4!, {r3}
    82e4:	0409      	lsls	r1, r1, #16
    82e6:	041a      	lsls	r2, r3, #16
    82e8:	0c12      	lsrs	r2, r2, #16
    82ea:	4452      	add	r2, sl
    82ec:	0c09      	lsrs	r1, r1, #16
    82ee:	1a52      	subs	r2, r2, r1
    82f0:	0c19      	lsrs	r1, r3, #16
    82f2:	465b      	mov	r3, fp
    82f4:	0c1b      	lsrs	r3, r3, #16
    82f6:	1acb      	subs	r3, r1, r3
    82f8:	1411      	asrs	r1, r2, #16
    82fa:	185b      	adds	r3, r3, r1
    82fc:	0412      	lsls	r2, r2, #16
    82fe:	1419      	asrs	r1, r3, #16
    8300:	0c12      	lsrs	r2, r2, #16
    8302:	041b      	lsls	r3, r3, #16
    8304:	468a      	mov	sl, r1
    8306:	4313      	orrs	r3, r2
    8308:	1d29      	adds	r1, r5, #4
    830a:	602b      	str	r3, [r5, #0]
    830c:	000d      	movs	r5, r1
    830e:	45b0      	cmp	r8, r6
    8310:	d8e2      	bhi.n	82d8 <__mdiff+0x84>
    8312:	45a4      	cmp	ip, r4
    8314:	d916      	bls.n	8344 <__mdiff+0xf0>
    8316:	cc08      	ldmia	r4!, {r3}
    8318:	041a      	lsls	r2, r3, #16
    831a:	0c12      	lsrs	r2, r2, #16
    831c:	4452      	add	r2, sl
    831e:	1416      	asrs	r6, r2, #16
    8320:	0c1b      	lsrs	r3, r3, #16
    8322:	199b      	adds	r3, r3, r6
    8324:	0412      	lsls	r2, r2, #16
    8326:	141e      	asrs	r6, r3, #16
    8328:	0c12      	lsrs	r2, r2, #16
    832a:	041b      	lsls	r3, r3, #16
    832c:	4313      	orrs	r3, r2
    832e:	46b2      	mov	sl, r6
    8330:	c508      	stmia	r5!, {r3}
    8332:	45a4      	cmp	ip, r4
    8334:	d8ef      	bhi.n	8316 <__mdiff+0xc2>
    8336:	4662      	mov	r2, ip
    8338:	2403      	movs	r4, #3
    833a:	1bd2      	subs	r2, r2, r7
    833c:	3a05      	subs	r2, #5
    833e:	43a2      	bics	r2, r4
    8340:	3204      	adds	r2, #4
    8342:	1889      	adds	r1, r1, r2
    8344:	3904      	subs	r1, #4
    8346:	2b00      	cmp	r3, #0
    8348:	d104      	bne.n	8354 <__mdiff+0x100>
    834a:	3904      	subs	r1, #4
    834c:	680b      	ldr	r3, [r1, #0]
    834e:	3801      	subs	r0, #1
    8350:	2b00      	cmp	r3, #0
    8352:	d0fa      	beq.n	834a <__mdiff+0xf6>
    8354:	464b      	mov	r3, r9
    8356:	6118      	str	r0, [r3, #16]
    8358:	4648      	mov	r0, r9
    835a:	bc3c      	pop	{r2, r3, r4, r5}
    835c:	4690      	mov	r8, r2
    835e:	4699      	mov	r9, r3
    8360:	46a2      	mov	sl, r4
    8362:	46ab      	mov	fp, r5
    8364:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8366:	2100      	movs	r1, #0
    8368:	f7ff fd26 	bl	7db8 <_Balloc>
    836c:	2301      	movs	r3, #1
    836e:	6103      	str	r3, [r0, #16]
    8370:	2300      	movs	r3, #0
    8372:	4681      	mov	r9, r0
    8374:	6143      	str	r3, [r0, #20]
    8376:	e7ef      	b.n	8358 <__mdiff+0x104>
    8378:	4666      	mov	r6, ip
    837a:	e799      	b.n	82b0 <__mdiff+0x5c>
    837c:	0027      	movs	r7, r4
    837e:	000e      	movs	r6, r1
    8380:	46a0      	mov	r8, r4
    8382:	3714      	adds	r7, #20
    8384:	3614      	adds	r6, #20
    8386:	000c      	movs	r4, r1
    8388:	2501      	movs	r5, #1
    838a:	e791      	b.n	82b0 <__mdiff+0x5c>

0000838c <__d2b>:
    838c:	b5f0      	push	{r4, r5, r6, r7, lr}
    838e:	2101      	movs	r1, #1
    8390:	001c      	movs	r4, r3
    8392:	b083      	sub	sp, #12
    8394:	9e08      	ldr	r6, [sp, #32]
    8396:	0015      	movs	r5, r2
    8398:	f7ff fd0e 	bl	7db8 <_Balloc>
    839c:	0323      	lsls	r3, r4, #12
    839e:	0064      	lsls	r4, r4, #1
    83a0:	0007      	movs	r7, r0
    83a2:	0b1b      	lsrs	r3, r3, #12
    83a4:	0d64      	lsrs	r4, r4, #21
    83a6:	d002      	beq.n	83ae <__d2b+0x22>
    83a8:	2280      	movs	r2, #128	; 0x80
    83aa:	0352      	lsls	r2, r2, #13
    83ac:	4313      	orrs	r3, r2
    83ae:	9301      	str	r3, [sp, #4]
    83b0:	2d00      	cmp	r5, #0
    83b2:	d019      	beq.n	83e8 <__d2b+0x5c>
    83b4:	4668      	mov	r0, sp
    83b6:	9500      	str	r5, [sp, #0]
    83b8:	f7ff fd90 	bl	7edc <__lo0bits>
    83bc:	2800      	cmp	r0, #0
    83be:	d130      	bne.n	8422 <__d2b+0x96>
    83c0:	9b00      	ldr	r3, [sp, #0]
    83c2:	617b      	str	r3, [r7, #20]
    83c4:	9b01      	ldr	r3, [sp, #4]
    83c6:	61bb      	str	r3, [r7, #24]
    83c8:	1e5a      	subs	r2, r3, #1
    83ca:	4193      	sbcs	r3, r2
    83cc:	1c5d      	adds	r5, r3, #1
    83ce:	613d      	str	r5, [r7, #16]
    83d0:	2c00      	cmp	r4, #0
    83d2:	d014      	beq.n	83fe <__d2b+0x72>
    83d4:	4b19      	ldr	r3, [pc, #100]	; (843c <__d2b+0xb0>)
    83d6:	469c      	mov	ip, r3
    83d8:	2335      	movs	r3, #53	; 0x35
    83da:	4464      	add	r4, ip
    83dc:	1824      	adds	r4, r4, r0
    83de:	1a18      	subs	r0, r3, r0
    83e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    83e2:	6034      	str	r4, [r6, #0]
    83e4:	6018      	str	r0, [r3, #0]
    83e6:	e019      	b.n	841c <__d2b+0x90>
    83e8:	a801      	add	r0, sp, #4
    83ea:	f7ff fd77 	bl	7edc <__lo0bits>
    83ee:	9b01      	ldr	r3, [sp, #4]
    83f0:	3020      	adds	r0, #32
    83f2:	617b      	str	r3, [r7, #20]
    83f4:	2301      	movs	r3, #1
    83f6:	2501      	movs	r5, #1
    83f8:	613b      	str	r3, [r7, #16]
    83fa:	2c00      	cmp	r4, #0
    83fc:	d1ea      	bne.n	83d4 <__d2b+0x48>
    83fe:	4b10      	ldr	r3, [pc, #64]	; (8440 <__d2b+0xb4>)
    8400:	469c      	mov	ip, r3
    8402:	4b10      	ldr	r3, [pc, #64]	; (8444 <__d2b+0xb8>)
    8404:	4460      	add	r0, ip
    8406:	18eb      	adds	r3, r5, r3
    8408:	009b      	lsls	r3, r3, #2
    840a:	18fb      	adds	r3, r7, r3
    840c:	6030      	str	r0, [r6, #0]
    840e:	6958      	ldr	r0, [r3, #20]
    8410:	f7ff fd4a 	bl	7ea8 <__hi0bits>
    8414:	016b      	lsls	r3, r5, #5
    8416:	1a18      	subs	r0, r3, r0
    8418:	9b09      	ldr	r3, [sp, #36]	; 0x24
    841a:	6018      	str	r0, [r3, #0]
    841c:	0038      	movs	r0, r7
    841e:	b003      	add	sp, #12
    8420:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8422:	9b01      	ldr	r3, [sp, #4]
    8424:	2220      	movs	r2, #32
    8426:	0019      	movs	r1, r3
    8428:	1a12      	subs	r2, r2, r0
    842a:	4091      	lsls	r1, r2
    842c:	000a      	movs	r2, r1
    842e:	40c3      	lsrs	r3, r0
    8430:	9900      	ldr	r1, [sp, #0]
    8432:	9301      	str	r3, [sp, #4]
    8434:	430a      	orrs	r2, r1
    8436:	617a      	str	r2, [r7, #20]
    8438:	e7c5      	b.n	83c6 <__d2b+0x3a>
    843a:	46c0      	nop			; (mov r8, r8)
    843c:	fffffbcd 	.word	0xfffffbcd
    8440:	fffffbce 	.word	0xfffffbce
    8444:	3fffffff 	.word	0x3fffffff

00008448 <_sbrk_r>:
    8448:	2300      	movs	r3, #0
    844a:	b570      	push	{r4, r5, r6, lr}
    844c:	4c06      	ldr	r4, [pc, #24]	; (8468 <_sbrk_r+0x20>)
    844e:	0005      	movs	r5, r0
    8450:	0008      	movs	r0, r1
    8452:	6023      	str	r3, [r4, #0]
    8454:	f7f8 f904 	bl	660 <_sbrk>
    8458:	1c43      	adds	r3, r0, #1
    845a:	d000      	beq.n	845e <_sbrk_r+0x16>
    845c:	bd70      	pop	{r4, r5, r6, pc}
    845e:	6823      	ldr	r3, [r4, #0]
    8460:	2b00      	cmp	r3, #0
    8462:	d0fb      	beq.n	845c <_sbrk_r+0x14>
    8464:	602b      	str	r3, [r5, #0]
    8466:	e7f9      	b.n	845c <_sbrk_r+0x14>
    8468:	20002274 	.word	0x20002274

0000846c <strlen>:
    846c:	b510      	push	{r4, lr}
    846e:	0783      	lsls	r3, r0, #30
    8470:	d025      	beq.n	84be <strlen+0x52>
    8472:	7803      	ldrb	r3, [r0, #0]
    8474:	2b00      	cmp	r3, #0
    8476:	d024      	beq.n	84c2 <strlen+0x56>
    8478:	0003      	movs	r3, r0
    847a:	2103      	movs	r1, #3
    847c:	e002      	b.n	8484 <strlen+0x18>
    847e:	781a      	ldrb	r2, [r3, #0]
    8480:	2a00      	cmp	r2, #0
    8482:	d01a      	beq.n	84ba <strlen+0x4e>
    8484:	3301      	adds	r3, #1
    8486:	420b      	tst	r3, r1
    8488:	d1f9      	bne.n	847e <strlen+0x12>
    848a:	6819      	ldr	r1, [r3, #0]
    848c:	4a0e      	ldr	r2, [pc, #56]	; (84c8 <strlen+0x5c>)
    848e:	4c0f      	ldr	r4, [pc, #60]	; (84cc <strlen+0x60>)
    8490:	188a      	adds	r2, r1, r2
    8492:	438a      	bics	r2, r1
    8494:	4222      	tst	r2, r4
    8496:	d106      	bne.n	84a6 <strlen+0x3a>
    8498:	3304      	adds	r3, #4
    849a:	6819      	ldr	r1, [r3, #0]
    849c:	4a0a      	ldr	r2, [pc, #40]	; (84c8 <strlen+0x5c>)
    849e:	188a      	adds	r2, r1, r2
    84a0:	438a      	bics	r2, r1
    84a2:	4222      	tst	r2, r4
    84a4:	d0f8      	beq.n	8498 <strlen+0x2c>
    84a6:	001a      	movs	r2, r3
    84a8:	781b      	ldrb	r3, [r3, #0]
    84aa:	2b00      	cmp	r3, #0
    84ac:	d003      	beq.n	84b6 <strlen+0x4a>
    84ae:	3201      	adds	r2, #1
    84b0:	7811      	ldrb	r1, [r2, #0]
    84b2:	2900      	cmp	r1, #0
    84b4:	d1fb      	bne.n	84ae <strlen+0x42>
    84b6:	1a10      	subs	r0, r2, r0
    84b8:	bd10      	pop	{r4, pc}
    84ba:	1a18      	subs	r0, r3, r0
    84bc:	e7fc      	b.n	84b8 <strlen+0x4c>
    84be:	0003      	movs	r3, r0
    84c0:	e7e3      	b.n	848a <strlen+0x1e>
    84c2:	2000      	movs	r0, #0
    84c4:	e7f8      	b.n	84b8 <strlen+0x4c>
    84c6:	46c0      	nop			; (mov r8, r8)
    84c8:	fefefeff 	.word	0xfefefeff
    84cc:	80808080 	.word	0x80808080

000084d0 <__ssprint_r>:
    84d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    84d2:	4657      	mov	r7, sl
    84d4:	464e      	mov	r6, r9
    84d6:	46de      	mov	lr, fp
    84d8:	4645      	mov	r5, r8
    84da:	b5e0      	push	{r5, r6, r7, lr}
    84dc:	6893      	ldr	r3, [r2, #8]
    84de:	b083      	sub	sp, #12
    84e0:	9001      	str	r0, [sp, #4]
    84e2:	000e      	movs	r6, r1
    84e4:	4692      	mov	sl, r2
    84e6:	2b00      	cmp	r3, #0
    84e8:	d070      	beq.n	85cc <__ssprint_r+0xfc>
    84ea:	688d      	ldr	r5, [r1, #8]
    84ec:	6813      	ldr	r3, [r2, #0]
    84ee:	002c      	movs	r4, r5
    84f0:	6808      	ldr	r0, [r1, #0]
    84f2:	001d      	movs	r5, r3
    84f4:	e046      	b.n	8584 <__ssprint_r+0xb4>
    84f6:	2290      	movs	r2, #144	; 0x90
    84f8:	89b3      	ldrh	r3, [r6, #12]
    84fa:	00d2      	lsls	r2, r2, #3
    84fc:	4213      	tst	r3, r2
    84fe:	d030      	beq.n	8562 <__ssprint_r+0x92>
    8500:	6931      	ldr	r1, [r6, #16]
    8502:	1a42      	subs	r2, r0, r1
    8504:	4693      	mov	fp, r2
    8506:	6970      	ldr	r0, [r6, #20]
    8508:	0042      	lsls	r2, r0, #1
    850a:	1812      	adds	r2, r2, r0
    850c:	0fd0      	lsrs	r0, r2, #31
    850e:	1882      	adds	r2, r0, r2
    8510:	1052      	asrs	r2, r2, #1
    8512:	4690      	mov	r8, r2
    8514:	465a      	mov	r2, fp
    8516:	1c50      	adds	r0, r2, #1
    8518:	19c0      	adds	r0, r0, r7
    851a:	4642      	mov	r2, r8
    851c:	4540      	cmp	r0, r8
    851e:	d901      	bls.n	8524 <__ssprint_r+0x54>
    8520:	4680      	mov	r8, r0
    8522:	0002      	movs	r2, r0
    8524:	2080      	movs	r0, #128	; 0x80
    8526:	00c0      	lsls	r0, r0, #3
    8528:	4203      	tst	r3, r0
    852a:	d038      	beq.n	859e <__ssprint_r+0xce>
    852c:	0011      	movs	r1, r2
    852e:	9801      	ldr	r0, [sp, #4]
    8530:	f7ff f8fc 	bl	772c <_malloc_r>
    8534:	1e04      	subs	r4, r0, #0
    8536:	d054      	beq.n	85e2 <__ssprint_r+0x112>
    8538:	465a      	mov	r2, fp
    853a:	6931      	ldr	r1, [r6, #16]
    853c:	f7ff fbea 	bl	7d14 <memcpy>
    8540:	89b3      	ldrh	r3, [r6, #12]
    8542:	4a2a      	ldr	r2, [pc, #168]	; (85ec <__ssprint_r+0x11c>)
    8544:	4013      	ands	r3, r2
    8546:	2280      	movs	r2, #128	; 0x80
    8548:	4313      	orrs	r3, r2
    854a:	81b3      	strh	r3, [r6, #12]
    854c:	4643      	mov	r3, r8
    854e:	0020      	movs	r0, r4
    8550:	465a      	mov	r2, fp
    8552:	6134      	str	r4, [r6, #16]
    8554:	46b8      	mov	r8, r7
    8556:	003c      	movs	r4, r7
    8558:	4458      	add	r0, fp
    855a:	6173      	str	r3, [r6, #20]
    855c:	1a9b      	subs	r3, r3, r2
    855e:	6030      	str	r0, [r6, #0]
    8560:	60b3      	str	r3, [r6, #8]
    8562:	4642      	mov	r2, r8
    8564:	4649      	mov	r1, r9
    8566:	f000 f8ff 	bl	8768 <memmove>
    856a:	68b3      	ldr	r3, [r6, #8]
    856c:	1b1c      	subs	r4, r3, r4
    856e:	6833      	ldr	r3, [r6, #0]
    8570:	60b4      	str	r4, [r6, #8]
    8572:	4443      	add	r3, r8
    8574:	6033      	str	r3, [r6, #0]
    8576:	0018      	movs	r0, r3
    8578:	4653      	mov	r3, sl
    857a:	689b      	ldr	r3, [r3, #8]
    857c:	1bdf      	subs	r7, r3, r7
    857e:	4653      	mov	r3, sl
    8580:	609f      	str	r7, [r3, #8]
    8582:	d023      	beq.n	85cc <__ssprint_r+0xfc>
    8584:	686f      	ldr	r7, [r5, #4]
    8586:	002b      	movs	r3, r5
    8588:	3508      	adds	r5, #8
    858a:	2f00      	cmp	r7, #0
    858c:	d0fa      	beq.n	8584 <__ssprint_r+0xb4>
    858e:	681b      	ldr	r3, [r3, #0]
    8590:	46a0      	mov	r8, r4
    8592:	4699      	mov	r9, r3
    8594:	42a7      	cmp	r7, r4
    8596:	d2ae      	bcs.n	84f6 <__ssprint_r+0x26>
    8598:	003c      	movs	r4, r7
    859a:	46b8      	mov	r8, r7
    859c:	e7e1      	b.n	8562 <__ssprint_r+0x92>
    859e:	9801      	ldr	r0, [sp, #4]
    85a0:	f000 f932 	bl	8808 <_realloc_r>
    85a4:	1e04      	subs	r4, r0, #0
    85a6:	d1d1      	bne.n	854c <__ssprint_r+0x7c>
    85a8:	9c01      	ldr	r4, [sp, #4]
    85aa:	6931      	ldr	r1, [r6, #16]
    85ac:	0020      	movs	r0, r4
    85ae:	f7fe ffcd 	bl	754c <_free_r>
    85b2:	230c      	movs	r3, #12
    85b4:	6023      	str	r3, [r4, #0]
    85b6:	2240      	movs	r2, #64	; 0x40
    85b8:	89b3      	ldrh	r3, [r6, #12]
    85ba:	2001      	movs	r0, #1
    85bc:	4313      	orrs	r3, r2
    85be:	81b3      	strh	r3, [r6, #12]
    85c0:	4652      	mov	r2, sl
    85c2:	2300      	movs	r3, #0
    85c4:	4240      	negs	r0, r0
    85c6:	6093      	str	r3, [r2, #8]
    85c8:	6053      	str	r3, [r2, #4]
    85ca:	e003      	b.n	85d4 <__ssprint_r+0x104>
    85cc:	2300      	movs	r3, #0
    85ce:	4652      	mov	r2, sl
    85d0:	2000      	movs	r0, #0
    85d2:	6053      	str	r3, [r2, #4]
    85d4:	b003      	add	sp, #12
    85d6:	bc3c      	pop	{r2, r3, r4, r5}
    85d8:	4690      	mov	r8, r2
    85da:	4699      	mov	r9, r3
    85dc:	46a2      	mov	sl, r4
    85de:	46ab      	mov	fp, r5
    85e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    85e2:	230c      	movs	r3, #12
    85e4:	9a01      	ldr	r2, [sp, #4]
    85e6:	6013      	str	r3, [r2, #0]
    85e8:	e7e5      	b.n	85b6 <__ssprint_r+0xe6>
    85ea:	46c0      	nop			; (mov r8, r8)
    85ec:	fffffb7f 	.word	0xfffffb7f

000085f0 <__register_exitproc>:
    85f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    85f2:	464e      	mov	r6, r9
    85f4:	4645      	mov	r5, r8
    85f6:	46de      	mov	lr, fp
    85f8:	4657      	mov	r7, sl
    85fa:	b5e0      	push	{r5, r6, r7, lr}
    85fc:	4d36      	ldr	r5, [pc, #216]	; (86d8 <__register_exitproc+0xe8>)
    85fe:	b083      	sub	sp, #12
    8600:	0006      	movs	r6, r0
    8602:	6828      	ldr	r0, [r5, #0]
    8604:	4698      	mov	r8, r3
    8606:	000f      	movs	r7, r1
    8608:	4691      	mov	r9, r2
    860a:	f7ff f88b 	bl	7724 <__retarget_lock_acquire_recursive>
    860e:	4b33      	ldr	r3, [pc, #204]	; (86dc <__register_exitproc+0xec>)
    8610:	681c      	ldr	r4, [r3, #0]
    8612:	23a4      	movs	r3, #164	; 0xa4
    8614:	005b      	lsls	r3, r3, #1
    8616:	58e0      	ldr	r0, [r4, r3]
    8618:	2800      	cmp	r0, #0
    861a:	d052      	beq.n	86c2 <__register_exitproc+0xd2>
    861c:	6843      	ldr	r3, [r0, #4]
    861e:	2b1f      	cmp	r3, #31
    8620:	dc13      	bgt.n	864a <__register_exitproc+0x5a>
    8622:	1c5a      	adds	r2, r3, #1
    8624:	9201      	str	r2, [sp, #4]
    8626:	2e00      	cmp	r6, #0
    8628:	d128      	bne.n	867c <__register_exitproc+0x8c>
    862a:	9a01      	ldr	r2, [sp, #4]
    862c:	3302      	adds	r3, #2
    862e:	009b      	lsls	r3, r3, #2
    8630:	6042      	str	r2, [r0, #4]
    8632:	501f      	str	r7, [r3, r0]
    8634:	6828      	ldr	r0, [r5, #0]
    8636:	f7ff f877 	bl	7728 <__retarget_lock_release_recursive>
    863a:	2000      	movs	r0, #0
    863c:	b003      	add	sp, #12
    863e:	bc3c      	pop	{r2, r3, r4, r5}
    8640:	4690      	mov	r8, r2
    8642:	4699      	mov	r9, r3
    8644:	46a2      	mov	sl, r4
    8646:	46ab      	mov	fp, r5
    8648:	bdf0      	pop	{r4, r5, r6, r7, pc}
    864a:	4b25      	ldr	r3, [pc, #148]	; (86e0 <__register_exitproc+0xf0>)
    864c:	2b00      	cmp	r3, #0
    864e:	d03d      	beq.n	86cc <__register_exitproc+0xdc>
    8650:	20c8      	movs	r0, #200	; 0xc8
    8652:	0040      	lsls	r0, r0, #1
    8654:	e000      	b.n	8658 <__register_exitproc+0x68>
    8656:	bf00      	nop
    8658:	2800      	cmp	r0, #0
    865a:	d037      	beq.n	86cc <__register_exitproc+0xdc>
    865c:	22a4      	movs	r2, #164	; 0xa4
    865e:	2300      	movs	r3, #0
    8660:	0052      	lsls	r2, r2, #1
    8662:	58a1      	ldr	r1, [r4, r2]
    8664:	6043      	str	r3, [r0, #4]
    8666:	6001      	str	r1, [r0, #0]
    8668:	50a0      	str	r0, [r4, r2]
    866a:	3240      	adds	r2, #64	; 0x40
    866c:	5083      	str	r3, [r0, r2]
    866e:	3204      	adds	r2, #4
    8670:	5083      	str	r3, [r0, r2]
    8672:	3301      	adds	r3, #1
    8674:	9301      	str	r3, [sp, #4]
    8676:	2300      	movs	r3, #0
    8678:	2e00      	cmp	r6, #0
    867a:	d0d6      	beq.n	862a <__register_exitproc+0x3a>
    867c:	009a      	lsls	r2, r3, #2
    867e:	4692      	mov	sl, r2
    8680:	4482      	add	sl, r0
    8682:	464a      	mov	r2, r9
    8684:	2188      	movs	r1, #136	; 0x88
    8686:	4654      	mov	r4, sl
    8688:	5062      	str	r2, [r4, r1]
    868a:	22c4      	movs	r2, #196	; 0xc4
    868c:	0052      	lsls	r2, r2, #1
    868e:	4691      	mov	r9, r2
    8690:	4481      	add	r9, r0
    8692:	464a      	mov	r2, r9
    8694:	3987      	subs	r1, #135	; 0x87
    8696:	4099      	lsls	r1, r3
    8698:	6812      	ldr	r2, [r2, #0]
    869a:	468b      	mov	fp, r1
    869c:	430a      	orrs	r2, r1
    869e:	4694      	mov	ip, r2
    86a0:	464a      	mov	r2, r9
    86a2:	4661      	mov	r1, ip
    86a4:	6011      	str	r1, [r2, #0]
    86a6:	2284      	movs	r2, #132	; 0x84
    86a8:	4641      	mov	r1, r8
    86aa:	0052      	lsls	r2, r2, #1
    86ac:	50a1      	str	r1, [r4, r2]
    86ae:	2e02      	cmp	r6, #2
    86b0:	d1bb      	bne.n	862a <__register_exitproc+0x3a>
    86b2:	0002      	movs	r2, r0
    86b4:	465c      	mov	r4, fp
    86b6:	328d      	adds	r2, #141	; 0x8d
    86b8:	32ff      	adds	r2, #255	; 0xff
    86ba:	6811      	ldr	r1, [r2, #0]
    86bc:	430c      	orrs	r4, r1
    86be:	6014      	str	r4, [r2, #0]
    86c0:	e7b3      	b.n	862a <__register_exitproc+0x3a>
    86c2:	0020      	movs	r0, r4
    86c4:	304d      	adds	r0, #77	; 0x4d
    86c6:	30ff      	adds	r0, #255	; 0xff
    86c8:	50e0      	str	r0, [r4, r3]
    86ca:	e7a7      	b.n	861c <__register_exitproc+0x2c>
    86cc:	6828      	ldr	r0, [r5, #0]
    86ce:	f7ff f82b 	bl	7728 <__retarget_lock_release_recursive>
    86d2:	2001      	movs	r0, #1
    86d4:	4240      	negs	r0, r0
    86d6:	e7b1      	b.n	863c <__register_exitproc+0x4c>
    86d8:	20000488 	.word	0x20000488
    86dc:	0000a6a0 	.word	0x0000a6a0
    86e0:	00000000 	.word	0x00000000

000086e4 <_calloc_r>:
    86e4:	b510      	push	{r4, lr}
    86e6:	4351      	muls	r1, r2
    86e8:	f7ff f820 	bl	772c <_malloc_r>
    86ec:	1e04      	subs	r4, r0, #0
    86ee:	d01c      	beq.n	872a <_calloc_r+0x46>
    86f0:	0003      	movs	r3, r0
    86f2:	3b08      	subs	r3, #8
    86f4:	685a      	ldr	r2, [r3, #4]
    86f6:	2303      	movs	r3, #3
    86f8:	439a      	bics	r2, r3
    86fa:	3a04      	subs	r2, #4
    86fc:	2a24      	cmp	r2, #36	; 0x24
    86fe:	d816      	bhi.n	872e <_calloc_r+0x4a>
    8700:	0003      	movs	r3, r0
    8702:	2a13      	cmp	r2, #19
    8704:	d90d      	bls.n	8722 <_calloc_r+0x3e>
    8706:	2100      	movs	r1, #0
    8708:	3308      	adds	r3, #8
    870a:	6001      	str	r1, [r0, #0]
    870c:	6041      	str	r1, [r0, #4]
    870e:	2a1b      	cmp	r2, #27
    8710:	d907      	bls.n	8722 <_calloc_r+0x3e>
    8712:	6081      	str	r1, [r0, #8]
    8714:	60c1      	str	r1, [r0, #12]
    8716:	2a24      	cmp	r2, #36	; 0x24
    8718:	d10d      	bne.n	8736 <_calloc_r+0x52>
    871a:	0003      	movs	r3, r0
    871c:	6101      	str	r1, [r0, #16]
    871e:	3318      	adds	r3, #24
    8720:	6141      	str	r1, [r0, #20]
    8722:	2200      	movs	r2, #0
    8724:	601a      	str	r2, [r3, #0]
    8726:	605a      	str	r2, [r3, #4]
    8728:	609a      	str	r2, [r3, #8]
    872a:	0020      	movs	r0, r4
    872c:	bd10      	pop	{r4, pc}
    872e:	2100      	movs	r1, #0
    8730:	f7fc fab0 	bl	4c94 <memset>
    8734:	e7f9      	b.n	872a <_calloc_r+0x46>
    8736:	0003      	movs	r3, r0
    8738:	3310      	adds	r3, #16
    873a:	e7f2      	b.n	8722 <_calloc_r+0x3e>

0000873c <__ascii_mbtowc>:
    873c:	b082      	sub	sp, #8
    873e:	2900      	cmp	r1, #0
    8740:	d00a      	beq.n	8758 <__ascii_mbtowc+0x1c>
    8742:	2a00      	cmp	r2, #0
    8744:	d00b      	beq.n	875e <__ascii_mbtowc+0x22>
    8746:	2b00      	cmp	r3, #0
    8748:	d00b      	beq.n	8762 <__ascii_mbtowc+0x26>
    874a:	7813      	ldrb	r3, [r2, #0]
    874c:	600b      	str	r3, [r1, #0]
    874e:	7810      	ldrb	r0, [r2, #0]
    8750:	1e43      	subs	r3, r0, #1
    8752:	4198      	sbcs	r0, r3
    8754:	b002      	add	sp, #8
    8756:	4770      	bx	lr
    8758:	a901      	add	r1, sp, #4
    875a:	2a00      	cmp	r2, #0
    875c:	d1f3      	bne.n	8746 <__ascii_mbtowc+0xa>
    875e:	2000      	movs	r0, #0
    8760:	e7f8      	b.n	8754 <__ascii_mbtowc+0x18>
    8762:	2002      	movs	r0, #2
    8764:	4240      	negs	r0, r0
    8766:	e7f5      	b.n	8754 <__ascii_mbtowc+0x18>

00008768 <memmove>:
    8768:	b5f0      	push	{r4, r5, r6, r7, lr}
    876a:	4288      	cmp	r0, r1
    876c:	d90a      	bls.n	8784 <memmove+0x1c>
    876e:	188b      	adds	r3, r1, r2
    8770:	4298      	cmp	r0, r3
    8772:	d207      	bcs.n	8784 <memmove+0x1c>
    8774:	1e53      	subs	r3, r2, #1
    8776:	2a00      	cmp	r2, #0
    8778:	d003      	beq.n	8782 <memmove+0x1a>
    877a:	5cca      	ldrb	r2, [r1, r3]
    877c:	54c2      	strb	r2, [r0, r3]
    877e:	3b01      	subs	r3, #1
    8780:	d2fb      	bcs.n	877a <memmove+0x12>
    8782:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8784:	0005      	movs	r5, r0
    8786:	2a0f      	cmp	r2, #15
    8788:	d808      	bhi.n	879c <memmove+0x34>
    878a:	2a00      	cmp	r2, #0
    878c:	d0f9      	beq.n	8782 <memmove+0x1a>
    878e:	2300      	movs	r3, #0
    8790:	5ccc      	ldrb	r4, [r1, r3]
    8792:	54ec      	strb	r4, [r5, r3]
    8794:	3301      	adds	r3, #1
    8796:	4293      	cmp	r3, r2
    8798:	d1fa      	bne.n	8790 <memmove+0x28>
    879a:	e7f2      	b.n	8782 <memmove+0x1a>
    879c:	000b      	movs	r3, r1
    879e:	4303      	orrs	r3, r0
    87a0:	079b      	lsls	r3, r3, #30
    87a2:	d12d      	bne.n	8800 <memmove+0x98>
    87a4:	0015      	movs	r5, r2
    87a6:	000c      	movs	r4, r1
    87a8:	0003      	movs	r3, r0
    87aa:	3d10      	subs	r5, #16
    87ac:	092f      	lsrs	r7, r5, #4
    87ae:	3701      	adds	r7, #1
    87b0:	013f      	lsls	r7, r7, #4
    87b2:	19c7      	adds	r7, r0, r7
    87b4:	6826      	ldr	r6, [r4, #0]
    87b6:	601e      	str	r6, [r3, #0]
    87b8:	6866      	ldr	r6, [r4, #4]
    87ba:	605e      	str	r6, [r3, #4]
    87bc:	68a6      	ldr	r6, [r4, #8]
    87be:	609e      	str	r6, [r3, #8]
    87c0:	68e6      	ldr	r6, [r4, #12]
    87c2:	3410      	adds	r4, #16
    87c4:	60de      	str	r6, [r3, #12]
    87c6:	3310      	adds	r3, #16
    87c8:	429f      	cmp	r7, r3
    87ca:	d1f3      	bne.n	87b4 <memmove+0x4c>
    87cc:	240f      	movs	r4, #15
    87ce:	43a5      	bics	r5, r4
    87d0:	3510      	adds	r5, #16
    87d2:	1949      	adds	r1, r1, r5
    87d4:	4014      	ands	r4, r2
    87d6:	1945      	adds	r5, r0, r5
    87d8:	2c03      	cmp	r4, #3
    87da:	d913      	bls.n	8804 <memmove+0x9c>
    87dc:	2300      	movs	r3, #0
    87de:	1f27      	subs	r7, r4, #4
    87e0:	08be      	lsrs	r6, r7, #2
    87e2:	3601      	adds	r6, #1
    87e4:	00b6      	lsls	r6, r6, #2
    87e6:	58cc      	ldr	r4, [r1, r3]
    87e8:	50ec      	str	r4, [r5, r3]
    87ea:	3304      	adds	r3, #4
    87ec:	42b3      	cmp	r3, r6
    87ee:	d1fa      	bne.n	87e6 <memmove+0x7e>
    87f0:	2603      	movs	r6, #3
    87f2:	43b7      	bics	r7, r6
    87f4:	1d3c      	adds	r4, r7, #4
    87f6:	1909      	adds	r1, r1, r4
    87f8:	192d      	adds	r5, r5, r4
    87fa:	4032      	ands	r2, r6
    87fc:	d1c7      	bne.n	878e <memmove+0x26>
    87fe:	e7c0      	b.n	8782 <memmove+0x1a>
    8800:	0005      	movs	r5, r0
    8802:	e7c4      	b.n	878e <memmove+0x26>
    8804:	0022      	movs	r2, r4
    8806:	e7c0      	b.n	878a <memmove+0x22>

00008808 <_realloc_r>:
    8808:	b5f0      	push	{r4, r5, r6, r7, lr}
    880a:	464e      	mov	r6, r9
    880c:	4645      	mov	r5, r8
    880e:	46de      	mov	lr, fp
    8810:	4657      	mov	r7, sl
    8812:	b5e0      	push	{r5, r6, r7, lr}
    8814:	b085      	sub	sp, #20
    8816:	9001      	str	r0, [sp, #4]
    8818:	000e      	movs	r6, r1
    881a:	0015      	movs	r5, r2
    881c:	2900      	cmp	r1, #0
    881e:	d100      	bne.n	8822 <_realloc_r+0x1a>
    8820:	e09e      	b.n	8960 <_realloc_r+0x158>
    8822:	0037      	movs	r7, r6
    8824:	9801      	ldr	r0, [sp, #4]
    8826:	3f08      	subs	r7, #8
    8828:	f7ff fab6 	bl	7d98 <__malloc_lock>
    882c:	687a      	ldr	r2, [r7, #4]
    882e:	2303      	movs	r3, #3
    8830:	0014      	movs	r4, r2
    8832:	439c      	bics	r4, r3
    8834:	002b      	movs	r3, r5
    8836:	330b      	adds	r3, #11
    8838:	46b9      	mov	r9, r7
    883a:	2b16      	cmp	r3, #22
    883c:	d847      	bhi.n	88ce <_realloc_r+0xc6>
    883e:	2110      	movs	r1, #16
    8840:	2310      	movs	r3, #16
    8842:	4688      	mov	r8, r1
    8844:	4545      	cmp	r5, r8
    8846:	d846      	bhi.n	88d6 <_realloc_r+0xce>
    8848:	429c      	cmp	r4, r3
    884a:	da49      	bge.n	88e0 <_realloc_r+0xd8>
    884c:	49cc      	ldr	r1, [pc, #816]	; (8b80 <_realloc_r+0x378>)
    884e:	1938      	adds	r0, r7, r4
    8850:	468b      	mov	fp, r1
    8852:	6889      	ldr	r1, [r1, #8]
    8854:	9002      	str	r0, [sp, #8]
    8856:	4288      	cmp	r0, r1
    8858:	d100      	bne.n	885c <_realloc_r+0x54>
    885a:	e0c2      	b.n	89e2 <_realloc_r+0x1da>
    885c:	2101      	movs	r1, #1
    885e:	468a      	mov	sl, r1
    8860:	6840      	ldr	r0, [r0, #4]
    8862:	0001      	movs	r1, r0
    8864:	9003      	str	r0, [sp, #12]
    8866:	4650      	mov	r0, sl
    8868:	4381      	bics	r1, r0
    886a:	468c      	mov	ip, r1
    886c:	9902      	ldr	r1, [sp, #8]
    886e:	468b      	mov	fp, r1
    8870:	44dc      	add	ip, fp
    8872:	4661      	mov	r1, ip
    8874:	6849      	ldr	r1, [r1, #4]
    8876:	4201      	tst	r1, r0
    8878:	d04d      	beq.n	8916 <_realloc_r+0x10e>
    887a:	4210      	tst	r0, r2
    887c:	d100      	bne.n	8880 <_realloc_r+0x78>
    887e:	e0a2      	b.n	89c6 <_realloc_r+0x1be>
    8880:	0029      	movs	r1, r5
    8882:	9801      	ldr	r0, [sp, #4]
    8884:	f7fe ff52 	bl	772c <_malloc_r>
    8888:	1e05      	subs	r5, r0, #0
    888a:	d039      	beq.n	8900 <_realloc_r+0xf8>
    888c:	2301      	movs	r3, #1
    888e:	0002      	movs	r2, r0
    8890:	6879      	ldr	r1, [r7, #4]
    8892:	3a08      	subs	r2, #8
    8894:	4399      	bics	r1, r3
    8896:	187f      	adds	r7, r7, r1
    8898:	42ba      	cmp	r2, r7
    889a:	d100      	bne.n	889e <_realloc_r+0x96>
    889c:	e12e      	b.n	8afc <_realloc_r+0x2f4>
    889e:	1f22      	subs	r2, r4, #4
    88a0:	2a24      	cmp	r2, #36	; 0x24
    88a2:	d900      	bls.n	88a6 <_realloc_r+0x9e>
    88a4:	e114      	b.n	8ad0 <_realloc_r+0x2c8>
    88a6:	2a13      	cmp	r2, #19
    88a8:	d900      	bls.n	88ac <_realloc_r+0xa4>
    88aa:	e0e8      	b.n	8a7e <_realloc_r+0x276>
    88ac:	0003      	movs	r3, r0
    88ae:	0032      	movs	r2, r6
    88b0:	6811      	ldr	r1, [r2, #0]
    88b2:	6019      	str	r1, [r3, #0]
    88b4:	6851      	ldr	r1, [r2, #4]
    88b6:	6059      	str	r1, [r3, #4]
    88b8:	6892      	ldr	r2, [r2, #8]
    88ba:	609a      	str	r2, [r3, #8]
    88bc:	9c01      	ldr	r4, [sp, #4]
    88be:	0031      	movs	r1, r6
    88c0:	0020      	movs	r0, r4
    88c2:	f7fe fe43 	bl	754c <_free_r>
    88c6:	0020      	movs	r0, r4
    88c8:	f7ff fa6e 	bl	7da8 <__malloc_unlock>
    88cc:	e01b      	b.n	8906 <_realloc_r+0xfe>
    88ce:	2107      	movs	r1, #7
    88d0:	438b      	bics	r3, r1
    88d2:	4698      	mov	r8, r3
    88d4:	d5b6      	bpl.n	8844 <_realloc_r+0x3c>
    88d6:	230c      	movs	r3, #12
    88d8:	9a01      	ldr	r2, [sp, #4]
    88da:	2500      	movs	r5, #0
    88dc:	6013      	str	r3, [r2, #0]
    88de:	e012      	b.n	8906 <_realloc_r+0xfe>
    88e0:	0035      	movs	r5, r6
    88e2:	4643      	mov	r3, r8
    88e4:	1ae3      	subs	r3, r4, r3
    88e6:	2b0f      	cmp	r3, #15
    88e8:	d825      	bhi.n	8936 <_realloc_r+0x12e>
    88ea:	464b      	mov	r3, r9
    88ec:	2201      	movs	r2, #1
    88ee:	4649      	mov	r1, r9
    88f0:	685b      	ldr	r3, [r3, #4]
    88f2:	4013      	ands	r3, r2
    88f4:	4323      	orrs	r3, r4
    88f6:	604b      	str	r3, [r1, #4]
    88f8:	444c      	add	r4, r9
    88fa:	6863      	ldr	r3, [r4, #4]
    88fc:	431a      	orrs	r2, r3
    88fe:	6062      	str	r2, [r4, #4]
    8900:	9801      	ldr	r0, [sp, #4]
    8902:	f7ff fa51 	bl	7da8 <__malloc_unlock>
    8906:	0028      	movs	r0, r5
    8908:	b005      	add	sp, #20
    890a:	bc3c      	pop	{r2, r3, r4, r5}
    890c:	4690      	mov	r8, r2
    890e:	4699      	mov	r9, r3
    8910:	46a2      	mov	sl, r4
    8912:	46ab      	mov	fp, r5
    8914:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8916:	2103      	movs	r1, #3
    8918:	9803      	ldr	r0, [sp, #12]
    891a:	468c      	mov	ip, r1
    891c:	4388      	bics	r0, r1
    891e:	1821      	adds	r1, r4, r0
    8920:	468b      	mov	fp, r1
    8922:	4299      	cmp	r1, r3
    8924:	db21      	blt.n	896a <_realloc_r+0x162>
    8926:	9a02      	ldr	r2, [sp, #8]
    8928:	0035      	movs	r5, r6
    892a:	68d3      	ldr	r3, [r2, #12]
    892c:	6892      	ldr	r2, [r2, #8]
    892e:	465c      	mov	r4, fp
    8930:	60d3      	str	r3, [r2, #12]
    8932:	609a      	str	r2, [r3, #8]
    8934:	e7d5      	b.n	88e2 <_realloc_r+0xda>
    8936:	464a      	mov	r2, r9
    8938:	2001      	movs	r0, #1
    893a:	4646      	mov	r6, r8
    893c:	6852      	ldr	r2, [r2, #4]
    893e:	4649      	mov	r1, r9
    8940:	4002      	ands	r2, r0
    8942:	4332      	orrs	r2, r6
    8944:	464e      	mov	r6, r9
    8946:	4441      	add	r1, r8
    8948:	4303      	orrs	r3, r0
    894a:	6072      	str	r2, [r6, #4]
    894c:	444c      	add	r4, r9
    894e:	604b      	str	r3, [r1, #4]
    8950:	6863      	ldr	r3, [r4, #4]
    8952:	3108      	adds	r1, #8
    8954:	4318      	orrs	r0, r3
    8956:	6060      	str	r0, [r4, #4]
    8958:	9801      	ldr	r0, [sp, #4]
    895a:	f7fe fdf7 	bl	754c <_free_r>
    895e:	e7cf      	b.n	8900 <_realloc_r+0xf8>
    8960:	0011      	movs	r1, r2
    8962:	f7fe fee3 	bl	772c <_malloc_r>
    8966:	0005      	movs	r5, r0
    8968:	e7cd      	b.n	8906 <_realloc_r+0xfe>
    896a:	4651      	mov	r1, sl
    896c:	4211      	tst	r1, r2
    896e:	d000      	beq.n	8972 <_realloc_r+0x16a>
    8970:	e786      	b.n	8880 <_realloc_r+0x78>
    8972:	4661      	mov	r1, ip
    8974:	683a      	ldr	r2, [r7, #0]
    8976:	1aba      	subs	r2, r7, r2
    8978:	4692      	mov	sl, r2
    897a:	6852      	ldr	r2, [r2, #4]
    897c:	438a      	bics	r2, r1
    897e:	1880      	adds	r0, r0, r2
    8980:	4683      	mov	fp, r0
    8982:	44a3      	add	fp, r4
    8984:	459b      	cmp	fp, r3
    8986:	db26      	blt.n	89d6 <_realloc_r+0x1ce>
    8988:	9a02      	ldr	r2, [sp, #8]
    898a:	68d3      	ldr	r3, [r2, #12]
    898c:	6892      	ldr	r2, [r2, #8]
    898e:	60d3      	str	r3, [r2, #12]
    8990:	609a      	str	r2, [r3, #8]
    8992:	4653      	mov	r3, sl
    8994:	4652      	mov	r2, sl
    8996:	4655      	mov	r5, sl
    8998:	6892      	ldr	r2, [r2, #8]
    899a:	68db      	ldr	r3, [r3, #12]
    899c:	3508      	adds	r5, #8
    899e:	60d3      	str	r3, [r2, #12]
    89a0:	609a      	str	r2, [r3, #8]
    89a2:	1f22      	subs	r2, r4, #4
    89a4:	2a24      	cmp	r2, #36	; 0x24
    89a6:	d900      	bls.n	89aa <_realloc_r+0x1a2>
    89a8:	e096      	b.n	8ad8 <_realloc_r+0x2d0>
    89aa:	2a13      	cmp	r2, #19
    89ac:	d972      	bls.n	8a94 <_realloc_r+0x28c>
    89ae:	4653      	mov	r3, sl
    89b0:	6831      	ldr	r1, [r6, #0]
    89b2:	6099      	str	r1, [r3, #8]
    89b4:	6871      	ldr	r1, [r6, #4]
    89b6:	60d9      	str	r1, [r3, #12]
    89b8:	2a1b      	cmp	r2, #27
    89ba:	d900      	bls.n	89be <_realloc_r+0x1b6>
    89bc:	e0a4      	b.n	8b08 <_realloc_r+0x300>
    89be:	0032      	movs	r2, r6
    89c0:	3310      	adds	r3, #16
    89c2:	3208      	adds	r2, #8
    89c4:	e068      	b.n	8a98 <_realloc_r+0x290>
    89c6:	683a      	ldr	r2, [r7, #0]
    89c8:	1aba      	subs	r2, r7, r2
    89ca:	4692      	mov	sl, r2
    89cc:	4651      	mov	r1, sl
    89ce:	2203      	movs	r2, #3
    89d0:	6849      	ldr	r1, [r1, #4]
    89d2:	4391      	bics	r1, r2
    89d4:	000a      	movs	r2, r1
    89d6:	4693      	mov	fp, r2
    89d8:	44a3      	add	fp, r4
    89da:	459b      	cmp	fp, r3
    89dc:	da00      	bge.n	89e0 <_realloc_r+0x1d8>
    89de:	e74f      	b.n	8880 <_realloc_r+0x78>
    89e0:	e7d7      	b.n	8992 <_realloc_r+0x18a>
    89e2:	2003      	movs	r0, #3
    89e4:	9902      	ldr	r1, [sp, #8]
    89e6:	4684      	mov	ip, r0
    89e8:	6849      	ldr	r1, [r1, #4]
    89ea:	4381      	bics	r1, r0
    89ec:	4640      	mov	r0, r8
    89ee:	1909      	adds	r1, r1, r4
    89f0:	3010      	adds	r0, #16
    89f2:	9002      	str	r0, [sp, #8]
    89f4:	4281      	cmp	r1, r0
    89f6:	da58      	bge.n	8aaa <_realloc_r+0x2a2>
    89f8:	07d2      	lsls	r2, r2, #31
    89fa:	d500      	bpl.n	89fe <_realloc_r+0x1f6>
    89fc:	e740      	b.n	8880 <_realloc_r+0x78>
    89fe:	4660      	mov	r0, ip
    8a00:	683a      	ldr	r2, [r7, #0]
    8a02:	1aba      	subs	r2, r7, r2
    8a04:	4692      	mov	sl, r2
    8a06:	6852      	ldr	r2, [r2, #4]
    8a08:	4382      	bics	r2, r0
    8a0a:	9802      	ldr	r0, [sp, #8]
    8a0c:	1851      	adds	r1, r2, r1
    8a0e:	9103      	str	r1, [sp, #12]
    8a10:	4288      	cmp	r0, r1
    8a12:	dce0      	bgt.n	89d6 <_realloc_r+0x1ce>
    8a14:	4653      	mov	r3, sl
    8a16:	4652      	mov	r2, sl
    8a18:	4655      	mov	r5, sl
    8a1a:	6892      	ldr	r2, [r2, #8]
    8a1c:	68db      	ldr	r3, [r3, #12]
    8a1e:	3508      	adds	r5, #8
    8a20:	60d3      	str	r3, [r2, #12]
    8a22:	609a      	str	r2, [r3, #8]
    8a24:	1f22      	subs	r2, r4, #4
    8a26:	2a24      	cmp	r2, #36	; 0x24
    8a28:	d900      	bls.n	8a2c <_realloc_r+0x224>
    8a2a:	e08e      	b.n	8b4a <_realloc_r+0x342>
    8a2c:	2a13      	cmp	r2, #19
    8a2e:	d800      	bhi.n	8a32 <_realloc_r+0x22a>
    8a30:	e088      	b.n	8b44 <_realloc_r+0x33c>
    8a32:	4653      	mov	r3, sl
    8a34:	6831      	ldr	r1, [r6, #0]
    8a36:	6099      	str	r1, [r3, #8]
    8a38:	6871      	ldr	r1, [r6, #4]
    8a3a:	60d9      	str	r1, [r3, #12]
    8a3c:	2a1b      	cmp	r2, #27
    8a3e:	d900      	bls.n	8a42 <_realloc_r+0x23a>
    8a40:	e088      	b.n	8b54 <_realloc_r+0x34c>
    8a42:	0032      	movs	r2, r6
    8a44:	3310      	adds	r3, #16
    8a46:	3208      	adds	r2, #8
    8a48:	6811      	ldr	r1, [r2, #0]
    8a4a:	6019      	str	r1, [r3, #0]
    8a4c:	6851      	ldr	r1, [r2, #4]
    8a4e:	6059      	str	r1, [r3, #4]
    8a50:	6892      	ldr	r2, [r2, #8]
    8a52:	609a      	str	r2, [r3, #8]
    8a54:	4651      	mov	r1, sl
    8a56:	465b      	mov	r3, fp
    8a58:	4642      	mov	r2, r8
    8a5a:	4441      	add	r1, r8
    8a5c:	6099      	str	r1, [r3, #8]
    8a5e:	9b03      	ldr	r3, [sp, #12]
    8a60:	9801      	ldr	r0, [sp, #4]
    8a62:	1a9a      	subs	r2, r3, r2
    8a64:	2301      	movs	r3, #1
    8a66:	431a      	orrs	r2, r3
    8a68:	604a      	str	r2, [r1, #4]
    8a6a:	4652      	mov	r2, sl
    8a6c:	6852      	ldr	r2, [r2, #4]
    8a6e:	4013      	ands	r3, r2
    8a70:	4642      	mov	r2, r8
    8a72:	4313      	orrs	r3, r2
    8a74:	4652      	mov	r2, sl
    8a76:	6053      	str	r3, [r2, #4]
    8a78:	f7ff f996 	bl	7da8 <__malloc_unlock>
    8a7c:	e743      	b.n	8906 <_realloc_r+0xfe>
    8a7e:	6833      	ldr	r3, [r6, #0]
    8a80:	6003      	str	r3, [r0, #0]
    8a82:	6873      	ldr	r3, [r6, #4]
    8a84:	6043      	str	r3, [r0, #4]
    8a86:	2a1b      	cmp	r2, #27
    8a88:	d82d      	bhi.n	8ae6 <_realloc_r+0x2de>
    8a8a:	0003      	movs	r3, r0
    8a8c:	0032      	movs	r2, r6
    8a8e:	3308      	adds	r3, #8
    8a90:	3208      	adds	r2, #8
    8a92:	e70d      	b.n	88b0 <_realloc_r+0xa8>
    8a94:	002b      	movs	r3, r5
    8a96:	0032      	movs	r2, r6
    8a98:	6811      	ldr	r1, [r2, #0]
    8a9a:	465c      	mov	r4, fp
    8a9c:	6019      	str	r1, [r3, #0]
    8a9e:	6851      	ldr	r1, [r2, #4]
    8aa0:	46d1      	mov	r9, sl
    8aa2:	6059      	str	r1, [r3, #4]
    8aa4:	6892      	ldr	r2, [r2, #8]
    8aa6:	609a      	str	r2, [r3, #8]
    8aa8:	e71b      	b.n	88e2 <_realloc_r+0xda>
    8aaa:	4643      	mov	r3, r8
    8aac:	18fa      	adds	r2, r7, r3
    8aae:	465b      	mov	r3, fp
    8ab0:	609a      	str	r2, [r3, #8]
    8ab2:	4643      	mov	r3, r8
    8ab4:	1ac9      	subs	r1, r1, r3
    8ab6:	2301      	movs	r3, #1
    8ab8:	4319      	orrs	r1, r3
    8aba:	6051      	str	r1, [r2, #4]
    8abc:	687a      	ldr	r2, [r7, #4]
    8abe:	9801      	ldr	r0, [sp, #4]
    8ac0:	4013      	ands	r3, r2
    8ac2:	4642      	mov	r2, r8
    8ac4:	4313      	orrs	r3, r2
    8ac6:	607b      	str	r3, [r7, #4]
    8ac8:	f7ff f96e 	bl	7da8 <__malloc_unlock>
    8acc:	0035      	movs	r5, r6
    8ace:	e71a      	b.n	8906 <_realloc_r+0xfe>
    8ad0:	0031      	movs	r1, r6
    8ad2:	f7ff fe49 	bl	8768 <memmove>
    8ad6:	e6f1      	b.n	88bc <_realloc_r+0xb4>
    8ad8:	0031      	movs	r1, r6
    8ada:	0028      	movs	r0, r5
    8adc:	f7ff fe44 	bl	8768 <memmove>
    8ae0:	465c      	mov	r4, fp
    8ae2:	46d1      	mov	r9, sl
    8ae4:	e6fd      	b.n	88e2 <_realloc_r+0xda>
    8ae6:	68b3      	ldr	r3, [r6, #8]
    8ae8:	6083      	str	r3, [r0, #8]
    8aea:	68f3      	ldr	r3, [r6, #12]
    8aec:	60c3      	str	r3, [r0, #12]
    8aee:	2a24      	cmp	r2, #36	; 0x24
    8af0:	d015      	beq.n	8b1e <_realloc_r+0x316>
    8af2:	0003      	movs	r3, r0
    8af4:	0032      	movs	r2, r6
    8af6:	3310      	adds	r3, #16
    8af8:	3210      	adds	r2, #16
    8afa:	e6d9      	b.n	88b0 <_realloc_r+0xa8>
    8afc:	6853      	ldr	r3, [r2, #4]
    8afe:	2203      	movs	r2, #3
    8b00:	4393      	bics	r3, r2
    8b02:	18e4      	adds	r4, r4, r3
    8b04:	0035      	movs	r5, r6
    8b06:	e6ec      	b.n	88e2 <_realloc_r+0xda>
    8b08:	4653      	mov	r3, sl
    8b0a:	68b1      	ldr	r1, [r6, #8]
    8b0c:	6119      	str	r1, [r3, #16]
    8b0e:	68f1      	ldr	r1, [r6, #12]
    8b10:	6159      	str	r1, [r3, #20]
    8b12:	2a24      	cmp	r2, #36	; 0x24
    8b14:	d00c      	beq.n	8b30 <_realloc_r+0x328>
    8b16:	0032      	movs	r2, r6
    8b18:	3318      	adds	r3, #24
    8b1a:	3210      	adds	r2, #16
    8b1c:	e7bc      	b.n	8a98 <_realloc_r+0x290>
    8b1e:	6933      	ldr	r3, [r6, #16]
    8b20:	0032      	movs	r2, r6
    8b22:	6103      	str	r3, [r0, #16]
    8b24:	0003      	movs	r3, r0
    8b26:	6971      	ldr	r1, [r6, #20]
    8b28:	3318      	adds	r3, #24
    8b2a:	3218      	adds	r2, #24
    8b2c:	6141      	str	r1, [r0, #20]
    8b2e:	e6bf      	b.n	88b0 <_realloc_r+0xa8>
    8b30:	4653      	mov	r3, sl
    8b32:	6932      	ldr	r2, [r6, #16]
    8b34:	4651      	mov	r1, sl
    8b36:	619a      	str	r2, [r3, #24]
    8b38:	0032      	movs	r2, r6
    8b3a:	6970      	ldr	r0, [r6, #20]
    8b3c:	3320      	adds	r3, #32
    8b3e:	3218      	adds	r2, #24
    8b40:	61c8      	str	r0, [r1, #28]
    8b42:	e7a9      	b.n	8a98 <_realloc_r+0x290>
    8b44:	002b      	movs	r3, r5
    8b46:	0032      	movs	r2, r6
    8b48:	e77e      	b.n	8a48 <_realloc_r+0x240>
    8b4a:	0031      	movs	r1, r6
    8b4c:	0028      	movs	r0, r5
    8b4e:	f7ff fe0b 	bl	8768 <memmove>
    8b52:	e77f      	b.n	8a54 <_realloc_r+0x24c>
    8b54:	4653      	mov	r3, sl
    8b56:	68b1      	ldr	r1, [r6, #8]
    8b58:	6119      	str	r1, [r3, #16]
    8b5a:	68f1      	ldr	r1, [r6, #12]
    8b5c:	6159      	str	r1, [r3, #20]
    8b5e:	2a24      	cmp	r2, #36	; 0x24
    8b60:	d003      	beq.n	8b6a <_realloc_r+0x362>
    8b62:	0032      	movs	r2, r6
    8b64:	3318      	adds	r3, #24
    8b66:	3210      	adds	r2, #16
    8b68:	e76e      	b.n	8a48 <_realloc_r+0x240>
    8b6a:	4653      	mov	r3, sl
    8b6c:	6932      	ldr	r2, [r6, #16]
    8b6e:	4651      	mov	r1, sl
    8b70:	619a      	str	r2, [r3, #24]
    8b72:	0032      	movs	r2, r6
    8b74:	6970      	ldr	r0, [r6, #20]
    8b76:	3320      	adds	r3, #32
    8b78:	3218      	adds	r2, #24
    8b7a:	61c8      	str	r0, [r1, #28]
    8b7c:	e764      	b.n	8a48 <_realloc_r+0x240>
    8b7e:	46c0      	nop			; (mov r8, r8)
    8b80:	2000048c 	.word	0x2000048c

00008b84 <__ascii_wctomb>:
    8b84:	2900      	cmp	r1, #0
    8b86:	d004      	beq.n	8b92 <__ascii_wctomb+0xe>
    8b88:	2aff      	cmp	r2, #255	; 0xff
    8b8a:	d804      	bhi.n	8b96 <__ascii_wctomb+0x12>
    8b8c:	2001      	movs	r0, #1
    8b8e:	700a      	strb	r2, [r1, #0]
    8b90:	4770      	bx	lr
    8b92:	2000      	movs	r0, #0
    8b94:	e7fc      	b.n	8b90 <__ascii_wctomb+0xc>
    8b96:	238a      	movs	r3, #138	; 0x8a
    8b98:	6003      	str	r3, [r0, #0]
    8b9a:	2001      	movs	r0, #1
    8b9c:	4240      	negs	r0, r0
    8b9e:	e7f7      	b.n	8b90 <__ascii_wctomb+0xc>

00008ba0 <__aeabi_dadd>:
    8ba0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8ba2:	4645      	mov	r5, r8
    8ba4:	46de      	mov	lr, fp
    8ba6:	4657      	mov	r7, sl
    8ba8:	464e      	mov	r6, r9
    8baa:	030c      	lsls	r4, r1, #12
    8bac:	b5e0      	push	{r5, r6, r7, lr}
    8bae:	004e      	lsls	r6, r1, #1
    8bb0:	0fc9      	lsrs	r1, r1, #31
    8bb2:	4688      	mov	r8, r1
    8bb4:	000d      	movs	r5, r1
    8bb6:	0a61      	lsrs	r1, r4, #9
    8bb8:	0f44      	lsrs	r4, r0, #29
    8bba:	430c      	orrs	r4, r1
    8bbc:	00c7      	lsls	r7, r0, #3
    8bbe:	0319      	lsls	r1, r3, #12
    8bc0:	0058      	lsls	r0, r3, #1
    8bc2:	0fdb      	lsrs	r3, r3, #31
    8bc4:	469b      	mov	fp, r3
    8bc6:	0a4b      	lsrs	r3, r1, #9
    8bc8:	0f51      	lsrs	r1, r2, #29
    8bca:	430b      	orrs	r3, r1
    8bcc:	0d76      	lsrs	r6, r6, #21
    8bce:	0d40      	lsrs	r0, r0, #21
    8bd0:	0019      	movs	r1, r3
    8bd2:	00d2      	lsls	r2, r2, #3
    8bd4:	45d8      	cmp	r8, fp
    8bd6:	d100      	bne.n	8bda <__aeabi_dadd+0x3a>
    8bd8:	e0ae      	b.n	8d38 <__aeabi_dadd+0x198>
    8bda:	1a35      	subs	r5, r6, r0
    8bdc:	2d00      	cmp	r5, #0
    8bde:	dc00      	bgt.n	8be2 <__aeabi_dadd+0x42>
    8be0:	e0f6      	b.n	8dd0 <__aeabi_dadd+0x230>
    8be2:	2800      	cmp	r0, #0
    8be4:	d10f      	bne.n	8c06 <__aeabi_dadd+0x66>
    8be6:	4313      	orrs	r3, r2
    8be8:	d100      	bne.n	8bec <__aeabi_dadd+0x4c>
    8bea:	e0db      	b.n	8da4 <__aeabi_dadd+0x204>
    8bec:	1e6b      	subs	r3, r5, #1
    8bee:	2b00      	cmp	r3, #0
    8bf0:	d000      	beq.n	8bf4 <__aeabi_dadd+0x54>
    8bf2:	e137      	b.n	8e64 <__aeabi_dadd+0x2c4>
    8bf4:	1aba      	subs	r2, r7, r2
    8bf6:	4297      	cmp	r7, r2
    8bf8:	41bf      	sbcs	r7, r7
    8bfa:	1a64      	subs	r4, r4, r1
    8bfc:	427f      	negs	r7, r7
    8bfe:	1be4      	subs	r4, r4, r7
    8c00:	2601      	movs	r6, #1
    8c02:	0017      	movs	r7, r2
    8c04:	e024      	b.n	8c50 <__aeabi_dadd+0xb0>
    8c06:	4bc6      	ldr	r3, [pc, #792]	; (8f20 <__aeabi_dadd+0x380>)
    8c08:	429e      	cmp	r6, r3
    8c0a:	d04d      	beq.n	8ca8 <__aeabi_dadd+0x108>
    8c0c:	2380      	movs	r3, #128	; 0x80
    8c0e:	041b      	lsls	r3, r3, #16
    8c10:	4319      	orrs	r1, r3
    8c12:	2d38      	cmp	r5, #56	; 0x38
    8c14:	dd00      	ble.n	8c18 <__aeabi_dadd+0x78>
    8c16:	e107      	b.n	8e28 <__aeabi_dadd+0x288>
    8c18:	2d1f      	cmp	r5, #31
    8c1a:	dd00      	ble.n	8c1e <__aeabi_dadd+0x7e>
    8c1c:	e138      	b.n	8e90 <__aeabi_dadd+0x2f0>
    8c1e:	2020      	movs	r0, #32
    8c20:	1b43      	subs	r3, r0, r5
    8c22:	469a      	mov	sl, r3
    8c24:	000b      	movs	r3, r1
    8c26:	4650      	mov	r0, sl
    8c28:	4083      	lsls	r3, r0
    8c2a:	4699      	mov	r9, r3
    8c2c:	0013      	movs	r3, r2
    8c2e:	4648      	mov	r0, r9
    8c30:	40eb      	lsrs	r3, r5
    8c32:	4318      	orrs	r0, r3
    8c34:	0003      	movs	r3, r0
    8c36:	4650      	mov	r0, sl
    8c38:	4082      	lsls	r2, r0
    8c3a:	1e50      	subs	r0, r2, #1
    8c3c:	4182      	sbcs	r2, r0
    8c3e:	40e9      	lsrs	r1, r5
    8c40:	431a      	orrs	r2, r3
    8c42:	1aba      	subs	r2, r7, r2
    8c44:	1a61      	subs	r1, r4, r1
    8c46:	4297      	cmp	r7, r2
    8c48:	41a4      	sbcs	r4, r4
    8c4a:	0017      	movs	r7, r2
    8c4c:	4264      	negs	r4, r4
    8c4e:	1b0c      	subs	r4, r1, r4
    8c50:	0223      	lsls	r3, r4, #8
    8c52:	d562      	bpl.n	8d1a <__aeabi_dadd+0x17a>
    8c54:	0264      	lsls	r4, r4, #9
    8c56:	0a65      	lsrs	r5, r4, #9
    8c58:	2d00      	cmp	r5, #0
    8c5a:	d100      	bne.n	8c5e <__aeabi_dadd+0xbe>
    8c5c:	e0df      	b.n	8e1e <__aeabi_dadd+0x27e>
    8c5e:	0028      	movs	r0, r5
    8c60:	f7fb feaa 	bl	49b8 <__clzsi2>
    8c64:	0003      	movs	r3, r0
    8c66:	3b08      	subs	r3, #8
    8c68:	2b1f      	cmp	r3, #31
    8c6a:	dd00      	ble.n	8c6e <__aeabi_dadd+0xce>
    8c6c:	e0d2      	b.n	8e14 <__aeabi_dadd+0x274>
    8c6e:	2220      	movs	r2, #32
    8c70:	003c      	movs	r4, r7
    8c72:	1ad2      	subs	r2, r2, r3
    8c74:	409d      	lsls	r5, r3
    8c76:	40d4      	lsrs	r4, r2
    8c78:	409f      	lsls	r7, r3
    8c7a:	4325      	orrs	r5, r4
    8c7c:	429e      	cmp	r6, r3
    8c7e:	dd00      	ble.n	8c82 <__aeabi_dadd+0xe2>
    8c80:	e0c4      	b.n	8e0c <__aeabi_dadd+0x26c>
    8c82:	1b9e      	subs	r6, r3, r6
    8c84:	1c73      	adds	r3, r6, #1
    8c86:	2b1f      	cmp	r3, #31
    8c88:	dd00      	ble.n	8c8c <__aeabi_dadd+0xec>
    8c8a:	e0f1      	b.n	8e70 <__aeabi_dadd+0x2d0>
    8c8c:	2220      	movs	r2, #32
    8c8e:	0038      	movs	r0, r7
    8c90:	0029      	movs	r1, r5
    8c92:	1ad2      	subs	r2, r2, r3
    8c94:	40d8      	lsrs	r0, r3
    8c96:	4091      	lsls	r1, r2
    8c98:	4097      	lsls	r7, r2
    8c9a:	002c      	movs	r4, r5
    8c9c:	4301      	orrs	r1, r0
    8c9e:	1e78      	subs	r0, r7, #1
    8ca0:	4187      	sbcs	r7, r0
    8ca2:	40dc      	lsrs	r4, r3
    8ca4:	2600      	movs	r6, #0
    8ca6:	430f      	orrs	r7, r1
    8ca8:	077b      	lsls	r3, r7, #29
    8caa:	d009      	beq.n	8cc0 <__aeabi_dadd+0x120>
    8cac:	230f      	movs	r3, #15
    8cae:	403b      	ands	r3, r7
    8cb0:	2b04      	cmp	r3, #4
    8cb2:	d005      	beq.n	8cc0 <__aeabi_dadd+0x120>
    8cb4:	1d3b      	adds	r3, r7, #4
    8cb6:	42bb      	cmp	r3, r7
    8cb8:	41bf      	sbcs	r7, r7
    8cba:	427f      	negs	r7, r7
    8cbc:	19e4      	adds	r4, r4, r7
    8cbe:	001f      	movs	r7, r3
    8cc0:	0223      	lsls	r3, r4, #8
    8cc2:	d52c      	bpl.n	8d1e <__aeabi_dadd+0x17e>
    8cc4:	4b96      	ldr	r3, [pc, #600]	; (8f20 <__aeabi_dadd+0x380>)
    8cc6:	3601      	adds	r6, #1
    8cc8:	429e      	cmp	r6, r3
    8cca:	d100      	bne.n	8cce <__aeabi_dadd+0x12e>
    8ccc:	e09a      	b.n	8e04 <__aeabi_dadd+0x264>
    8cce:	4645      	mov	r5, r8
    8cd0:	4b94      	ldr	r3, [pc, #592]	; (8f24 <__aeabi_dadd+0x384>)
    8cd2:	08ff      	lsrs	r7, r7, #3
    8cd4:	401c      	ands	r4, r3
    8cd6:	0760      	lsls	r0, r4, #29
    8cd8:	0576      	lsls	r6, r6, #21
    8cda:	0264      	lsls	r4, r4, #9
    8cdc:	4307      	orrs	r7, r0
    8cde:	0b24      	lsrs	r4, r4, #12
    8ce0:	0d76      	lsrs	r6, r6, #21
    8ce2:	2100      	movs	r1, #0
    8ce4:	0324      	lsls	r4, r4, #12
    8ce6:	0b23      	lsrs	r3, r4, #12
    8ce8:	0d0c      	lsrs	r4, r1, #20
    8cea:	4a8f      	ldr	r2, [pc, #572]	; (8f28 <__aeabi_dadd+0x388>)
    8cec:	0524      	lsls	r4, r4, #20
    8cee:	431c      	orrs	r4, r3
    8cf0:	4014      	ands	r4, r2
    8cf2:	0533      	lsls	r3, r6, #20
    8cf4:	4323      	orrs	r3, r4
    8cf6:	005b      	lsls	r3, r3, #1
    8cf8:	07ed      	lsls	r5, r5, #31
    8cfa:	085b      	lsrs	r3, r3, #1
    8cfc:	432b      	orrs	r3, r5
    8cfe:	0038      	movs	r0, r7
    8d00:	0019      	movs	r1, r3
    8d02:	bc3c      	pop	{r2, r3, r4, r5}
    8d04:	4690      	mov	r8, r2
    8d06:	4699      	mov	r9, r3
    8d08:	46a2      	mov	sl, r4
    8d0a:	46ab      	mov	fp, r5
    8d0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8d0e:	4664      	mov	r4, ip
    8d10:	4304      	orrs	r4, r0
    8d12:	d100      	bne.n	8d16 <__aeabi_dadd+0x176>
    8d14:	e211      	b.n	913a <__aeabi_dadd+0x59a>
    8d16:	0004      	movs	r4, r0
    8d18:	4667      	mov	r7, ip
    8d1a:	077b      	lsls	r3, r7, #29
    8d1c:	d1c6      	bne.n	8cac <__aeabi_dadd+0x10c>
    8d1e:	4645      	mov	r5, r8
    8d20:	0760      	lsls	r0, r4, #29
    8d22:	08ff      	lsrs	r7, r7, #3
    8d24:	4307      	orrs	r7, r0
    8d26:	08e4      	lsrs	r4, r4, #3
    8d28:	4b7d      	ldr	r3, [pc, #500]	; (8f20 <__aeabi_dadd+0x380>)
    8d2a:	429e      	cmp	r6, r3
    8d2c:	d030      	beq.n	8d90 <__aeabi_dadd+0x1f0>
    8d2e:	0324      	lsls	r4, r4, #12
    8d30:	0576      	lsls	r6, r6, #21
    8d32:	0b24      	lsrs	r4, r4, #12
    8d34:	0d76      	lsrs	r6, r6, #21
    8d36:	e7d4      	b.n	8ce2 <__aeabi_dadd+0x142>
    8d38:	1a33      	subs	r3, r6, r0
    8d3a:	469a      	mov	sl, r3
    8d3c:	2b00      	cmp	r3, #0
    8d3e:	dd78      	ble.n	8e32 <__aeabi_dadd+0x292>
    8d40:	2800      	cmp	r0, #0
    8d42:	d031      	beq.n	8da8 <__aeabi_dadd+0x208>
    8d44:	4876      	ldr	r0, [pc, #472]	; (8f20 <__aeabi_dadd+0x380>)
    8d46:	4286      	cmp	r6, r0
    8d48:	d0ae      	beq.n	8ca8 <__aeabi_dadd+0x108>
    8d4a:	2080      	movs	r0, #128	; 0x80
    8d4c:	0400      	lsls	r0, r0, #16
    8d4e:	4301      	orrs	r1, r0
    8d50:	4653      	mov	r3, sl
    8d52:	2b38      	cmp	r3, #56	; 0x38
    8d54:	dc00      	bgt.n	8d58 <__aeabi_dadd+0x1b8>
    8d56:	e0e9      	b.n	8f2c <__aeabi_dadd+0x38c>
    8d58:	430a      	orrs	r2, r1
    8d5a:	1e51      	subs	r1, r2, #1
    8d5c:	418a      	sbcs	r2, r1
    8d5e:	2100      	movs	r1, #0
    8d60:	19d2      	adds	r2, r2, r7
    8d62:	42ba      	cmp	r2, r7
    8d64:	41bf      	sbcs	r7, r7
    8d66:	1909      	adds	r1, r1, r4
    8d68:	427c      	negs	r4, r7
    8d6a:	0017      	movs	r7, r2
    8d6c:	190c      	adds	r4, r1, r4
    8d6e:	0223      	lsls	r3, r4, #8
    8d70:	d5d3      	bpl.n	8d1a <__aeabi_dadd+0x17a>
    8d72:	4b6b      	ldr	r3, [pc, #428]	; (8f20 <__aeabi_dadd+0x380>)
    8d74:	3601      	adds	r6, #1
    8d76:	429e      	cmp	r6, r3
    8d78:	d100      	bne.n	8d7c <__aeabi_dadd+0x1dc>
    8d7a:	e13a      	b.n	8ff2 <__aeabi_dadd+0x452>
    8d7c:	2001      	movs	r0, #1
    8d7e:	4b69      	ldr	r3, [pc, #420]	; (8f24 <__aeabi_dadd+0x384>)
    8d80:	401c      	ands	r4, r3
    8d82:	087b      	lsrs	r3, r7, #1
    8d84:	4007      	ands	r7, r0
    8d86:	431f      	orrs	r7, r3
    8d88:	07e0      	lsls	r0, r4, #31
    8d8a:	4307      	orrs	r7, r0
    8d8c:	0864      	lsrs	r4, r4, #1
    8d8e:	e78b      	b.n	8ca8 <__aeabi_dadd+0x108>
    8d90:	0023      	movs	r3, r4
    8d92:	433b      	orrs	r3, r7
    8d94:	d100      	bne.n	8d98 <__aeabi_dadd+0x1f8>
    8d96:	e1cb      	b.n	9130 <__aeabi_dadd+0x590>
    8d98:	2280      	movs	r2, #128	; 0x80
    8d9a:	0312      	lsls	r2, r2, #12
    8d9c:	4314      	orrs	r4, r2
    8d9e:	0324      	lsls	r4, r4, #12
    8da0:	0b24      	lsrs	r4, r4, #12
    8da2:	e79e      	b.n	8ce2 <__aeabi_dadd+0x142>
    8da4:	002e      	movs	r6, r5
    8da6:	e77f      	b.n	8ca8 <__aeabi_dadd+0x108>
    8da8:	0008      	movs	r0, r1
    8daa:	4310      	orrs	r0, r2
    8dac:	d100      	bne.n	8db0 <__aeabi_dadd+0x210>
    8dae:	e0b4      	b.n	8f1a <__aeabi_dadd+0x37a>
    8db0:	1e58      	subs	r0, r3, #1
    8db2:	2800      	cmp	r0, #0
    8db4:	d000      	beq.n	8db8 <__aeabi_dadd+0x218>
    8db6:	e0de      	b.n	8f76 <__aeabi_dadd+0x3d6>
    8db8:	18ba      	adds	r2, r7, r2
    8dba:	42ba      	cmp	r2, r7
    8dbc:	419b      	sbcs	r3, r3
    8dbe:	1864      	adds	r4, r4, r1
    8dc0:	425b      	negs	r3, r3
    8dc2:	18e4      	adds	r4, r4, r3
    8dc4:	0017      	movs	r7, r2
    8dc6:	2601      	movs	r6, #1
    8dc8:	0223      	lsls	r3, r4, #8
    8dca:	d5a6      	bpl.n	8d1a <__aeabi_dadd+0x17a>
    8dcc:	2602      	movs	r6, #2
    8dce:	e7d5      	b.n	8d7c <__aeabi_dadd+0x1dc>
    8dd0:	2d00      	cmp	r5, #0
    8dd2:	d16e      	bne.n	8eb2 <__aeabi_dadd+0x312>
    8dd4:	1c70      	adds	r0, r6, #1
    8dd6:	0540      	lsls	r0, r0, #21
    8dd8:	0d40      	lsrs	r0, r0, #21
    8dda:	2801      	cmp	r0, #1
    8ddc:	dc00      	bgt.n	8de0 <__aeabi_dadd+0x240>
    8dde:	e0f9      	b.n	8fd4 <__aeabi_dadd+0x434>
    8de0:	1ab8      	subs	r0, r7, r2
    8de2:	4684      	mov	ip, r0
    8de4:	4287      	cmp	r7, r0
    8de6:	4180      	sbcs	r0, r0
    8de8:	1ae5      	subs	r5, r4, r3
    8dea:	4240      	negs	r0, r0
    8dec:	1a2d      	subs	r5, r5, r0
    8dee:	0228      	lsls	r0, r5, #8
    8df0:	d400      	bmi.n	8df4 <__aeabi_dadd+0x254>
    8df2:	e089      	b.n	8f08 <__aeabi_dadd+0x368>
    8df4:	1bd7      	subs	r7, r2, r7
    8df6:	42ba      	cmp	r2, r7
    8df8:	4192      	sbcs	r2, r2
    8dfa:	1b1c      	subs	r4, r3, r4
    8dfc:	4252      	negs	r2, r2
    8dfe:	1aa5      	subs	r5, r4, r2
    8e00:	46d8      	mov	r8, fp
    8e02:	e729      	b.n	8c58 <__aeabi_dadd+0xb8>
    8e04:	4645      	mov	r5, r8
    8e06:	2400      	movs	r4, #0
    8e08:	2700      	movs	r7, #0
    8e0a:	e76a      	b.n	8ce2 <__aeabi_dadd+0x142>
    8e0c:	4c45      	ldr	r4, [pc, #276]	; (8f24 <__aeabi_dadd+0x384>)
    8e0e:	1af6      	subs	r6, r6, r3
    8e10:	402c      	ands	r4, r5
    8e12:	e749      	b.n	8ca8 <__aeabi_dadd+0x108>
    8e14:	003d      	movs	r5, r7
    8e16:	3828      	subs	r0, #40	; 0x28
    8e18:	4085      	lsls	r5, r0
    8e1a:	2700      	movs	r7, #0
    8e1c:	e72e      	b.n	8c7c <__aeabi_dadd+0xdc>
    8e1e:	0038      	movs	r0, r7
    8e20:	f7fb fdca 	bl	49b8 <__clzsi2>
    8e24:	3020      	adds	r0, #32
    8e26:	e71d      	b.n	8c64 <__aeabi_dadd+0xc4>
    8e28:	430a      	orrs	r2, r1
    8e2a:	1e51      	subs	r1, r2, #1
    8e2c:	418a      	sbcs	r2, r1
    8e2e:	2100      	movs	r1, #0
    8e30:	e707      	b.n	8c42 <__aeabi_dadd+0xa2>
    8e32:	2b00      	cmp	r3, #0
    8e34:	d000      	beq.n	8e38 <__aeabi_dadd+0x298>
    8e36:	e0f3      	b.n	9020 <__aeabi_dadd+0x480>
    8e38:	1c70      	adds	r0, r6, #1
    8e3a:	0543      	lsls	r3, r0, #21
    8e3c:	0d5b      	lsrs	r3, r3, #21
    8e3e:	2b01      	cmp	r3, #1
    8e40:	dc00      	bgt.n	8e44 <__aeabi_dadd+0x2a4>
    8e42:	e0ad      	b.n	8fa0 <__aeabi_dadd+0x400>
    8e44:	4b36      	ldr	r3, [pc, #216]	; (8f20 <__aeabi_dadd+0x380>)
    8e46:	4298      	cmp	r0, r3
    8e48:	d100      	bne.n	8e4c <__aeabi_dadd+0x2ac>
    8e4a:	e0d1      	b.n	8ff0 <__aeabi_dadd+0x450>
    8e4c:	18ba      	adds	r2, r7, r2
    8e4e:	42ba      	cmp	r2, r7
    8e50:	41bf      	sbcs	r7, r7
    8e52:	1864      	adds	r4, r4, r1
    8e54:	427f      	negs	r7, r7
    8e56:	19e4      	adds	r4, r4, r7
    8e58:	07e7      	lsls	r7, r4, #31
    8e5a:	0852      	lsrs	r2, r2, #1
    8e5c:	4317      	orrs	r7, r2
    8e5e:	0864      	lsrs	r4, r4, #1
    8e60:	0006      	movs	r6, r0
    8e62:	e721      	b.n	8ca8 <__aeabi_dadd+0x108>
    8e64:	482e      	ldr	r0, [pc, #184]	; (8f20 <__aeabi_dadd+0x380>)
    8e66:	4285      	cmp	r5, r0
    8e68:	d100      	bne.n	8e6c <__aeabi_dadd+0x2cc>
    8e6a:	e093      	b.n	8f94 <__aeabi_dadd+0x3f4>
    8e6c:	001d      	movs	r5, r3
    8e6e:	e6d0      	b.n	8c12 <__aeabi_dadd+0x72>
    8e70:	0029      	movs	r1, r5
    8e72:	3e1f      	subs	r6, #31
    8e74:	40f1      	lsrs	r1, r6
    8e76:	2b20      	cmp	r3, #32
    8e78:	d100      	bne.n	8e7c <__aeabi_dadd+0x2dc>
    8e7a:	e08d      	b.n	8f98 <__aeabi_dadd+0x3f8>
    8e7c:	2240      	movs	r2, #64	; 0x40
    8e7e:	1ad3      	subs	r3, r2, r3
    8e80:	409d      	lsls	r5, r3
    8e82:	432f      	orrs	r7, r5
    8e84:	1e7d      	subs	r5, r7, #1
    8e86:	41af      	sbcs	r7, r5
    8e88:	2400      	movs	r4, #0
    8e8a:	430f      	orrs	r7, r1
    8e8c:	2600      	movs	r6, #0
    8e8e:	e744      	b.n	8d1a <__aeabi_dadd+0x17a>
    8e90:	002b      	movs	r3, r5
    8e92:	0008      	movs	r0, r1
    8e94:	3b20      	subs	r3, #32
    8e96:	40d8      	lsrs	r0, r3
    8e98:	0003      	movs	r3, r0
    8e9a:	2d20      	cmp	r5, #32
    8e9c:	d100      	bne.n	8ea0 <__aeabi_dadd+0x300>
    8e9e:	e07d      	b.n	8f9c <__aeabi_dadd+0x3fc>
    8ea0:	2040      	movs	r0, #64	; 0x40
    8ea2:	1b45      	subs	r5, r0, r5
    8ea4:	40a9      	lsls	r1, r5
    8ea6:	430a      	orrs	r2, r1
    8ea8:	1e51      	subs	r1, r2, #1
    8eaa:	418a      	sbcs	r2, r1
    8eac:	2100      	movs	r1, #0
    8eae:	431a      	orrs	r2, r3
    8eb0:	e6c7      	b.n	8c42 <__aeabi_dadd+0xa2>
    8eb2:	2e00      	cmp	r6, #0
    8eb4:	d050      	beq.n	8f58 <__aeabi_dadd+0x3b8>
    8eb6:	4e1a      	ldr	r6, [pc, #104]	; (8f20 <__aeabi_dadd+0x380>)
    8eb8:	42b0      	cmp	r0, r6
    8eba:	d057      	beq.n	8f6c <__aeabi_dadd+0x3cc>
    8ebc:	2680      	movs	r6, #128	; 0x80
    8ebe:	426b      	negs	r3, r5
    8ec0:	4699      	mov	r9, r3
    8ec2:	0436      	lsls	r6, r6, #16
    8ec4:	4334      	orrs	r4, r6
    8ec6:	464b      	mov	r3, r9
    8ec8:	2b38      	cmp	r3, #56	; 0x38
    8eca:	dd00      	ble.n	8ece <__aeabi_dadd+0x32e>
    8ecc:	e0d6      	b.n	907c <__aeabi_dadd+0x4dc>
    8ece:	2b1f      	cmp	r3, #31
    8ed0:	dd00      	ble.n	8ed4 <__aeabi_dadd+0x334>
    8ed2:	e135      	b.n	9140 <__aeabi_dadd+0x5a0>
    8ed4:	2620      	movs	r6, #32
    8ed6:	1af5      	subs	r5, r6, r3
    8ed8:	0026      	movs	r6, r4
    8eda:	40ae      	lsls	r6, r5
    8edc:	46b2      	mov	sl, r6
    8ede:	003e      	movs	r6, r7
    8ee0:	40de      	lsrs	r6, r3
    8ee2:	46ac      	mov	ip, r5
    8ee4:	0035      	movs	r5, r6
    8ee6:	4656      	mov	r6, sl
    8ee8:	432e      	orrs	r6, r5
    8eea:	4665      	mov	r5, ip
    8eec:	40af      	lsls	r7, r5
    8eee:	1e7d      	subs	r5, r7, #1
    8ef0:	41af      	sbcs	r7, r5
    8ef2:	40dc      	lsrs	r4, r3
    8ef4:	4337      	orrs	r7, r6
    8ef6:	1bd7      	subs	r7, r2, r7
    8ef8:	42ba      	cmp	r2, r7
    8efa:	4192      	sbcs	r2, r2
    8efc:	1b0c      	subs	r4, r1, r4
    8efe:	4252      	negs	r2, r2
    8f00:	1aa4      	subs	r4, r4, r2
    8f02:	0006      	movs	r6, r0
    8f04:	46d8      	mov	r8, fp
    8f06:	e6a3      	b.n	8c50 <__aeabi_dadd+0xb0>
    8f08:	4664      	mov	r4, ip
    8f0a:	4667      	mov	r7, ip
    8f0c:	432c      	orrs	r4, r5
    8f0e:	d000      	beq.n	8f12 <__aeabi_dadd+0x372>
    8f10:	e6a2      	b.n	8c58 <__aeabi_dadd+0xb8>
    8f12:	2500      	movs	r5, #0
    8f14:	2600      	movs	r6, #0
    8f16:	2700      	movs	r7, #0
    8f18:	e706      	b.n	8d28 <__aeabi_dadd+0x188>
    8f1a:	001e      	movs	r6, r3
    8f1c:	e6c4      	b.n	8ca8 <__aeabi_dadd+0x108>
    8f1e:	46c0      	nop			; (mov r8, r8)
    8f20:	000007ff 	.word	0x000007ff
    8f24:	ff7fffff 	.word	0xff7fffff
    8f28:	800fffff 	.word	0x800fffff
    8f2c:	2b1f      	cmp	r3, #31
    8f2e:	dc63      	bgt.n	8ff8 <__aeabi_dadd+0x458>
    8f30:	2020      	movs	r0, #32
    8f32:	1ac3      	subs	r3, r0, r3
    8f34:	0008      	movs	r0, r1
    8f36:	4098      	lsls	r0, r3
    8f38:	469c      	mov	ip, r3
    8f3a:	4683      	mov	fp, r0
    8f3c:	4653      	mov	r3, sl
    8f3e:	0010      	movs	r0, r2
    8f40:	40d8      	lsrs	r0, r3
    8f42:	0003      	movs	r3, r0
    8f44:	4658      	mov	r0, fp
    8f46:	4318      	orrs	r0, r3
    8f48:	4663      	mov	r3, ip
    8f4a:	409a      	lsls	r2, r3
    8f4c:	1e53      	subs	r3, r2, #1
    8f4e:	419a      	sbcs	r2, r3
    8f50:	4653      	mov	r3, sl
    8f52:	4302      	orrs	r2, r0
    8f54:	40d9      	lsrs	r1, r3
    8f56:	e703      	b.n	8d60 <__aeabi_dadd+0x1c0>
    8f58:	0026      	movs	r6, r4
    8f5a:	433e      	orrs	r6, r7
    8f5c:	d006      	beq.n	8f6c <__aeabi_dadd+0x3cc>
    8f5e:	43eb      	mvns	r3, r5
    8f60:	4699      	mov	r9, r3
    8f62:	2b00      	cmp	r3, #0
    8f64:	d0c7      	beq.n	8ef6 <__aeabi_dadd+0x356>
    8f66:	4e94      	ldr	r6, [pc, #592]	; (91b8 <__aeabi_dadd+0x618>)
    8f68:	42b0      	cmp	r0, r6
    8f6a:	d1ac      	bne.n	8ec6 <__aeabi_dadd+0x326>
    8f6c:	000c      	movs	r4, r1
    8f6e:	0017      	movs	r7, r2
    8f70:	0006      	movs	r6, r0
    8f72:	46d8      	mov	r8, fp
    8f74:	e698      	b.n	8ca8 <__aeabi_dadd+0x108>
    8f76:	4b90      	ldr	r3, [pc, #576]	; (91b8 <__aeabi_dadd+0x618>)
    8f78:	459a      	cmp	sl, r3
    8f7a:	d00b      	beq.n	8f94 <__aeabi_dadd+0x3f4>
    8f7c:	4682      	mov	sl, r0
    8f7e:	e6e7      	b.n	8d50 <__aeabi_dadd+0x1b0>
    8f80:	2800      	cmp	r0, #0
    8f82:	d000      	beq.n	8f86 <__aeabi_dadd+0x3e6>
    8f84:	e09e      	b.n	90c4 <__aeabi_dadd+0x524>
    8f86:	0018      	movs	r0, r3
    8f88:	4310      	orrs	r0, r2
    8f8a:	d100      	bne.n	8f8e <__aeabi_dadd+0x3ee>
    8f8c:	e0e9      	b.n	9162 <__aeabi_dadd+0x5c2>
    8f8e:	001c      	movs	r4, r3
    8f90:	0017      	movs	r7, r2
    8f92:	46d8      	mov	r8, fp
    8f94:	4e88      	ldr	r6, [pc, #544]	; (91b8 <__aeabi_dadd+0x618>)
    8f96:	e687      	b.n	8ca8 <__aeabi_dadd+0x108>
    8f98:	2500      	movs	r5, #0
    8f9a:	e772      	b.n	8e82 <__aeabi_dadd+0x2e2>
    8f9c:	2100      	movs	r1, #0
    8f9e:	e782      	b.n	8ea6 <__aeabi_dadd+0x306>
    8fa0:	0023      	movs	r3, r4
    8fa2:	433b      	orrs	r3, r7
    8fa4:	2e00      	cmp	r6, #0
    8fa6:	d000      	beq.n	8faa <__aeabi_dadd+0x40a>
    8fa8:	e0ab      	b.n	9102 <__aeabi_dadd+0x562>
    8faa:	2b00      	cmp	r3, #0
    8fac:	d100      	bne.n	8fb0 <__aeabi_dadd+0x410>
    8fae:	e0e7      	b.n	9180 <__aeabi_dadd+0x5e0>
    8fb0:	000b      	movs	r3, r1
    8fb2:	4313      	orrs	r3, r2
    8fb4:	d100      	bne.n	8fb8 <__aeabi_dadd+0x418>
    8fb6:	e677      	b.n	8ca8 <__aeabi_dadd+0x108>
    8fb8:	18ba      	adds	r2, r7, r2
    8fba:	42ba      	cmp	r2, r7
    8fbc:	41bf      	sbcs	r7, r7
    8fbe:	1864      	adds	r4, r4, r1
    8fc0:	427f      	negs	r7, r7
    8fc2:	19e4      	adds	r4, r4, r7
    8fc4:	0223      	lsls	r3, r4, #8
    8fc6:	d400      	bmi.n	8fca <__aeabi_dadd+0x42a>
    8fc8:	e0f2      	b.n	91b0 <__aeabi_dadd+0x610>
    8fca:	4b7c      	ldr	r3, [pc, #496]	; (91bc <__aeabi_dadd+0x61c>)
    8fcc:	0017      	movs	r7, r2
    8fce:	401c      	ands	r4, r3
    8fd0:	0006      	movs	r6, r0
    8fd2:	e669      	b.n	8ca8 <__aeabi_dadd+0x108>
    8fd4:	0020      	movs	r0, r4
    8fd6:	4338      	orrs	r0, r7
    8fd8:	2e00      	cmp	r6, #0
    8fda:	d1d1      	bne.n	8f80 <__aeabi_dadd+0x3e0>
    8fdc:	2800      	cmp	r0, #0
    8fde:	d15b      	bne.n	9098 <__aeabi_dadd+0x4f8>
    8fe0:	001c      	movs	r4, r3
    8fe2:	4314      	orrs	r4, r2
    8fe4:	d100      	bne.n	8fe8 <__aeabi_dadd+0x448>
    8fe6:	e0a8      	b.n	913a <__aeabi_dadd+0x59a>
    8fe8:	001c      	movs	r4, r3
    8fea:	0017      	movs	r7, r2
    8fec:	46d8      	mov	r8, fp
    8fee:	e65b      	b.n	8ca8 <__aeabi_dadd+0x108>
    8ff0:	0006      	movs	r6, r0
    8ff2:	2400      	movs	r4, #0
    8ff4:	2700      	movs	r7, #0
    8ff6:	e697      	b.n	8d28 <__aeabi_dadd+0x188>
    8ff8:	4650      	mov	r0, sl
    8ffa:	000b      	movs	r3, r1
    8ffc:	3820      	subs	r0, #32
    8ffe:	40c3      	lsrs	r3, r0
    9000:	4699      	mov	r9, r3
    9002:	4653      	mov	r3, sl
    9004:	2b20      	cmp	r3, #32
    9006:	d100      	bne.n	900a <__aeabi_dadd+0x46a>
    9008:	e095      	b.n	9136 <__aeabi_dadd+0x596>
    900a:	2340      	movs	r3, #64	; 0x40
    900c:	4650      	mov	r0, sl
    900e:	1a1b      	subs	r3, r3, r0
    9010:	4099      	lsls	r1, r3
    9012:	430a      	orrs	r2, r1
    9014:	1e51      	subs	r1, r2, #1
    9016:	418a      	sbcs	r2, r1
    9018:	464b      	mov	r3, r9
    901a:	2100      	movs	r1, #0
    901c:	431a      	orrs	r2, r3
    901e:	e69f      	b.n	8d60 <__aeabi_dadd+0x1c0>
    9020:	2e00      	cmp	r6, #0
    9022:	d130      	bne.n	9086 <__aeabi_dadd+0x4e6>
    9024:	0026      	movs	r6, r4
    9026:	433e      	orrs	r6, r7
    9028:	d067      	beq.n	90fa <__aeabi_dadd+0x55a>
    902a:	43db      	mvns	r3, r3
    902c:	469a      	mov	sl, r3
    902e:	2b00      	cmp	r3, #0
    9030:	d01c      	beq.n	906c <__aeabi_dadd+0x4cc>
    9032:	4e61      	ldr	r6, [pc, #388]	; (91b8 <__aeabi_dadd+0x618>)
    9034:	42b0      	cmp	r0, r6
    9036:	d060      	beq.n	90fa <__aeabi_dadd+0x55a>
    9038:	4653      	mov	r3, sl
    903a:	2b38      	cmp	r3, #56	; 0x38
    903c:	dd00      	ble.n	9040 <__aeabi_dadd+0x4a0>
    903e:	e096      	b.n	916e <__aeabi_dadd+0x5ce>
    9040:	2b1f      	cmp	r3, #31
    9042:	dd00      	ble.n	9046 <__aeabi_dadd+0x4a6>
    9044:	e09f      	b.n	9186 <__aeabi_dadd+0x5e6>
    9046:	2620      	movs	r6, #32
    9048:	1af3      	subs	r3, r6, r3
    904a:	0026      	movs	r6, r4
    904c:	409e      	lsls	r6, r3
    904e:	469c      	mov	ip, r3
    9050:	46b3      	mov	fp, r6
    9052:	4653      	mov	r3, sl
    9054:	003e      	movs	r6, r7
    9056:	40de      	lsrs	r6, r3
    9058:	0033      	movs	r3, r6
    905a:	465e      	mov	r6, fp
    905c:	431e      	orrs	r6, r3
    905e:	4663      	mov	r3, ip
    9060:	409f      	lsls	r7, r3
    9062:	1e7b      	subs	r3, r7, #1
    9064:	419f      	sbcs	r7, r3
    9066:	4653      	mov	r3, sl
    9068:	40dc      	lsrs	r4, r3
    906a:	4337      	orrs	r7, r6
    906c:	18bf      	adds	r7, r7, r2
    906e:	4297      	cmp	r7, r2
    9070:	4192      	sbcs	r2, r2
    9072:	1864      	adds	r4, r4, r1
    9074:	4252      	negs	r2, r2
    9076:	18a4      	adds	r4, r4, r2
    9078:	0006      	movs	r6, r0
    907a:	e678      	b.n	8d6e <__aeabi_dadd+0x1ce>
    907c:	4327      	orrs	r7, r4
    907e:	1e7c      	subs	r4, r7, #1
    9080:	41a7      	sbcs	r7, r4
    9082:	2400      	movs	r4, #0
    9084:	e737      	b.n	8ef6 <__aeabi_dadd+0x356>
    9086:	4e4c      	ldr	r6, [pc, #304]	; (91b8 <__aeabi_dadd+0x618>)
    9088:	42b0      	cmp	r0, r6
    908a:	d036      	beq.n	90fa <__aeabi_dadd+0x55a>
    908c:	2680      	movs	r6, #128	; 0x80
    908e:	425b      	negs	r3, r3
    9090:	0436      	lsls	r6, r6, #16
    9092:	469a      	mov	sl, r3
    9094:	4334      	orrs	r4, r6
    9096:	e7cf      	b.n	9038 <__aeabi_dadd+0x498>
    9098:	0018      	movs	r0, r3
    909a:	4310      	orrs	r0, r2
    909c:	d100      	bne.n	90a0 <__aeabi_dadd+0x500>
    909e:	e603      	b.n	8ca8 <__aeabi_dadd+0x108>
    90a0:	1ab8      	subs	r0, r7, r2
    90a2:	4684      	mov	ip, r0
    90a4:	4567      	cmp	r7, ip
    90a6:	41ad      	sbcs	r5, r5
    90a8:	1ae0      	subs	r0, r4, r3
    90aa:	426d      	negs	r5, r5
    90ac:	1b40      	subs	r0, r0, r5
    90ae:	0205      	lsls	r5, r0, #8
    90b0:	d400      	bmi.n	90b4 <__aeabi_dadd+0x514>
    90b2:	e62c      	b.n	8d0e <__aeabi_dadd+0x16e>
    90b4:	1bd7      	subs	r7, r2, r7
    90b6:	42ba      	cmp	r2, r7
    90b8:	4192      	sbcs	r2, r2
    90ba:	1b1c      	subs	r4, r3, r4
    90bc:	4252      	negs	r2, r2
    90be:	1aa4      	subs	r4, r4, r2
    90c0:	46d8      	mov	r8, fp
    90c2:	e5f1      	b.n	8ca8 <__aeabi_dadd+0x108>
    90c4:	0018      	movs	r0, r3
    90c6:	4310      	orrs	r0, r2
    90c8:	d100      	bne.n	90cc <__aeabi_dadd+0x52c>
    90ca:	e763      	b.n	8f94 <__aeabi_dadd+0x3f4>
    90cc:	08f8      	lsrs	r0, r7, #3
    90ce:	0767      	lsls	r7, r4, #29
    90d0:	4307      	orrs	r7, r0
    90d2:	2080      	movs	r0, #128	; 0x80
    90d4:	08e4      	lsrs	r4, r4, #3
    90d6:	0300      	lsls	r0, r0, #12
    90d8:	4204      	tst	r4, r0
    90da:	d008      	beq.n	90ee <__aeabi_dadd+0x54e>
    90dc:	08dd      	lsrs	r5, r3, #3
    90de:	4205      	tst	r5, r0
    90e0:	d105      	bne.n	90ee <__aeabi_dadd+0x54e>
    90e2:	08d2      	lsrs	r2, r2, #3
    90e4:	0759      	lsls	r1, r3, #29
    90e6:	4311      	orrs	r1, r2
    90e8:	000f      	movs	r7, r1
    90ea:	002c      	movs	r4, r5
    90ec:	46d8      	mov	r8, fp
    90ee:	0f7b      	lsrs	r3, r7, #29
    90f0:	00e4      	lsls	r4, r4, #3
    90f2:	431c      	orrs	r4, r3
    90f4:	00ff      	lsls	r7, r7, #3
    90f6:	4e30      	ldr	r6, [pc, #192]	; (91b8 <__aeabi_dadd+0x618>)
    90f8:	e5d6      	b.n	8ca8 <__aeabi_dadd+0x108>
    90fa:	000c      	movs	r4, r1
    90fc:	0017      	movs	r7, r2
    90fe:	0006      	movs	r6, r0
    9100:	e5d2      	b.n	8ca8 <__aeabi_dadd+0x108>
    9102:	2b00      	cmp	r3, #0
    9104:	d038      	beq.n	9178 <__aeabi_dadd+0x5d8>
    9106:	000b      	movs	r3, r1
    9108:	4313      	orrs	r3, r2
    910a:	d100      	bne.n	910e <__aeabi_dadd+0x56e>
    910c:	e742      	b.n	8f94 <__aeabi_dadd+0x3f4>
    910e:	08f8      	lsrs	r0, r7, #3
    9110:	0767      	lsls	r7, r4, #29
    9112:	4307      	orrs	r7, r0
    9114:	2080      	movs	r0, #128	; 0x80
    9116:	08e4      	lsrs	r4, r4, #3
    9118:	0300      	lsls	r0, r0, #12
    911a:	4204      	tst	r4, r0
    911c:	d0e7      	beq.n	90ee <__aeabi_dadd+0x54e>
    911e:	08cb      	lsrs	r3, r1, #3
    9120:	4203      	tst	r3, r0
    9122:	d1e4      	bne.n	90ee <__aeabi_dadd+0x54e>
    9124:	08d2      	lsrs	r2, r2, #3
    9126:	0749      	lsls	r1, r1, #29
    9128:	4311      	orrs	r1, r2
    912a:	000f      	movs	r7, r1
    912c:	001c      	movs	r4, r3
    912e:	e7de      	b.n	90ee <__aeabi_dadd+0x54e>
    9130:	2700      	movs	r7, #0
    9132:	2400      	movs	r4, #0
    9134:	e5d5      	b.n	8ce2 <__aeabi_dadd+0x142>
    9136:	2100      	movs	r1, #0
    9138:	e76b      	b.n	9012 <__aeabi_dadd+0x472>
    913a:	2500      	movs	r5, #0
    913c:	2700      	movs	r7, #0
    913e:	e5f3      	b.n	8d28 <__aeabi_dadd+0x188>
    9140:	464e      	mov	r6, r9
    9142:	0025      	movs	r5, r4
    9144:	3e20      	subs	r6, #32
    9146:	40f5      	lsrs	r5, r6
    9148:	464b      	mov	r3, r9
    914a:	002e      	movs	r6, r5
    914c:	2b20      	cmp	r3, #32
    914e:	d02d      	beq.n	91ac <__aeabi_dadd+0x60c>
    9150:	2540      	movs	r5, #64	; 0x40
    9152:	1aed      	subs	r5, r5, r3
    9154:	40ac      	lsls	r4, r5
    9156:	4327      	orrs	r7, r4
    9158:	1e7c      	subs	r4, r7, #1
    915a:	41a7      	sbcs	r7, r4
    915c:	2400      	movs	r4, #0
    915e:	4337      	orrs	r7, r6
    9160:	e6c9      	b.n	8ef6 <__aeabi_dadd+0x356>
    9162:	2480      	movs	r4, #128	; 0x80
    9164:	2500      	movs	r5, #0
    9166:	0324      	lsls	r4, r4, #12
    9168:	4e13      	ldr	r6, [pc, #76]	; (91b8 <__aeabi_dadd+0x618>)
    916a:	2700      	movs	r7, #0
    916c:	e5dc      	b.n	8d28 <__aeabi_dadd+0x188>
    916e:	4327      	orrs	r7, r4
    9170:	1e7c      	subs	r4, r7, #1
    9172:	41a7      	sbcs	r7, r4
    9174:	2400      	movs	r4, #0
    9176:	e779      	b.n	906c <__aeabi_dadd+0x4cc>
    9178:	000c      	movs	r4, r1
    917a:	0017      	movs	r7, r2
    917c:	4e0e      	ldr	r6, [pc, #56]	; (91b8 <__aeabi_dadd+0x618>)
    917e:	e593      	b.n	8ca8 <__aeabi_dadd+0x108>
    9180:	000c      	movs	r4, r1
    9182:	0017      	movs	r7, r2
    9184:	e590      	b.n	8ca8 <__aeabi_dadd+0x108>
    9186:	4656      	mov	r6, sl
    9188:	0023      	movs	r3, r4
    918a:	3e20      	subs	r6, #32
    918c:	40f3      	lsrs	r3, r6
    918e:	4699      	mov	r9, r3
    9190:	4653      	mov	r3, sl
    9192:	2b20      	cmp	r3, #32
    9194:	d00e      	beq.n	91b4 <__aeabi_dadd+0x614>
    9196:	2340      	movs	r3, #64	; 0x40
    9198:	4656      	mov	r6, sl
    919a:	1b9b      	subs	r3, r3, r6
    919c:	409c      	lsls	r4, r3
    919e:	4327      	orrs	r7, r4
    91a0:	1e7c      	subs	r4, r7, #1
    91a2:	41a7      	sbcs	r7, r4
    91a4:	464b      	mov	r3, r9
    91a6:	2400      	movs	r4, #0
    91a8:	431f      	orrs	r7, r3
    91aa:	e75f      	b.n	906c <__aeabi_dadd+0x4cc>
    91ac:	2400      	movs	r4, #0
    91ae:	e7d2      	b.n	9156 <__aeabi_dadd+0x5b6>
    91b0:	0017      	movs	r7, r2
    91b2:	e5b2      	b.n	8d1a <__aeabi_dadd+0x17a>
    91b4:	2400      	movs	r4, #0
    91b6:	e7f2      	b.n	919e <__aeabi_dadd+0x5fe>
    91b8:	000007ff 	.word	0x000007ff
    91bc:	ff7fffff 	.word	0xff7fffff

000091c0 <__aeabi_dcmpun>:
    91c0:	b570      	push	{r4, r5, r6, lr}
    91c2:	4e0e      	ldr	r6, [pc, #56]	; (91fc <__aeabi_dcmpun+0x3c>)
    91c4:	030d      	lsls	r5, r1, #12
    91c6:	031c      	lsls	r4, r3, #12
    91c8:	0049      	lsls	r1, r1, #1
    91ca:	005b      	lsls	r3, r3, #1
    91cc:	0b2d      	lsrs	r5, r5, #12
    91ce:	0d49      	lsrs	r1, r1, #21
    91d0:	0b24      	lsrs	r4, r4, #12
    91d2:	0d5b      	lsrs	r3, r3, #21
    91d4:	42b1      	cmp	r1, r6
    91d6:	d004      	beq.n	91e2 <__aeabi_dcmpun+0x22>
    91d8:	4908      	ldr	r1, [pc, #32]	; (91fc <__aeabi_dcmpun+0x3c>)
    91da:	2000      	movs	r0, #0
    91dc:	428b      	cmp	r3, r1
    91de:	d008      	beq.n	91f2 <__aeabi_dcmpun+0x32>
    91e0:	bd70      	pop	{r4, r5, r6, pc}
    91e2:	4305      	orrs	r5, r0
    91e4:	2001      	movs	r0, #1
    91e6:	2d00      	cmp	r5, #0
    91e8:	d1fa      	bne.n	91e0 <__aeabi_dcmpun+0x20>
    91ea:	4904      	ldr	r1, [pc, #16]	; (91fc <__aeabi_dcmpun+0x3c>)
    91ec:	2000      	movs	r0, #0
    91ee:	428b      	cmp	r3, r1
    91f0:	d1f6      	bne.n	91e0 <__aeabi_dcmpun+0x20>
    91f2:	4314      	orrs	r4, r2
    91f4:	0020      	movs	r0, r4
    91f6:	1e44      	subs	r4, r0, #1
    91f8:	41a0      	sbcs	r0, r4
    91fa:	e7f1      	b.n	91e0 <__aeabi_dcmpun+0x20>
    91fc:	000007ff 	.word	0x000007ff
    9200:	682f2e2e 	.word	0x682f2e2e
    9204:	732f6c61 	.word	0x732f6c61
    9208:	682f6372 	.word	0x682f6372
    920c:	695f6c61 	.word	0x695f6c61
    9210:	6d5f6332 	.word	0x6d5f6332
    9214:	6e79735f 	.word	0x6e79735f
    9218:	00632e63 	.word	0x00632e63
    921c:	682f2e2e 	.word	0x682f2e2e
    9220:	732f6c61 	.word	0x732f6c61
    9224:	682f6372 	.word	0x682f6372
    9228:	695f6c61 	.word	0x695f6c61
    922c:	00632e6f 	.word	0x00632e6f
    9230:	682f2e2e 	.word	0x682f2e2e
    9234:	732f6c61 	.word	0x732f6c61
    9238:	682f6372 	.word	0x682f6372
    923c:	735f6c61 	.word	0x735f6c61
    9240:	6d5f6970 	.word	0x6d5f6970
    9244:	6e79735f 	.word	0x6e79735f
    9248:	00632e63 	.word	0x00632e63
    924c:	682f2e2e 	.word	0x682f2e2e
    9250:	652f6c70 	.word	0x652f6c70
    9254:	682f6369 	.word	0x682f6369
    9258:	655f6c70 	.word	0x655f6c70
    925c:	632e6369 	.word	0x632e6369
    9260:	00000000 	.word	0x00000000

00009264 <_map>:
    9264:	00000007 00000007 0000000d 00000019     ................
    9274:	682f2e2e 732f6c70 6f637265 70682f6d     ../hpl/sercom/hp
    9284:	65735f6c 6d6f6372 0000632e              l_sercom.c..

00009290 <_i2cms>:
    9290:	00000003 00200014 00000100 000000ea     ...... .........
    92a0:	000000d7 02dc6c00                       .....l..

000092a8 <sercomspi_regs>:
    92a8:	0020000c 00020000 00000000 000000fe     .. .............
    92b8:	000017b0 00001786 00001786 000017a4     ................
    92c8:	000017c8 000017d2 00001786 00001786     ................
    92d8:	00001786 00001786 00001786 00001786     ................
    92e8:	000017ba 00001786 00001786 00001786     ................
    92f8:	00001786 00001786 00001786 00001786     ................
    9308:	000017e2 0000179a 00001786 00001786     ................
    9318:	00001786 00001786 00001786 00001786     ................
    9328:	00001786 00001786 00001786 00001786     ................
    9338:	00001786 00001786 00001786 00001786     ................
    9348:	00001786 00001786 00001786 00001786     ................
    9358:	00001786 00001786 00001786 00001786     ................
    9368:	00001786 00001786 00001786 00001786     ................
    9378:	00001786 00001786 00001786 00001786     ................
    9388:	00001786 00001786 00001786 0000178a     ................

00009398 <u8g2_font_5x8_tf>:
    9398:	020200bf 04030403 00080504 06ff06ff     ................
    93a8:	021a0100 20960631 037e0005 63310721     ....1.. ..~.!.1c
    93b8:	22005233 936e9b07 0d2300ac a657623d     3R."..n...#.=bW.
    93c8:	54355434 24001299 9b623d0a da53bd57     4T5T...$.=b.W.S.
    93d8:	ab082511 67531366 3c0a2600 b3531762     .%..f.Sg.&.<b.S.
    93e8:	2700a66a 336f1905 62b20728 29019aa7     j..'..o3(..b...)
    93f8:	1362b208 2a00a553 13622c0a c5491a93     ..b.S..*.,b...I.
    9408:	2d0a2b00 1c519b62 2c08a332 a75e9b07     .+.-b.Q.2..,..^.
    9418:	062d004a 02336a0c 5e9b072e 2f025697     J.-..j3....^.V./
    9428:	5f623408 300033b6 5762b308 31002ab9     .4b_.3.0..bW.*.1
    9438:	9762b307 0a326b64 62a76234 008f2a4e     ..b.dk2.4b.bN*..
    9448:	62340a33 48d46233 0a340526 551b6234     3.4b3b.H&.4.4b.U
    9458:	004e6235 62340a35 3246f433 0a360029     5bN.5.4b3.F2).6.
    9468:	f2a76234 0029328a 62340a37 31cc7233     4b...2).7.4b3r.1
    9478:	0a380047 62a76234 05265152 62340a39     G.8.4b.bRQ&.9.4b
    9488:	3b4ca2a7 073a0029 e23362aa b3083b08     ..L;).:..b3..;..
    9498:	5523675e b3073c02 5cca9b62 661c083d     ^g#U.<..b..\=..f
    94a8:	011a3233 62b3083e 0254cb93 62b3093f     32..>..b..T.?..b
    94b8:	26194cd7 450c4000 5ca32b5e 43592549     .L.&.@.E^+.\I%YC
    94c8:	34094105 1ca2a762 0a420653 e2b36234     .A.4b...S.B.4b..
    94d8:	048e5148 62340943 932ea2a7 34094402     HQ..C.4b.....D.4
    94e8:	73a2b362 09450024 f4336234 460479ca     b..s$.E.4b3..y.F
    94f8:	33623409 0035caf4 62340a47 334ea2a7     .4b3..5.G.4b..N3
    9508:	09480029 e5136234 49006698 b362b307     ).H.4b...f.I..b.
    9518:	094a6b62 73376234 4b004655 13623409     bkJ.4b7sUF.K.4b.
    9528:	33a99255 6234084c 0047bb93 6234094d     U..3L.4b..G.M.4b
    9538:	cd11c713 34094e00 58d71362 094f0067     .....N.4b..Xg.O.
    9548:	a2a76234 50002933 b362340a 67291ca2     4b..3).P.4b...)g
    9558:	3c095100 5ca2a75e 0a52146e a2b36234     .Q.<^..\n.R.4b..
    9568:	00ca291c 62340a53 a8ca62a7 08540a4c     .)..S.4b.b..L.T.
    9578:	62b362b3 08550017 3d136234 09560293     .b.b..U.4b.=..V.
    9588:	9d136234 57002a49 13623409 00c471cd     4b..I*.W.4b..q..
    9598:	62340a58 2a926513 0b5900ca 75936235     X.4b.e.*..Y.5b.u
    95a8:	28ca33aa 34095a02 6c723362 075b008f     .3.(.Z.4b3rl..[.
    95b8:	623362b3 340a5c73 ca339362 5d1ca328     .b3bs\.4b.3.(..]
    95c8:	3362b307 065e239b 00d77293 5e0c065f     ..b3.#^..r.._..^
    95d8:	06600233 03137292 62240861 034ca237     3.`..r..a.$b7.L.
    95e8:	62340a62 728af393 07630024 b33762a3     b.4b...r$.c..b7.
    95f8:	34096400 288d5f62 086500d3 d2a76224     .d.4b_.(..e.$b..
    9608:	09660ac8 955b6234 67004733 a75e2c09     ..f.4b[.3G.g.,^.
    9618:	0149da62 62340968 668af393 b3086900     b.I.h.4b...f.i..
    9628:	ac919762 bb096a06 a9619b5e 096b002a     b....j..^.a.*.k.
    9638:	cb936234 6c0ca291 2362b307 096d06bb     4b.....l..b#..m.
    9648:	5aa36225 6e02a92a b3622407 086f19a2     %b.Z*..n.$b...o.
    9658:	a2a76224 09700a4c e2b35e2c 71033948     $b..L.p.,^..H9.q
    9668:	375e2c08 7205da62 93622408 73019d92     .,^7b..r.$b....s
    9678:	3762a307 0a7402f2 e3976234 002629cc     ..b7..t.4b...)&.
    9688:	62240775 7634cd13 9362a307 09770aac     u.$b..4v..b...w.
    9698:	55936225 78005d52 13622408 79315493     %b.UR].x.$b..T1y
    96a8:	135e2c0a 29311a65 24087a00 39623362     .,^.e.1).z.$b3b9
    96b8:	3c0b7b02 4a32ab62 048cc51a 6331057c     .{.<b.2J....|.1c
    96c8:	3c0c7d73 cc51a362 24946548 14077e00     s}.<b.Q.He.$.~..
    96d8:	02549772 7e0005a0 3107a103 00469363     r.T....~...1c.F.
    96e8:	5e3409a2 ce6a471b 340aa304 988d5b62     ..4^.Gj....4b[..
    96f8:	a4004a93 93622d0a e5714cd3 350ba500     .J...-b..Lq....5
    9708:	35539362 02321c64 633906a6 0aa706b3     b.S5d.2...9c....
    9718:	f237623c 048f698a 768b06a8 0aa90293     <b7..i.....v....
    9728:	aab76235 00b55539 6aab07aa ab1e92b7     5b..9U.....j....
    9738:	97661c08 ac014c54 33629b06 8b05ad0b     ..f.TL....b3....
    9748:	09ae336a a1f76235 af005a96 33768b05     j3..5b...Z....v3
    9758:	6e9b06b0 08b105d7 569762ab 07b20346     ...n.....b.VF...
    9768:	4cd76aab ab07b369 002fa36a 729206b4     .j.Li...j./....r
    9778:	09b500a7 cd135e2c b6003291 3762350c     ....,^...2...5b7
    9788:	a9291a46 b70a6298 136b0905 5e9206b8     F.)..b....k....^
    9798:	07b900a7 64976aab ab07ba35 068dd76a     .....j.d5...j...
    97a8:	661c08bb 09526293 623c0abc 8d515b93     ...f.bR...<b.[Q.
    97b8:	0abd0098 ab93623c 038c72a4 623c0cbe     ....<b...r....<b
    97c8:	48cc5193 00262355 62b309bf a98a6197     .Q.HU#&....b.a..
    97d8:	3c0ac002 54519762 c1194c71 5b623c09     ...<b.QTqL...<b[
    97e8:	0ca638ab 623c0ac2 715262a7 0ac3194c     .8....<b.bRqL...
    97f8:	5497623c 194c7154 623c0ac4 71543313     <b.TTqL...<b.3Tq
    9808:	0ac5194c 62a7623c 194c7152 623409c6     L...<b.bRqL...4b
    9818:	a86b5237 3c0ac74a 2ea2a75e c8008c93     7Rk.J..<^.......
    9828:	97623c0a e57a1a51 3c09c911 bd0e5b62     .<b.Q.z....<b[..
    9838:	0aca08f2 e2a7623c 008f2bd8 623c0acb     ....<b...+....<b
    9848:	7a1a3313 09cc11e5 d39362bb cd00d58a     .3.z.....b......
    9858:	9b62bb09 00d58ad2 62bb09ce ab148d57     ..b........bW...
    9868:	bb09cf01 8af29362 0bd000d5 e3376235     ....b.......5b7.
    9878:	698a6548 3c0ad101 b9549762 d20194d4     He.i...<b.T.....
    9888:	97623c0a 4cd15451 3c09d30a 68ab5b62     .<b.QT.L...<b[.h
    9898:	0ad40526 62a7623c 0a4cd152 623c0ad5     &...<b.bR.L...<b
    98a8:	d1545497 0ad60a4c 3313623c 0a4cd154     .TT.L...<b.3T.L.
    98b8:	629b06d7 09d83a93 d2376234 d9048e91     ...b.:..4b7.....
    98c8:	97623c09 0a4ce951 623c08da 052674db     .<b.Q.L...<b.t&.
    98d8:	623c09db 5267a2a7 3c0adc00 8a331362     ..<b..gR...<b.3.
    98e8:	dd00a4ce 5f623d0b 946754e6 0ade0451     .....=b_.Tg.Q...
    98f8:	57936234 00652394 623409df 54eaa2a7     4b.W.#e...4b...T
    9908:	3c0ae009 c6519762 e134ca23 5b623c09     ...<b.Q.#.4..<b[
    9918:	34ca2353 623c0ae2 a238655b 0ae3034c     S#.4..<b[e8.L...
    9928:	5497623c 34ca23c6 623409e4 6511c357     <b.T.#.4..4bW..e
    9938:	3c0ae51a 9262a762 e634ca23 33622509     ...<b.b.#.4..%b3
    9948:	004732a2 5eab08e7 004ab337 623c0be8     .2G....^7.J...<b
    9958:	2ac65197 e900ac8d 5b623c0a ac8d2a53     .Q.*.....<b[S*..
    9968:	3c0bea00 8662a762 00ac8d2a 62340aeb     ...<b.b.*.....4b
    9978:	46954357 09ec0056 339362bb ed00d592     WC.FV....b.3....
    9988:	9b62bb09 00d59232 62bb08ee 00d596d7     ..b.2......b....
    9998:	62b308ef 06acb293 623c0cf0 51956293     ...b......<b.b.Q
    99a8:	0029311a 623c0af1 2b865497 0bf2019a     .1)...<b.T.+....
    99b8:	5197623c a4ca2ac6 3c0af300 2a535b62     <b.Q.*.....<b[S*
    99c8:	f400a4ca a7623c0b ca2a8662 0bf500a4     .....<b.b.*.....
    99d8:	5497623c a4ca2ac6 340af600 54331362     <b.T.*.....4b.3T
    99e8:	f7052651 9762ab08 f80946d1 37622409     Q&....b..F...$b7
    99f8:	012348d2 623c0af9 d1865197 09fa034c     .H#...<b.Q..L...
    9a08:	e35b623c fb01a668 a7623c0a 4cd14662     <b[.h....<b.bF.L
    9a18:	3409fc03 8a331362 0bfd1a66 e35b5e44     ...4b.3.f...D^[.
    9a28:	4988d328 3c0afe01 8af3935e ff0ce523     (..I...<^...#...
    9a38:	135e3c0c 8d328a33 00001498 ff040000     .<^.3.2.........
    9a48:	000000ff                                ....

00009a4c <u8g2_font_ncenB14_tr>:
    9a4c:	0303005f 05040505 fd141606 0efc0efc     _...............
    9a5c:	056d02fe 200b08ba 2c600006 c40f2101     ..m.... ..`,.!..
    9a6c:	39233425 65222c1c 012221c9 64a50922     %4#9.,"e.!"."..d
    9a7c:	45e12146 8b1b2300 11296461 d912c44b     F!.E.#..ad).K...
    9a8c:	49987261 61d912c4 c4499872 0844b112     ar.I...ar.I...D.
    9a9c:	a6492124 8487195b 2948926b 82550a52     $!I.[...k.H)R.U.
    9aac:	10e843b6 a14a4633 9112a84a 2090e395     .C..3FJ.J...... 
    9abc:	ee292500 93357be1 5941268a 450b2848     .%)..{5..&AYH(.E
    9acc:	28a91165 c687247d 345122c6 648a0b24     e..(}$..."Q4$..d
    9adc:	a62c98c1 e34e8c14 24260030 4b8c25d0     ..,...N.0.&$.%.K
    9aec:	20e48a07 93241c99 58722683 d9ab3a1d     ... ..$..&rX.:..
    9afc:	70521384 a7521d56 7421dab4 0727011b     ..RpV.R...!t..'.
    9b0c:	712e64a2 05112818 122733a2 9923448d     .d.q.(...3'..D#.
    9b1c:	99b266de 10290050 2133a205 3364cd94     .f..P.)...3!..d3
    9b2c:	46891a7d 102a006a 3545e0e7 44449a4a     }..Fj.*...E5J.DD
    9b3c:	94644923 152b0234 295c214a 7221c887     #Id.4.+.J!\)..!r
    9b4c:	3070f088 887221ca 2c04221c 2b60e40b     ..p0.!r..".,..`+
    9b5c:	46443923 072d00d9 f134e065 840a2e10     #9DF..-.e.4.....
    9b6c:	39232c20 2f002444 3c21c60f 0c5418a9      ,#9D$./..!<..T.
    9b7c:	8315062a 1330008a 375c25c9 92648c9c     *.....0..%\7..d.
    9b8c:	c89b7f99 0ce19344 c70b3100 1c275c29     ....D....1..)\'.
    9b9c:	0e9ff715 25c91532 4d13475c 6c89b666     ....2..%\G.Mf..l
    9bac:	a74f1d3c a1c3d562 c9173300 13475c25     <.O.b....3..%\G.
    9bbc:	89b6664d 839c2c6c db9913e4 012b3444     Mf..l,......D4+.
    9bcc:	25c91634 4f171f5c d0b32319 4d8a3628     4..%\..O.#..(6.M
    9bdc:	74839382 18352d3c 735c25c9 90e29c88     ...t<-5..%\s....
    9bec:	b10e2438 89e3e6c5 9a226dcc 16360095     8$.......m"...6.
    9bfc:	575c25c9 24d9915a b288c9e3 9b226de6     .%\WZ..$.....m".
    9c0c:	0033848c 25c91137 9e50f15c b962e58a     ..3.7..%\.P...b.
    9c1c:	11bc7578 c9153800 94375c25 e2d4a449     xu...8..%\7.I...
    9c2c:	85346445 4d6a558e 17390346 375c25c9     Ed4..UjMF.9..%\7
    9c3c:	92664d14 84c9b799 644f1934 5468c936     .Mf.....4.Od6.hT
    9c4c:	240d3a03 39233425 4392c444 0f3b0244     .:.$%4#9D..CD.;.
    9c5c:	23336584 92c44439 0d946443 4a113c00     .e3#9D..Cd...<.J
    9c6c:	110f5c21 21d33913 421d0874 0b3d0887     !\...9.!t..B..=.
    9c7c:	f15ca4c9 1c3c4740 4a123e08 87215c21     ..\.@G<..>.J!\!.
    9c8c:	087421d0 7226421d 3f004396 5421c912     .!t..B&r.C.?..!T
    9c9c:	6cdd1257 7758d913 2c953124 cf274004     W..l..Xw$1.,.@'.
    9cac:	1e7b8421 90a0e4cb 291124ac 92226491     !.{......$.).d".
    9cbc:	8991444c 89226a24 9a2444d2 d8a0e510     LD..$j"..D$.....
    9ccc:	02087c58 1dce2041 cb071f74 1d207381     X|..A ..t....s .
    9cdc:	42839914 1e6c4872 07a7471b 1f187861     ...BrHl..G..ax..
    9cec:	02d427c9 21cc1e42 cd987174 70d1c348     .'..B..!tq..H..p
    9cfc:	66cd1c34 74d2e087 274c9d32 7270c9d3     4..f...t2.L'..pr
    9d0c:	1d430190 597421cc 258cb10a 0e843ae3     ..C..!tY...%.:..
    9d1c:	a0e683a1 890e6839 18e323cc 44035a4d     ....9h...#..MZ.D
    9d2c:	8421ce1f 690e9871 3478d1e3 f327cc9f     ..!.q..i..x4..'.
    9d3c:	9f327cc9 d1e327cc 1d243478 1f450086     .|2..'..x4$...E.
    9d4c:	716c21cb 53270ca0 99142cc9 e1232285     .!lq..'S.,..."#.
    9d5c:	059c2471 38c8a167 0f0c9532 cb1e4607     q$..g..82....F..
    9d6c:	a0716c21 c953270c 8599142c 71e12322     !lq..'S.,..."#.q
    9d7c:	67059c24 0e6439c1 47015b99 7c21cd21     $..g.9d..[.G!.!|
    9d8c:	48918a59 3258d163 90e64487 87361cc8     Y..Hc.X2.D....6.
    9d9c:	d1e10f4d 919d3474 0008a5a8 21ce1e48     M...t4......H..!
    9dac:	8cac5184 78d1e347 478d1e34 3478d287     .Q..G..x4..G..x4
    9dbc:	e3478d1e 9e3478d1 0a490b14 514c25c5     ..G..x4...I..%LQ
    9dcc:	297fed19 1dca134a ef9e5b64 9a426c93     ...)J...d[...lB.
    9ddc:	91c22690 4b044868 8421ce1e 854d2b51     .&..hH.K..!.Q+M.
    9dec:	3c4ce943 10e44f92 213ee43b e233a88f     C.L<.O..;.>!..3.
    9dfc:	d4a53690 ca104c0c 9e516421 6991afef     .6...L..!dQ....i
    9e0c:	1d992864 d12d4d0c 2e619c21 5a556991     d(...M-.!.a..iUZ
    9e1c:	85991864 68599166 46859916 126c59a1     d...f.Yh...F.Yl.
    9e2c:	a126c59a 0b368c59 d9c166ce d49c1868     ..&.Y.6..f..h...
    9e3c:	214e0562 418421ce d46750ad 4c583520     b.N!.!.A.Pg. 5XL
    9e4c:	a44305a1 0c128c60 28c4a316 8b1b3c31     ..C.`......(1<..
    9e5c:	4f0021ca 8421ce1d c6d12669 0e64f1a3     .!.O..!.i&....d.
    9e6c:	10ec43b1 b10ec43b e3479643 046c8919     .C..;...C.G...l.
    9e7c:	21cc1e50 ce107174 90ca4348 290ca432     P..!tq..HC..2..)
    9e8c:	3821d233 7341cd07 87341cd0 285101d4     3.!8..As..4...Q(
    9e9c:	6983224e a3c6d126 b10e64f1 3b10ec43     N".i&....d..C..;
    9eac:	d0b10ec4 6891a326 ca519926 3a1ca876     ....&..h&.Q.v..:
    9ebc:	b0ea8389 1f520011 718421cd d3490da0     ......R..!.q..I.
    9ecc:	1d3474d1 e887670d ce1b386c 70d9c368     .t4..g..l8..h..p
    9edc:	27189c36 ca165300 09476421 d3250cad     6..'.S..!dG...%.
    9eec:	357ad908 d3d5cb5b 54025424 6c21cb1c     ..z5[...$T.T..!l
    9efc:	cdad3071 2cd93364 21cc8738 321cc873     q0..d3.,8..!s..2
    9f0c:	7321cc87 5506bcc8 8421ce1e 478cac51     ..!s...U..!.Q..G
    9f1c:	363cd8f3 f363cd8f 8f363cd8 d8f363cd     ..<6..c..<6..c..
    9f2c:	1b94383c cf225601 ac61741d 20f36790     <8...V"..ta..g. 
    9f3c:	4f0d3c35 6438b3e3 e24d0716 381c49b0     5<.O..8d..M..I.8
    9f4c:	71c1ce87 57001c78 9c1dd430 68553161     ...qx..W0...a1Uh
    9f5c:	1a70d9c4 33c2d1a4 0b46785a 38942253     ..p....3ZxF.S".8
    9f6c:	c49a1264 24d09321 61d1a10e 386c39c3     d...!..$...a.9l8
    9f7c:	d0e38607 58001870 8c21cf1f a711aa63     ....p..X..!.c...
    9f8c:	0e48f934 50e8c3b1 b30eac3a e1644443     4.H....P:...CDd.
    9f9c:	531b4874 1f59068a 617c21cd d36550a3     tH.S..Y..!|a.Pe.
    9fac:	0b3a4d20 3a90e253 c39b0e68 6c39b0e6      M:.S..:h.....9l
    9fbc:	6e439b0e cc195a00 10f16c21 94c24f2e     ..Cn.Z..!l...O..
    9fcc:	990e9d28 11ace843 3e5c6472 0a5b021c     (...C...rd\>..[.
    9fdc:	6133a604 0113ffd2 21c8125c 8b96214c     ..3a....\..!L!..
    9fec:	58b962e5 e58b962e 0a5d0162 4133a204     .b.X....b.]...3A
    9ffc:	0193ffd2 a1080e5e 1296274d 422d2269     ....^...M'..i"-B
    a00c:	075f00a2 f14b6049 85086040 5b213ea4     .._.I`K.@`...>![
    a01c:	2a126114 9a735c21 da63844d 9b326d64     .a.*!\s.M.c.dm2.
    a02c:	6206988c 641dcc1f 41cd0741 341cd073     ...b...dA..As..4
    a03c:	b4884d07 9d3274d1 c9d3274c 491b4274     .M...t2.L'..tB.I
    a04c:	0f63006a 57542129 5bcb191a 09193323     j.c.)!TW...[#3..
    a05c:	cc1d6400 074f6c21 d07341cd 8ca4341c     .d..!lO..As..4..
    a06c:	64e99466 a64e993a 4668e993 126510a4     f..d:.N...hF..e.
    a07c:	475c212a c6864d1c 8e3e41c3 0025650c     *!\G.M...A>..e%.
    a08c:	21c80e66 ec93473c f74db43a 1e6706b1     f..!<G..:.M...g.
    a09c:	0f5b21eb c6464392 13284cd1 a34346ca     .![..CF..L(..FC.
    a0ac:	1e08741c 5889d222 00dd9432 21cc1e68     .t.."..X2...h..!
    a0bc:	cd07416c 1cd07341 6a4d0734 3470d224     lA..As..4.Mj$.p4
    a0cc:	c3470d1c 9c3470d1 0c690a94 333421c5     ..G..p4...i..!43
    a0dc:	f692075a 0f6a014b b9331647 3fb88d1d     Z...K.j.G.3....?
    a0ec:	12222c5a cc1d6b00 07416c21 d07341cd     Z,"..k..!lA..As.
    a0fc:	8d07341c 28e1334a 275f113c 466d11c4     .4..J3.(<._'..mF
    a10c:	0a6c18a9 413421c5 00a5ffda 2133186d     ..l..!4A....m.3!
    a11c:	d8a941a4 70d22548 5c34b869 970d2e1a     .A..H%.pi.4\....
    a12c:	06a52b86 212c156e 91a9416c 70d1c348     .+..n.,!lA..H..p
    a13c:	470d1c34 5270d1c3 2b0f6f2a 9c576421     4..G..pR*o.+!dW.
    a14c:	4ebea64d 001ac366 1dac1c70 d2223163     M..Nf...p...c1".
    a15c:	74c9d346 274c9d32 346d09d3 7341ce21     F..t2.L'..m4!.As
    a16c:	07521cd0 21ac1c71 cd124763 74c9d328     ..R.q..!cG..(..t
    a17c:	274c9d32 488cd1d3 a0e68399 290e6839     2.L'...H....9h.)
    a18c:	21280f72 5111414c 74c92324 73001ac7     r.(!LA.Q$#.t...s
    a19c:	54212912 24c90945 6af188c3 25224a2d     .)!TE..$...j-J"%
    a1ac:	a7117400 8e174421 e1a6670a 10a3229e     .t..!D...g..."..
    a1bc:	15750005 516c212c c3470d22 1c3470d1     ..u.,!lQ".G..p4.
    a1cc:	11c3470d 7600855b 4c1d2a14 430c9a51     .G..[..v.*.LQ..C
    a1dc:	3828d8c3 72e9928a 77001088 7c1d301b     ..(8...r...w.0.|
    a1ec:	664d2951 186cd0c3 2382911b 26449452     Q)Mf..l....#R.D&
    a1fc:	887285d1 12780850 6164212b a4519361     ..r.P.x.+!daa.Q.
    a20c:	425579f5 06285193 21ab1b79 4c9b5163     .yUB.Q(.y..!cQ.L
    a21c:	2cd8d343 c24e8b38 321cf893 d1654507     C..,8.N....2.Ee.
    a22c:	7a0e7c49 5421290e 88d5a071 03c48adc     I|.z.)!Tq.......
    a23c:	050e7b01 122733a2 1b28a4ed 7c1426ed     .{...3'...(..&.|
    a24c:	5c31c207 0f7d03f1 2133a205 09b68d94     ..1\..}...3!....
    a25c:	a93da245 6a0b7e01 72b56524 00468c88     E.=..~.j$e.r..F.
    a26c:	04000000 0000ffff                       ........

0000a274 <u8g2_font_open_iconic_weather_6x_t>:
    a274:	06060006 04020606 00303007 30003000     .........00..0.0
    a284:	003f0000 40360200 c3a9303f 10d9442f     ..?...6@?0../D..
    a294:	b3651e21 732b9864 c54daa69 e7933a99     !.e.d.+si.M..:..
    a2a4:	a5a43109 139298a4 06543a82 2e09688b     .1.......:T..h..
    a2b4:	82bc15e1 2403f01f 45a13bc1 81d50ab0     .......$.;.E....
    a2c4:	c84d4c4a 5f410000 17c22c30 2110d944     JLM...A_0,..D..!
    a2d4:	64b3651e 45c26c18 10e8083c 82c6469b     .e.d.l.E<....F..
    a2e4:	e3491688 26902451 c4965081 07105161     ..I.Q$.&.P..aQ..
    a2f4:	191c3926 12689085 38a9b281 3cf26753     &9....h....8Sg.<
    a304:	94b48621 42725314 60ca8750 25c12d11     !....SrBP..`.-.%
    a314:	f05782bc 24807e03 08b42778 503aa156     ..W..~.$x'..V.:P
    a324:	1909a989 ee514200 c09fc26b 680b483a     .....BQ.k...:H.h
    a334:	88983ce1 8d2a4132 6c29910b e9ef8e84     .<..2A*...)l....
    a344:	4e907883 c9b849c2 5a28d936 9760b325     .x.N.I..6.(Z%.`.
    a354:	2c65630b 3e91c50d 0820c890 a84541ac     .ce,...>.. ..AE.
    a364:	3a81940a 1169094c 23c7a035 460c2a69     ...:L.i.5..#i*.F
    a374:	61a41ce9 7e430002 2fc22c30 2108e944     ...a..C~0,./D..!
    a384:	64b3651e 69732b98 99c50e2a 09e7933a     .e.d.+si*...:...
    a394:	a4a5a431 82139298 8b06543a e12e0968     1.......:T..h...
    a3a4:	8902bc15 4c4a5281 94386825 024d0180     .....RJL%h8...M.
    a3b4:	08113406 1059a10d 24e0c701 a073c326     .4....Y....$&.s.
    a3c4:	32a1500c f0cb0344 41c30e11 91860c98     .P.2D......A....
    a3d4:	248c3064 19246183 60c9230c c3064918     d0.$.a$..#.`.I..
    a3e4:	46183248 9230c192 6491860c 02268c30     H2.F..0....d0.&.
    a3f4:	0000d442 7b6e5944 2b012dc2 a25412b4     B...DYn{.-.+..T.
    a404:	9d1a80d4 54a91308 23234a90 41ac0572     .......T.J##r..A
    a414:	d210a055 8f406a22 9854d247 365192cb     U..."j@.G.T...Q6
    a424:	28d92709 c166551a 4b028214 612b8910     .'.(.Uf....K..+a
    a434:	82042c24 a18c0cb0 aa063832 82281500     $,......28....(.
    a444:	d6069844 02601240 1205a029 306e4500     D...@.`.)....En0
    a454:	c22dc22c ad8d506a 11a08e84 6066031a     ,.-.jP........f`
    a464:	3181980c 80c60660 46821a19 63270ce0     ...1`......F..'c
    a474:	4f908474 8b3651d2 0e10e566 0c0841cc     t..O.Q6.f....A..
    a484:	1860c606 60618318 3181860c c0e1010c     ..`...a`...1....
    a494:	a2c7041c 4e946d59 c74241f2 1c0d38c8     ....Ym.N.AB..8..
    a4a4:	06342341 3018c0cc 0cc06303 3433018c     A#4....0.c....34
    a4b4:	11d08d04 6c6a8356 00005825 ff040000     ....V.jl%X......
    a4c4:	000000ff                                ....

0000a4c8 <u8g2_cb_r0>:
    a4c8:	000022d9 0000235d 00002389 00002564     ."..]#...#..d%..
    a4d8:	0000253a 0000254c 0000255e 00002564     :%..L%..^%..d%..
    a4e8:	00002564 000027a2 000027ae 000027ea     d%...'...'...'..
    a4f8:	0000279e 000027ea 0000279e 000027d0     .'...'...'...'..
    a508:	000027de                                .'..

0000a50c <u8x8_d_gdey0154_152x304_init_seq>:
    a50c:	16061518 16171617 16011517 16001603     ................
    a51c:	162b162b 153c1509 1514fe04 150f1600     +.+...<.........
    a52c:	153a1630 16981661 15ff1631 15121682     0.:.a...1.......
    a53c:	19871650 000000ff                       P.......

0000a544 <u8x8_d_ssd1607_to_display_seq>:
    a544:	19121518 000000ff                       ........

0000a54c <u8x8_ssd1607_200x200_display_info>:
    a54c:	3c780100 64326464 003d0900 96280400     ..x<dd2d..=...(.
    a55c:	00001326 00980130 00002a90 00002a76     &...0....*..v*..
    a56c:	00002a46 00002a1e 000029f6 636e6965     F*...*...)..einc
    a57c:	3025203a 00006432 64323025 00000043     : %02d..%02dC...
    a58c:	64333025 00000050 25207325 2d643230     %03dP...%s %02d-
    a59c:	64323025 2530322d 00643230 3a776f4e     %02d-20%02d.Now:
    a5ac:	2e332520 3b436631 33302520 3b6d6d64      %3.1fC; %03dmm;
    a5bc:	32302520 00252564 4d204449 00303334      %02d%%.ID M430.
    a5cc:	372d4652 00426439 2e332042 00563439     RF-79dB.B 3.94V.
    a5dc:	646e6f4d 00007961 73657554 00796164     Monday..Tuesday.
    a5ec:	6e646557 61647365 00000079 72756854     Wednesday...Thur
    a5fc:	79616473 00000000 64697246 00007961     sday....Friday..
    a60c:	75746153 79616472 00000000 646e7553     Saturday....Sund
    a61c:	00007961 000037a0 00003782 0000373c     ay...7...7..<7..
    a62c:	0000365a 0000373c 00003774 0000373c     Z6..<7..t7..<7..
    a63c:	0000365a 00003782 00003782 00003774     Z6...7...7..t7..
    a64c:	0000365a 00003652 00003652 00003652     Z6..R6..R6..R6..
    a65c:	000039b8 00003e00 00003cc0 00003cc0     .9...>...<...<..
    a66c:	00003cbc 00003dd8 00003dd8 00003dca     .<...=...=...=..
    a67c:	00003cbc 00003dd8 00003dca 00003dd8     .<...=...=...=..
    a68c:	00003cbc 00003de0 00003de0 00003de0     .<...=...=...=..
    a69c:	00003fe4                                .?..

0000a6a0 <_global_impure_ptr>:
    a6a0:	20000060 000053c8 0000543c 0000543c     `.. .S..<T..<T..
    a6b0:	000053ac 0000543c 0000543c 0000543c     .S..<T..<T..<T..
    a6c0:	0000543c 0000543c 0000543c 000053b4     <T..<T..<T...S..
    a6d0:	00004e96 0000543c 00004e50 00004ea0     .N..<T..PN...N..
    a6e0:	0000543c 00004eec 000050d6 000050d6     <T...N...P...P..
    a6f0:	000050d6 000050d6 000050d6 000050d6     .P...P...P...P..
    a700:	000050d6 000050d6 000050d6 0000543c     .P...P...P..<T..
    a710:	0000543c 0000543c 0000543c 0000543c     <T..<T..<T..<T..
    a720:	0000543c 0000543c 0000543c 0000543c     <T..<T..<T..<T..
    a730:	0000543c 00004ef4 0000503c 0000543c     <T...N..<P..<T..
    a740:	0000503c 0000543c 0000543c 0000543c     <P..<T..<T..<T..
    a750:	0000543c 00005106 0000543c 0000543c     <T...Q..<T..<T..
    a760:	0000510e 0000543c 0000543c 0000543c     .Q..<T..<T..<T..
    a770:	0000543c 0000543c 000051b0 0000543c     <T..<T...Q..<T..
    a780:	0000543c 000051e2 0000543c 0000543c     <T...Q..<T..<T..
    a790:	0000543c 0000543c 0000543c 0000543c     <T..<T..<T..<T..
    a7a0:	0000543c 0000543c 0000543c 0000543c     <T..<T..<T..<T..
    a7b0:	000052dc 00005310 0000503c 0000503c     .R...S..<P..<P..
    a7c0:	0000503c 00005322 00005310 0000543c     <P.."S...S..<T..
    a7d0:	0000543c 0000532a 0000543c 00005244     <T..*S..<T..DR..
    a7e0:	0000540a 00005380 0000527a 0000543c     .T...S..zR..<T..
    a7f0:	00005282 0000543c 000053d8 0000543c     .R..<T...S..<T..
    a800:	0000543c 0000533a 00464e49 00666e69     <T..:S..INF.inf.
    a810:	004e414e 006e616e 33323130 37363534     NAN.nan.01234567
    a820:	42413938 46454443 00000000 33323130     89ABCDEF....0123
    a830:	37363534 62613938 66656463 00000000     456789abcdef....
    a840:	6c756e28 0000296c 00000030              (null)..0...

0000a84c <blanks.7223>:
    a84c:	20202020 20202020 20202020 20202020                     

0000a85c <zeroes.7224>:
    a85c:	30303030 30303030 30303030 30303030     0000000000000000
    a86c:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
    a87c:	00000000                                ....

0000a880 <__mprec_bigtens>:
    a880:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    a890:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    a8a0:	7f73bf3c 75154fdd                       <.s..O.u

0000a8a8 <__mprec_tens>:
    a8a8:	00000000 3ff00000 00000000 40240000     .......?......$@
    a8b8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    a8c8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    a8d8:	00000000 412e8480 00000000 416312d0     .......A......cA
    a8e8:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    a8f8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    a908:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    a918:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    a928:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    a938:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    a948:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    a958:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    a968:	79d99db4 44ea7843                       ...yCx.D

0000a970 <p05.6055>:
    a970:	00000005 00000019 0000007d 49534f50     ........}...POSI
    a980:	00000058 0000002e                       X.......

0000a988 <_ctype_>:
    a988:	20202000 20202020 28282020 20282828     .         ((((( 
    a998:	20202020 20202020 20202020 20202020                     
    a9a8:	10108820 10101010 10101010 10101010      ...............
    a9b8:	04040410 04040404 10040404 10101010     ................
    a9c8:	41411010 41414141 01010101 01010101     ..AAAAAA........
    a9d8:	01010101 01010101 01010101 10101010     ................
    a9e8:	42421010 42424242 02020202 02020202     ..BBBBBB........
    a9f8:	02020202 02020202 02020202 10101010     ................
    aa08:	00000020 00000000 00000000 00000000      ...............
	...

0000aa8c <_init>:
    aa8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    aa8e:	46c0      	nop			; (mov r8, r8)
    aa90:	bcf8      	pop	{r3, r4, r5, r6, r7}
    aa92:	bc08      	pop	{r3}
    aa94:	469e      	mov	lr, r3
    aa96:	4770      	bx	lr

0000aa98 <__init_array_start>:
    aa98:	00006375 	.word	0x00006375

0000aa9c <__frame_dummy_init_array_entry>:
    aa9c:	000000cd                                ....

0000aaa0 <_fini>:
    aaa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    aaa2:	46c0      	nop			; (mov r8, r8)
    aaa4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    aaa6:	bc08      	pop	{r3}
    aaa8:	469e      	mov	lr, r3
    aaaa:	4770      	bx	lr

0000aaac <__fini_array_start>:
    aaac:	000000a5 	.word	0x000000a5
